
from typing import Any, Container, Dict, Generic, Iterable, Iterator, List, Optional, Set, Tuple, TypeVar, Union, Text



def about(apiVersion: bool = False,application: bool = False,batch: bool = False,buildDirectory: bool = False,buildVariant: bool = False,codeset: bool = False,compositingManager: bool = False,connected: bool = False,ctime: bool = False,currentDate: bool = False,currentTime: bool = False,cutIdentifier: bool = False,date: bool = False,environmentFile: bool = False,evalVersion: bool = False,file: bool = False,fontInfo: bool = False,helpDataDirectory: bool = False,installedVersion: bool = False,ioVersion: bool = False,irix: bool = False,is64: bool = False,languageResources: bool = False,linux: bool = False,linux64: bool = False,liveUpdate: bool = False,localizedResourceLocation: bool = False,ltVersion: bool = False,macOS: bool = False,macOSppc: bool = False,macOSx86: bool = False,ntOS: bool = False,operatingSystem: bool = False,operatingSystemVersion: bool = False,preferences: bool = False,product: bool = False,qtVersion: bool = False,tablet: bool = False,tabletMode: bool = False,uiLanguage: bool = False,uiLanguageForStartup: bool = False,uiLanguageIsLocalized: bool = False,uiLocaleLanguage: bool = False,version: bool = False,win64: bool = False,windowManager: bool = False,windows: bool = False) -> None:
    """
    フラグなしで実行される場合、このコマンドはアプリケーションのバージョン情報を表示します。いずれかのフラグが指定されている場合、指定したバージョン情報を返します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    apiVersion (boolean): APIのバージョンを返します。

    -----------------------------------------

    application (boolean): アプリケーション名の文字列を返します。

    -----------------------------------------

    batch (boolean): アプリケーションがバッチモードの場合、true(真)を返します。

    -----------------------------------------

    buildDirectory (boolean): ビルドディレクトリの文字列を返します。

    -----------------------------------------

    buildVariant (boolean): ビルドバリアント文字列を返します。

    -----------------------------------------

    codeset (boolean): Mayaが実行されているロケールのcodeset(codepage)を表す文字列を返します。たとえば、「UTF-8」、「ISO-8859-1」、「1252」などの値が返されます。ただし、codesetの値と命名規則はプラットフォームによって大きく異なりますので注意してください。意味は同じでもフォーマットが異なる可能性があります(例:「utf8」と「UTF-8」)。

    -----------------------------------------

    compositingManager (boolean): Linuxでは、実行中の合成マネージャが存在するときにtrue(真)を返し、その他のすべてのプラットフォームでは常にtrue(真)を返します。

    -----------------------------------------

    connected (boolean): ユーザがインターネットに接続されているかどうかを返します。

    -----------------------------------------

    ctime (boolean): WedJan0202:03:551980¥n¥0の形式で現在の時間を返します。

    -----------------------------------------

    currentDate (boolean): yyyy/mm/dd形式で現在の日付を返します。例:2003/05/04

    -----------------------------------------

    currentTime (boolean): hh:mm:ss形式で現在のタイムを返します。例:14:27:53

    -----------------------------------------

    cutIdentifier (boolean): カット文字列を返します。

    -----------------------------------------

    date (boolean): ビルド日の文字列を返します。

    -----------------------------------------

    environmentFile (boolean): アプリケーションの既定のファイルの場所を返します。

    -----------------------------------------

    evalVersion (boolean): このフラグは非推奨になりました。評価バージョンのサポートは終了しているため、常にfalseを返します。

    -----------------------------------------

    file (boolean): ファイルバージョン文字列を返します。

    -----------------------------------------

    fontInfo (boolean): 要求されたフォントの仕様と、実際に使用されているフォントの仕様の文字列を返します。

    -----------------------------------------

    helpDataDirectory (boolean): ヘルプデータのフォルダを返します。

    -----------------------------------------

    installedVersion (boolean): 製品バージョンの文字列を返します。

    -----------------------------------------

    ioVersion (boolean): アプリケーションがMayaLTバージョンの場合、true(真)を返します。

    -----------------------------------------

    irix (boolean): オペレーティングシステムがIRIXの場合、true(真)を返します。IRIXのサポートが除去されている場合は常にfalse(偽)です。

    -----------------------------------------

    is64 (boolean): アプリケーションが64ビットの場合、true(真)を返します。

    -----------------------------------------

    languageResources (boolean): 現在インストールされている言語リソースの文字配列を返します。各文字列エントリは、コロン(':')で区切られた3つの要素で構成されます。最初のトークンはロケールコード(ISO639-1言語コードの後に続くISO3166-1国コード)です。2番目のトークンは英語の言語名です。3番目のトークンはalpha-3コード(ISO639-2)です。たとえば、英語の場合は、「en_US:English:enu」と表現されます。

    -----------------------------------------

    linux (boolean): オペレーティングシステムがLinuxの場合、true(真)を返します。

    -----------------------------------------

    linux64 (boolean): オペレーティングシステムがLinux64ビットの場合、true(真)を返します。

    -----------------------------------------

    liveUpdate (boolean): オートデスクのフォーマットされた製品情報を返します。

    -----------------------------------------

    localizedResourceLocation (boolean): 代替言語で実行されている場合は、ローカライズされたリソースディレクトリの最上位レベルへのパスを返します。既定の言語で実行されている場合は、空の文字列が返されます。

    -----------------------------------------

    ltVersion (boolean): アプリケーションがMayaLTバージョンの場合、true(真)を返します。

    -----------------------------------------

    macOS (boolean): オペレーティングシステムがMacOSの場合、true(真)を返します。

    -----------------------------------------

    macOSppc (boolean): オペレーティングシステムがPowerPCMacintoshの場合、true(真)を返します。

    -----------------------------------------

    macOSx86 (boolean): オペレーティングシステムがIntelMacintoshの場合、true(真)を返します。

    -----------------------------------------

    ntOS (boolean): オペレーティングシステムがWindowsの場合、true(真)を返します。

    -----------------------------------------

    operatingSystem (boolean): オペレーティングシステムのタイプを返します。有効な戻り値のタイプは「nt」、「win64」、「mac」、「linux」、「linux64」です。

    -----------------------------------------

    operatingSystemVersion (boolean): オペレーティングシステムのバージョンを返します。Linuxの場合は、uname-srvmと同じものを返します。

    -----------------------------------------

    preferences (boolean): プリファレンスディレクトリの場所を返します。

    -----------------------------------------

    product (boolean): ライセンス製品名を返します。

    -----------------------------------------

    qtVersion (boolean): Qtバージョン文字列を返します。

    -----------------------------------------

    tablet (boolean): Windowsのみ。PCがタブレットPCの場合、trueを返します。

    -----------------------------------------

    tabletMode (boolean): Windows8(以上)のみ。デバイスがタブレットPCの場合は、デバイスが現在実行されている変換モードです。tabletまたはlaptop(キーボードが接続されている)を返します。tabletフラグを参照してください。

    -----------------------------------------

    uiLanguage (boolean): Mayaが実行されている言語を返します。たとえば、英語の場合は「en_US」、日本語の場合は「ja_JP」が返されます。

    -----------------------------------------

    uiLanguageForStartup (boolean): Mayaの次の起動で使用される言語を返します。これは、設定ファイルから読み込まれ、プリファレンスのUI言語を設定した後に再び書き込まれます。

    -----------------------------------------

    uiLanguageIsLocalized (boolean): 既定(英語)ではなく、代替言語で実行されている場合はtrue(真)を返します。

    -----------------------------------------

    uiLocaleLanguage (boolean): OSの言語ロケールを返します。既定は英語です。

    -----------------------------------------

    version (boolean): バージョン文字列を返します。

    -----------------------------------------

    win64 (boolean): オペレーティングシステムがWindowsx64ベースの場合、true(真)を返します。

    -----------------------------------------

    windowManager (boolean): 実行されていると想定されるウィンドウマネージャの名前を返します。

    -----------------------------------------

    windows (boolean): オペレーティングシステムがWindowsベースの場合、true(真)を返します。

    -----------------------------------------

    Return Value:
    None: stringアプリケーションのバージョン情報
    """
    pass

    
def affectedNet(name: str = "",type: str = "") -> None:
    """
    このコマンドはノードまたはノード タイプのアトリビュートのリストを取得します。かつ、ソース ノードのアトリビュートが目的ノードのアトリビュートに影響を与える場合に接続される、TdnAffect タイプのノードを各アトリビュートに 1 つずつ作成します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    name (string): このコマンドに対して使用する名前です。

    -----------------------------------------

    type (string): 1つのノードではなく、指定したノードタイプの情報を取得します

    -----------------------------------------

    Return Value:
    None: なし照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def affects(by: bool = False,type: str = "") -> None:
    """
    このコマンドは、指定されたアトリビュートに作用するノードまたはノード タイプに関するアトリビュートのリストを返します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    by (boolean): 指定したアトリビュートに作用するアトリビュートではなく、指定したアトリビュートの作用を受けるアトリビュートを表示します。

    -----------------------------------------

    type (string): 「作用対象」情報を取得するスタティックノードタイプ

    -----------------------------------------

    Return Value:
    None: string作用される/作用するアトリビュートのリスト
    """
    pass

    
def align(alignToLead: bool = False,coordinateSystem: str = "",xAxis: str = "",yAxis: str = "",zAxis: str = "") -> None:
    """
    オブジェクトを X、Y、Z 軸に沿って位置合わせまたはスプレッドします。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    alignToLead (boolean): 設定すると、先頭オブジェクトから最小値、中央値、または最大値が計算されます。設定しないと、すべてのオブジェクトの平均値になります。既定はfalseです。

    -----------------------------------------

    coordinateSystem (name): X、Y、Z座標を定義します。既定はワールド座標です。

    -----------------------------------------

    xAxis (string): none、min、mid、max、dist、stackのいずれか。実行する位置合わせの種類を定義します。既定はnoneです。

    -----------------------------------------

    yAxis (string): none、min、mid、max、dist、stackのいずれか。実行する位置合わせの種類を定義します。既定はnoneです。

    -----------------------------------------

    zAxis (string): none、min、mid、max、dist、stackのいずれか。実行する位置合わせの種類を定義します。既定はnoneです。

    -----------------------------------------

    Return Value:
    None: booleantrue/false
    """
    pass

    
def bakePartialHistory(allShapes: bool = False,postSmooth: bool = False,preCache: bool = False,preDeformers: bool = False,prePostDeformers: bool = False) -> None:
    """
    このコマンドは、可能な場合に、シェイプ ノードのコンストラクション ヒストリのセクションをベイク処理するのに使用します。通常はヒストリにモデリング操作とデフォーマの両方があるシェイプ上で使用されます。このコマンドに -prePostDeformers フラグを付けて使用するとグラフのモデリング部分がベイク処理されるため、デフォーマのみが残ります。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    allShapes (boolean): シーン全体のすべてのシェイプでベイク処理を実行するように指定します。既定では、選択したオブジェクトのみベイク処理されます。このオプションが指定されていてシーンにシェイプがない場合、このコマンドは何も実行せずに正常に終了します。

    -----------------------------------------

    postSmooth (boolean): スムージング操作をスキン頂点で実行するかどうかを指定します。このスムージングは、他の頂点値からかけ離れた頂点でのみ実行されます。既定はfalseです。

    -----------------------------------------

    preCache (boolean): キャッシング操作の前に行われるすべてのヒストリ操作をベイク処理するように指定します。照会モードでは、ベイク処理されるノードのリストを返します。

    -----------------------------------------

    preDeformers (boolean): デフォーマの前に行われるヒストリ内のすべてのモデリング操作をベイク処理するように指定します。照会モードでは、ベイク処理されるノードのリストを返します。

    -----------------------------------------

    prePostDeformers (boolean): ヒストリ内のデフォーマの前か後ろかにかかわらず、ヒストリ内のすべてのモデリング操作をベイク処理するように指定します。-prePostDeformersフラグと-preDeformersフラグのどちらも指定していないと、既定でprePostDeformersが使用されます。照会モードでは、ベイク処理されるノードのリストを返します。

    -----------------------------------------

    Return Value:
    None: stringベイク処理されたシェイプの名前照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def color(rgbColor: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),userDefined: int = 1) -> None:
    """
    このコマンドは、指定したオブジェクトの固定ワイヤフレーム カラーがそのオブジェクトのクラス カラーになるように設定するか、または -ud/userDefined フラグを指定している場合は、ユーザ定義カラーの 1 つを設定します。ユーザが浮動小数点 RGB カラーが必要な場合は、-rgb/rgbColor フラグを指定できます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    rgbColor ([float, float, float]): 選択したオブジェクトに設定する、RGBカラーを指定します。

    -----------------------------------------

    userDefined (int): 選択したオブジェクトに設定する、ユーザ定義のカラーインデックスを指定します。有効な数値は1～8です。

    -----------------------------------------

    Return Value:
    None: なし
    """
    pass

    
def colorIndex(hueSaturationValue: bool = False,resetToFactory: bool = False,resetToSaved: bool = False) -> None:
    """
    このインデックスはカラー パレットのカラー インデックスを指定します。R、G、B の値(0-1)は、カラーの RGB 値(または -hsv フラグ使用の場合は HSV 値)を指定します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    hueSaturationValue (boolean): RGB値が実際にはHSV値であることを示します。照会時、3つの浮動小数点の配列としてHSV値を返します。

    -----------------------------------------

    resetToFactory (boolean): カラーインデックスパレットのエントリをすべて、工場出荷時の既定にリセットします。

    -----------------------------------------

    resetToSaved (boolean): カラーパレットのエントリをすべて、保存した値にリセットします。

    -----------------------------------------

    Return Value:
    None: int成功時に 1 を返します。照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def colorManagementCatalog(addTransform: str = "",editUserTransformPath: str = "",listSupportedExtensions: bool = False,listTransformConnections: bool = False,path: str = "",queryUserTransformPath: bool = False,removeTransform: str = "",transformConnection: str = "",type: str = "") -> None:
    """
    この取り消し不能なアクションは、オートデスクのネイティブ カラー トランスフォーム カタログからカスタム カラー トランスフォームの追加と除去を実行します。カタログにカスタム カラー トランスフォームが追加されると、それらは組み込みのオートデスク ネイティブ カラー トランスフォームと同様の方法で使用できます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    addTransform (string): トランスフォームをコレクションに追加することができます。

    -----------------------------------------

    editUserTransformPath (string): ユーザトランスフォームディレクトリを編集します。ディレクトリを変更することにより、現在追加されているすべてのカスタムトランスフォームを変更し、新しいものを表示することができます。

    -----------------------------------------

    listSupportedExtensions (boolean): 追加変換でサポートされているファイル拡張子をリストします。このリストは、すべての変換に対して有効です。したがって、このフラグにtypeフラグを使用する必要はありません。

    -----------------------------------------

    listTransformConnections (boolean): 転送元(「ビュー」および「出力」タイプの場合)、または転送先(「入力」および「レンダリングスペース」タイプの場合)として使用できるトランスフォームをリストして、カスタムトランスフォームを残りの変換コレクションに接続します。

    -----------------------------------------

    path (string): addTransformモードでは、トランスフォームデータファイルへのパスです。

    -----------------------------------------

    queryUserTransformPath (boolean): ユーザトランスフォームディレクトリを照会します。

    -----------------------------------------

    removeTransform (string): トランスフォームをコレクションから除去することができます。

    -----------------------------------------

    transformConnection (string): addTransformモードでは、追加されたトランスフォームが接続される既存のトランスフォームです。入力トランスフォームまたはレンダリングスペーストランスフォームでは、これは転送先になります。ビューまたは出力トランスフォームでは、これは転送元になります。

    -----------------------------------------

    type (string): 追加、除去されたトランスフォームのタイプ、またはそれらのトランスフォームの接続がリストされます。それらは「ビュー」、「レンダリングスペース」、「入力」、「出力」のうちの1つです。

    -----------------------------------------

    Return Value:
    None: なし
    """
    pass

    
def colorManagementConvert(toDisplaySpace: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0)) -> None:
    """
    このコマンドは、レンダリング(またはワーキング)スペースのカラー値を変換してスペースのカラー値を表示するために使用できます。これは、画面にペイントしたカラーを使用して、カラー管理を自分でハンドルする必要があるカスタム UI を作成する場合に便利です。カラー管理のユーザ プリファレンスで設定した現在のビュー変換が使用されます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    toDisplaySpace ([float, float, float]): 指定されたRGB値を変換してスペースを表示します。

    -----------------------------------------

    Return Value:
    None: なし
    """
    pass

    
def colorManagementFileRules(addRule: str = "",colorSpace: str = "",down: str = "",evaluate: str = "",extension: str = "",listRules: bool = False,load: bool = False,moveUp: str = "",pattern: str = "",remove: str = "",restoreDefaults: bool = False,save: bool = False) -> None:
    """
    この取り消し不可能なアクションは、ファイルからカラー情報を読み取るディペンデンシー グラフ ノードへの初期入力カラー スペースを割り当てる際に Maya が使用するルールのリストを管理します。ルールは一連の責任として構造化されています。優先順位が高いルールから低いルールへと並べられていて、各ルールがパスのパターンおよび拡張子を照合します。指定されたファイル パスと一致するルールがあった場合、ルール評価の結果としてカラー スペースが返され、それ以降のルールは考慮されません。優先順位が最も低いルールは常に一致を返します。ルールの追加、除去、およびリスト内の優先順位の変更を行うことができます。ルールごとにファイル パス パターン、拡張子、およびカラー スペースを変更できます。ルール リストをユーザ プリファレンスに保存し、そこからロードすることができます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    addRule (string): 引数名を含むルールを、優先順位が最高のルールとしてルールリストに追加します。このフラグを使用する場合は、pattern、extension、およびcolorSpaceも使用して、ファイルルールのパターン、拡張子、およびカラースペースをそれぞれ指定する必要があります。

    -----------------------------------------

    colorSpace (string): ルールの入力カラースペースです。ルールがファイルパスと一致した場合は、このカラースペースが返されます。このカラースペースは入力カラースペースリスト内の既存のカラースペースと一致する必要があります。

    -----------------------------------------

    down (string): 引数名を含むルールの優先順位を1つ下げます。

    -----------------------------------------

    evaluate (string): ルールのリストを評価し、引数のファイルパスに対応する入力カラースペースの名前を返します。

    -----------------------------------------

    extension (string): ルールのファイル拡張子には大文字と小文字の区別があります

    -----------------------------------------

    listRules (boolean): ルール名の文字列を順番に並べた配列を返します。優先度が最低のルール(ルール0)が最初で、優先度が最高のルールが配列内の最後になります。

    -----------------------------------------

    load (boolean): Mayaプリファレンスからルールを読み取ります。既存のルールがクリアされます。

    -----------------------------------------

    moveUp (string): 引数名を含むルールの優先順位を1つ上げます。

    -----------------------------------------

    pattern (string): ルールのファイルパスパターンです。これは、globパターンとして表される、ファイルパス内の一致するサブストリングです。たとえば、「*」はすべてのファイルと一致します。globパターン構文の詳細については、http://en.wikipedia.org/wiki/Glob_%28programming%29を参照してください。

    -----------------------------------------

    remove (string): ルールのリストから引数名を含むルールを除去します。

    -----------------------------------------

    restoreDefaults (boolean): ルールのリストを既定の設定にのみ復元します。

    -----------------------------------------

    save (boolean): Mayaプリファレンスにルールを保存します。

    -----------------------------------------

    Return Value:
    None: なし照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def colorManagementPrefs(cmConfigFileEnabled: bool = False,cmEnabled: bool = False,colorManagePots: bool = False,colorManagedNodes: bool = False,colorManagementSDKVersion: str = "",configFilePath: str = "",defaultInputSpaceName: str = "",equalsToPolicyFile: str = "",exportPolicy: str = "",inputSpaceNames: bool = False,loadPolicy: str = "",loadedDefaultInputSpaceName: str = "",loadedOutputTransformName: str = "",loadedRenderingSpaceName: str = "",loadedViewTransformName: str = "",missingColorSpaceNodes: bool = False,ocioRulesEnabled: bool = False,outputTarget: str = "",outputTransformEnabled: bool = False,outputTransformName: str = "",outputTransformNames: bool = False,outputTransformUseColorConversion: bool = False,outputUseViewTransform: bool = False,policyFileName: str = "",popupOnError: bool = False,refresh: bool = False,renderingSpaceName: str = "",renderingSpaceNames: bool = False,restoreDefaults: bool = False,viewTransformName: str = "",viewTransformNames: bool = False) -> None:
    """
    このコマンドによって、シーン内のカラー管理グローバル データの照会と編集が可能になります。また、ビュー トランスフォームを設定したり、有効になったビューのカラー処理を自動的に設定するレンダリング スペースを設定したりすることもできます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    cmConfigFileEnabled (boolean): OCIO設定ファイルの適用をオンまたはオフにします。設定した場合、プリファレンスで設定したカラー管理設定が使用されます。

    -----------------------------------------

    cmEnabled (boolean): カラー管理を全般的にオンまたはオフにします。設定した場合、プリファレンスで設定したカラー管理設定が使用されます。

    -----------------------------------------

    colorManagePots (boolean): UIでカラーポットのカラー管理をオンまたはオフにします。設定すると、カラーポットのカラーはレンダリングスペースで取得され、プリファレンスで設定したビュートランスフォームによって変換された後に表示されます。

    -----------------------------------------

    colorManagedNodes (boolean): 入力カラースペースのピクセルをレンダリングスペースに移動するために、カラー管理を適用するすべてのノードの名前を取得します。例としては、ファイルテクスチャノードが含まれます。

    -----------------------------------------

    colorManagementSDKVersion (string): Mayaで使用されるカラー管理SDKのバージョンを取得します。

    -----------------------------------------

    configFilePath (string): カラー管理が有効になっている場合に使用される設定ファイルです。

    -----------------------------------------

    defaultInputSpaceName (string): このフラグは現在サポートしていません。詳細については、colorManagementFileRulesコマンドを参照してください。

    -----------------------------------------

    equalsToPolicyFile (string): 現在ロードされているポリシー設定がコマンドの引数であるポリシーファイルに記述された設定と同じかどうかを照会します。照会モードでは、このフラグに値が必要になります。

    -----------------------------------------

    exportPolicy (string): カラー管理パラメータをポリシーファイルに書き出す

    -----------------------------------------

    inputSpaceNames (boolean): 使用可能な入力カラースペースのリストを返します。入力カラースペースUIポップアップの入力に使用されます。

    -----------------------------------------

    loadPolicy (string): カラー管理ポリシーファイルをロードします。このファイルはカラー管理設定をオーバーライドします。

    -----------------------------------------

    loadedDefaultInputSpaceName (string): このフラグは現在サポートしていません。

    -----------------------------------------

    loadedOutputTransformName (string): ロードされている出力トランスフォームを取得します。ファイルを開く、読み込み、参照で使用され、見つからないカラースペースやトランスフォームを確認します。

    -----------------------------------------

    loadedRenderingSpaceName (string): ロードされているレンダリングスペースを取得します。ファイルを開く、読み込み、参照で使用され、見つからないカラースペースやトランスフォームを確認します。

    -----------------------------------------

    loadedViewTransformName (string): ロードされているビュートランスフォームを取得します。ファイルを開く、読み込み、参照で使用され、見つからないカラースペースやトランスフォームを確認します。

    -----------------------------------------

    missingColorSpaceNodes (boolean): 選択したトランスフォームコレクションに定義されていないカラースペースを持つノードの名前を取得します。

    -----------------------------------------

    ocioRulesEnabled (boolean): OCIOライブラリからのカラースペース割り当てルールの使用をオンまたはオフにします。

    -----------------------------------------

    outputTarget (string): outputTransformEnabledまたはtheoutputTransformNameのどちらのフラグが出力に適用されるかを示します。有効な値は、「renderer」または「playblast」です。照会モードでは、このフラグに値が必要になります。

    -----------------------------------------

    outputTransformEnabled (boolean): ビューポート外のレンダーに対して、出力トランスフォームの適用のオン/オフを切り替えます。設定した場合、プリファレンスで設定した出力トランスフォームが使用されます。

    -----------------------------------------

    outputTransformName (string): ビューポート外のレンダーに対して適用される出力トランスフォームです。出力使用ビュートランスフォームモードを無効にします。

    -----------------------------------------

    outputTransformNames (boolean): 使用可能な出力トランスフォームのリストを返します。

    -----------------------------------------

    outputTransformUseColorConversion (boolean): ビューポートレンダーの出力カラースペース用のカラースペース変換の選択のオン/オフを切り替えます。設定されると、変換カラースペースが使用され、ビュー変換が使用されます。

    -----------------------------------------

    outputUseViewTransform (boolean): ビュートランスフォームモードの使用をオンにします。このモードでは、出力トランスフォームはビュートランスフォームと一致するように設定されています。このモードをオフにするには、outputTransformNameフラグを使用して出力トランスフォームを設定します。

    -----------------------------------------

    policyFileName (string): ポリシーファイル名を設定する

    -----------------------------------------

    popupOnError (boolean): このコマンドの呼び出し時に、エラー発生時のモーダルポップアップ(標準スクリプトエディタのエラー表示も同様)の表示/非表示を切り替えます。既定はオフです。

    -----------------------------------------

    refresh (boolean): カラー管理を更新します。

    -----------------------------------------

    renderingSpaceName (string): レンダリング中に使用されるカラースペースです。これはビュートランスフォームに対するソースカラースペース(カラー管理されたビューとカラー管理されたUIコントロール用)であり、カラー管理された入力ピクセルに対する転送先カラースペースです。

    -----------------------------------------

    renderingSpaceNames (boolean): 使用可能なレンダリングスペースのリストを返します。カラー管理プリファレンスUIポップアップの入力に使用されます。

    -----------------------------------------

    restoreDefaults (boolean): カラー管理設定を既定値に復元します。

    -----------------------------------------

    viewTransformName (string): カラー管理されたビューアとカラー管理されたUIコントロールを適用するためのビュートランスフォームです。

    -----------------------------------------

    viewTransformNames (boolean): 使用可能なビュートランスフォームのリストを返します。カラー管理プリファレンスUIポップアップの入力に使用されます。

    -----------------------------------------

    Return Value:
    None: なし照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def createDisplayLayer(empty: bool = False,makeCurrent: bool = False,name: str = "",noRecurse: bool = False,number: int = 1) -> None:
    """
    新しいディスプレイ レイヤを作成します。ディスプレイ レイヤには、ディスプレイ レイヤのグローバル パラメータの基準インデックス番号より大きい、まだ割り当てられていない最初の番号が割り当てられます。通常、すべてのオブジェクトとその子孫が新規のディスプレイ レイヤに追加されますが、「-nr」フラグを指定するとオブジェクトのみが追加されます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    empty (boolean): 設定すると、空のディスプレイレイヤが作成されます。つまり、選択項目は新しいディスプレイレイヤに追加されません。

    -----------------------------------------

    makeCurrent (boolean): 設定すると、新しいディスプレイレイヤが現在のレイヤになります。

    -----------------------------------------

    name (string): 作成する新しいディスプレイレイヤの名前

    -----------------------------------------

    noRecurse (boolean): 設定すると、選択したオブジェクトのみがディスプレイレイヤに追加されます。それ以外の場合は、選択したオブジェクトのすべての子孫も追加されます。

    -----------------------------------------

    number (int): 作成する新しいディスプレイレイヤの番号

    -----------------------------------------

    Return Value:
    None: string作成したディスプレイ レイヤ ノードの名前
    """
    pass

    
def delete(all: bool = False,attribute: str = "",channels: bool = False,constraints: bool = False,constructionHistory: bool = False,controlPoints: bool = False,expressions: bool = False,hierarchy: str = "",inputConnectionsAndNodes: bool = False,motionPaths: bool = False,shape: bool = False,staticChannels: bool = False,timeAnimationCurves: bool = False,unitlessAnimationCurves: bool = False) -> None:
    """
    選択したオブジェクト、すべてのオブジェクト、コマンドで指定したオブジェクトの削除に使用します。フラグを使用し、このコマンドが動作するオブジェクトのタイプをフィルタ処理してください。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    all (boolean): シーンに含まれる指定した種類のすべてのオブジェクトを除去します。このフラグは、以下のフラグと一緒に使用します。

    -----------------------------------------

    attribute (string): 選択するアトリビュートのリストです。照会モードでは、このフラグに値が必要になります。

    -----------------------------------------

    channels (boolean): シーン内のアニメーションチャネルが除去されます。すべてのチャネルを除去できますが、上のオプションを指定して削除対象のチャネルを絞り込むこともできます。

    -----------------------------------------

    constraints (boolean): 選択したコンストレイントと選択したノードにアタッチされたコンストレイント、またはシーン内のすべてのコンストレイントが除去されます。

    -----------------------------------------

    constructionHistory (boolean): 指定または選択したオブジェクトのコンストラクションヒストリが除去されます。

    -----------------------------------------

    controlPoints (boolean): このフラグは、アトリビュートのリストにシェイプのコントロールポイントを含めるかどうかを明示的に指定します(「-s」フラグを参照)。既定:false(「pasteKey」コマンドでは無効)。照会モードでは、このフラグに値が必要になります。

    -----------------------------------------

    expressions (boolean): シーン内のエクスプレッションが除去されます。すべてのエクスプレッションを除去できますが、上のオプションを指定して削除対象のエクスプレッションを絞り込むこともできます。

    -----------------------------------------

    hierarchy (string): 階層展開オプションです。有効な値は、「above」、「below」、「both」、「none」です。(「pasteKey」コマンドでは無効)。照会モードでは、このフラグに値が必要になります。

    -----------------------------------------

    inputConnectionsAndNodes (boolean): 指定したアトリビュートの入力接続が解除され、残された未接続ノードがすべて削除されます。グラフは、削除できないノードが出現するまで調べられます。

    -----------------------------------------

    motionPaths (boolean): シーン内のモーションパスを削除します。すべてのモーションパスを除去できますが、上のオプションを指定して削除対象を絞り込むこともできます。

    -----------------------------------------

    shape (boolean): トランスフォームの下にあるシェイプのアトリビュート(「controlPoints」以外)も考慮します。既定:true(「pasteKey」コマンドでは無効)。照会モードでは、このフラグに値が必要になります。

    -----------------------------------------

    staticChannels (boolean): シーン内のスタティックなアニメーションチャネルが除去されます。すべてのスタティックなチャネルを除去できますが、上のオプションを指定して削除対象のチャネルを絞り込むこともできます。

    -----------------------------------------

    timeAnimationCurves (boolean): -c/channelsと-sc/staticChannelsフラグを変更します。trueの場合、時間入力アニメーションカーブ(「setKeyframe」で作成されたものなど)に接続されたチャネルのみが削除されます。falseの場合、時間入力アニメーションカーブは削除されません。既定:true。

    -----------------------------------------

    unitlessAnimationCurves (boolean): -c/channelsと-sc/staticChannelsフラグを変更します。trueの場合、単位なし入力アニメーションカーブ(「setDrivenKeyframe」で作成されたものなど)に接続されたチャネルのみが削除されます。falseの場合、単位なし入力アニメーションカーブは削除されません。既定:true。

    -----------------------------------------

    Return Value:
    None: なし
    """
    pass

    
def distanceDimension(endPoint: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),startPoint: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0)) -> None:
    """
    距離寸法を作成し、指定した 2 点間の距離を表示するために使用します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    endPoint ([linear, linear, linear]): startPointからの距離を計測する点を指定します。

    -----------------------------------------

    startPoint ([linear, linear, linear]): 距離の測定を始める点を指定します。

    -----------------------------------------

    Return Value:
    None: string- 作成した DAG ノードのシェイプ名。
    """
    pass

    
def duplicate(inputConnections: bool = False,instanceLeaf: bool = False,name: str = "",parentOnly: bool = False,renameChildren: bool = False,returnRootsOnly: bool = False,smartTransform: bool = False,transformsOnly: bool = False,upstreamNodes: bool = False) -> None:
    """
    指定したオブジェクトが複製されます。オブジェクトを指定しないと、選択したリストが複製されます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    inputConnections (boolean): 複製されるノードの入力接続も複製されます。入力側のノードが(-unオプションとは違って)複製されないので、結果的に展開シナリオになることがあります。

    -----------------------------------------

    instanceLeaf (boolean): リーフDAGノードをコピーせずにインスタンス化します。

    -----------------------------------------

    name (string): 複製オブジェクトに付ける名前。

    -----------------------------------------

    parentOnly (boolean): 指定したDAGノードだけを複製し、その子は複製しません。

    -----------------------------------------

    renameChildren (boolean): 階層の子ノードの名前を、固有になるように変更します。

    -----------------------------------------

    returnRootsOnly (boolean): 新しい階層のルートノードのみが返されます。upstreamNodesフラグと一緒に使用すると、結局、上流ノードが省略されます。このフラグは、出力のstring[]で返されるもののみを制御し、duplicateコマンドの動作は変更しません。

    -----------------------------------------

    smartTransform (boolean): 最後の変換を記憶し、複製オブジェクトに適用します。

    -----------------------------------------

    transformsOnly (boolean): トランスフォームノードのみを複製し、シェイプは複製しません。

    -----------------------------------------

    upstreamNodes (boolean): 選択したノードまでの上流ノード(接続も含む)も複製されます。

    -----------------------------------------

    Return Value:
    None: string[]: 作成したオブジェクトの名前。
    """
    pass

    
def editDisplayLayerGlobals(baseId: int = 1,currentDisplayLayer: str = "",mergeType: int = 1,useCurrent: bool = False) -> None:
    """
    すべてのディスプレイ レイヤに共通するパラメータ値を編集します。baseId や mergeType などのパラメータはプリファレンスとして格納され、currentDisplayLayer などのパラメータはこのファイルに格納されます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    baseId (int): ベースレイヤIDを設定します。これは、新しいレイヤが固有IDの検索を開始する番号です。

    -----------------------------------------

    currentDisplayLayer (name): 現在のディスプレイレイヤ、つまりすべての新規オブジェクトが追加されるレイヤを設定します。

    -----------------------------------------

    mergeType (int): ファイルの読み込む時のマージタイプを設定します。有効な値は0(なし)、1(番号順)と2(名前順)です。

    -----------------------------------------

    useCurrent (boolean): 現在のディスプレイレイヤを、すべての新規ノード目的地として使用するかどうかを設定します。

    -----------------------------------------

    Return Value:
    None: booleanコマンドの成功string照会モードでは、現在のディスプレイ レイヤ名int照会モードでは、マージのタイプint照会モードでは、ベース ID照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def editDisplayLayerMembers(fullNames: bool = False,noRecurse: bool = False) -> None:
    """
    このコマンドを使用して、ディスプレイ レイヤのメンバーシップを照会、または編集します。すべてのオブジェクトは単一のディスプレイ レイヤに収まっている必要があるため、同等の「remove」コマンドは必要ありません。レイヤのオブジェクトの除去は、除去するオブジェクトを別のレイヤに追加することで達成できます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    fullNames (boolean): (照会モード専用)設定すると、レイヤ内にあるオブジェクトのDAGのフルパスを返します。それ以外の場合は、オブジェクト名のみを返します。

    -----------------------------------------

    noRecurse (boolean): 設定すると、選択したオブジェクトのみがディスプレイレイヤに追加されます。それ以外の場合は、選択したオブジェクトのすべての子孫も追加されます。

    -----------------------------------------

    Return Value:
    None: intレイヤに追加されたオブジェクトの数string[]照会:レイヤ内のオブジェクトのリスト照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def exactWorldBoundingBox(calculateExactly: bool = False,ignoreInvisible: bool = False) -> None:
    """
    指定したオブジェクト(指定のない場合は選択したオブジェクト)に正確にフィットするバウンディング ボックスを計算します。このバウンディング ボックスの位置は常にワールド空間内となります。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    calculateExactly (boolean): バウンディングボックスの計算を正しく行う必要がありますか?

    -----------------------------------------

    ignoreInvisible (boolean): バウンディングボックスの計算に非表示オブジェクトを含めるまたは除外する必要がありますか?

    -----------------------------------------

    Return Value:
    None: float[]xmin、ymin、zmin、xmax、ymax、zmax
    """
    pass

    
def group(absolute: bool = False,empty: bool = False,name: str = "",parent: str = "",relative: bool = False,useAsGroup: str = "",world: bool = False) -> None:
    """
    このコマンドは、新規グループで指定したオブジェクトをグループ化して、新規グループ名を返します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    absolute (boolean): 既存のワールドオブジェクトの変換を保存します(オブジェクトの全体的な変換は、オブジェクのローカルな変換を修正することによって保持されます)。［既定］

    -----------------------------------------

    empty (boolean): オブジェクトが入っていない空のグループを作成します。

    -----------------------------------------

    name (string): 新しいグループノードに特定の名前を割り当てます。

    -----------------------------------------

    parent (string): 特定の親に新しいグループを配置します。

    -----------------------------------------

    relative (boolean): オブジェクトの既存のローカル変換を保持します(新規グループノードに相対して)。

    -----------------------------------------

    useAsGroup (string): 指定されたノードをグループノードとして使用します。指定されたノードはトランスフォームノードから派生し、既存の親も子もない状態である必要があります。

    -----------------------------------------

    world (boolean): ワールドに新しいグループを配置します。

    -----------------------------------------

    Return Value:
    None: string- グループノード名
    """
    pass

    
def instance(leaf: bool = False,name: str = "",smartTransform: bool = False) -> None:
    """
    インスタンスを作成することによって、同じシーンに同じオブジェクトを 2 回登場させることができます。このためには、既存のオブジェクトをポイントする新規トランスフォームを作成します。トランスフォームへの変更によってほかのものが影響を受けることはありませんが、「インスタンス化された」オブジェクトへの変更は、すべてのインスタンスに影響を与えます。これはノードが共有されているからです。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    leaf (boolean): 末端のオブジェクトをインスタンス化します。duplicateコマンドと同様の動作をしますが、末端のオブジェクトがインスタンス化されます。

    -----------------------------------------

    name (string): 新規インスタンス名を指定します。

    -----------------------------------------

    smartTransform (boolean): トランスフォーム間の移動に基づき、インスタンス項目を変換します。

    -----------------------------------------

    Return Value:
    None: string新しいトランスフォーム ノードの名前が返されます。
    """
    pass

    
def instanceable(allow: bool = False,recursive: bool = False,shape: bool = False) -> None:
    """
    1 つまたは複数の DAG ノードをインスタンス化できる(またはできない)ようにするためのフラグを立てます。このコマンドは指定した DAG ノードの内部状態を設定し、インスタンス化操作を実行する度に確認されます。コマンドラインでノード名を指定していない場合、現在のセレクション リストを使用します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    allow (boolean): ノードに、新しいインスタンス化可能状態を指定します。ノードをインスタンス化可能にするにはtrueを指定し、インスタンス化を防止するにはfalseを指定します。既定はtrueです(ノードは既定でインスタンス化されます)。

    -----------------------------------------

    recursive (boolean): 作成モードや編集モードの-allowフラグで指定して、-allowの設定を、選択したノードのシェイプ以外の子に、帰納的に適用できます。シェイプにも作用させるには、-recursiveとともに-shapeフラグも指定します。

    -----------------------------------------

    shape (boolean): 作成モードや編集モードの-allowフラグで指定して、-allowの設定を、選択したノードのシェイプの子に適用できます。このフラグは、-recursiveフラグと一緒に使用できます。

    -----------------------------------------

    Return Value:
    None: boolean[]照会実行用。照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def instancer(addObject: bool = False,cycle: str = "",cycleStep: float = 1.0,cycleStepUnits: str = "",index: int = 1,levelOfDetail: str = "",name: str = "",object: str = "",objectPosition: str = "",objectRotation: str = "",objectScale: str = "",pointDataSource: bool = False,removeObject: bool = False,rotationOrder: str = "",rotationUnits: str = "",valueName: str = "") -> None:
    """
    このコマンドを使用して、インスタンサ ノードを作成し、このノードに適切なアトリビュートを設定します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    addObject (boolean): このフラグは、-objectフラグで指定したオブジェクトを、インスタンスオブジェクトとしてインスタンサノードに追加することを示します。

    -----------------------------------------

    cycle (string): このフラグはインスタンサノードのサイクルアトリビュートを設定、または照会します。オプションは「none」と「sequential」で、既定は「none」です。

    -----------------------------------------

    cycleStep (float): このフラグは、インスタンサノードのサイクルステップアトリビュートを設定、または照会します。このアトリビュートは、ステップのサイズをフレーム単位または秒単位で表します(cycleStepUnit参照)。

    -----------------------------------------

    cycleStepUnits (string): このフラグはインスタンサノードのサイクルステップ単位アトリビュートを設定、または照会します。オプションは「frames」か「seconds」で、既定は「frames」です。

    -----------------------------------------

    index (int): このフラグを使用して、i番目のインスタンスオブジェクトの名前を照会します。

    -----------------------------------------

    levelOfDetail (string): このフラグは、インスタンスオブジェクトのLODを設定、または照会します。オプションは「geometry」、「boundingBox」、「boundingBoxes」で、既定は「geometry」です。

    -----------------------------------------

    name (string): このフラグは、インスタンサノードの名前を設定、または照会します。

    -----------------------------------------

    object (string): このフラグは、インスタンスオブジェクトのリストから追加、または除去されるオブジェクトを指定します。このフラグは、-addフラグと-removeフラグと一緒に使用します。コマンドラインでどちらのフラグも指定しないと、-addを指定したと仮定されます。

    -----------------------------------------

    objectPosition (string): このフラグは、指定したオブジェクトの位置を照会します。このオブジェクトは、インスタンスオブジェクトでもサブオブジェクトでもかまいません。

    -----------------------------------------

    objectRotation (string): このフラグは、指定したオブジェクトの回転を照会します。このオブジェクトは、インスタンスオブジェクトでもサブオブジェクトでもかまいません。

    -----------------------------------------

    objectScale (string): このフラグは、指定したオブジェクトのスケールを照会します。このオブジェクトは、インスタンスオブジェクトでもサブオブジェクトでもかまいません。

    -----------------------------------------

    pointDataSource (boolean): このフラグを使用して、入力ポイントに対してデータを供給するソースノードを照会します。

    -----------------------------------------

    removeObject (boolean): このフラグは、-objectフラグで指定したオブジェクトを、インスタンスオブジェクトとしてインスタンサノードから除去することを示します。

    -----------------------------------------

    rotationOrder (string): このフラグは、-rotationフラグに関連する回転順序を指定します。オプションは、XYZ、XZY、YXZ、YZX、ZXY、ZYXで、既定のアトリビュートはXYZです。

    -----------------------------------------

    rotationUnits (string): このフラグは、rotationフラグに関連する回転単位を指定します。オプションは、度かラジアンで、既定のアトリビュートは度です。

    -----------------------------------------

    valueName (string): このフラグを使用して、指定した名前にコネクトされた配列を照会します。このフラグを-indexフラグと一緒に使用すると、i番目の値が返されます。それ以外の場合は、配列全体が返されます。

    -----------------------------------------

    Return Value:
    None: stringコマンドの結果照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def license(borrow: bool = False,info: bool = False,isBorrowed: bool = False,isExported: bool = False,isTrial: bool = False,licenseMethod: bool = False,productChoice: bool = False,r: bool = False,showBorrowInfo: bool = False,showProductInfoDialog: bool = False,status: bool = False,usage: bool = False) -> None:
    """
    フラグなしで実行される場合、このコマンドはアプリケーションのバージョン情報を表示します。いずれかのフラグが指定されている場合、指定したバージョン情報を返します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    borrow (boolean): このフラグはサポートしていません。

    -----------------------------------------

    info (boolean): このフラグはサポートしていません。

    -----------------------------------------

    isBorrowed (boolean): このフラグはサポートしていません。

    -----------------------------------------

    isExported (boolean): このフラグはサポートしていません。

    -----------------------------------------

    isTrial (boolean): このフラグはサポートしていません。

    -----------------------------------------

    licenseMethod (boolean): このフラグはサポートしていません。

    -----------------------------------------

    productChoice (boolean): このフラグはサポートしていません。

    -----------------------------------------

    r (boolean): このフラグはサポートしていません。

    -----------------------------------------

    showBorrowInfo (boolean): このフラグはサポートしていません。

    -----------------------------------------

    showProductInfoDialog (boolean): 製品情報ダイアログを表示します

    -----------------------------------------

    status (boolean): このフラグはサポートしていません。

    -----------------------------------------

    usage (boolean): このフラグはサポートしていません。

    -----------------------------------------

    Return Value:
    None: stringアプリケーションのライセンス情報です
    """
    pass

    
def listNodesWithIncorrectNames() -> None:
    """
    スクリプト エディタ内の誤った名前を持つすべてのノードをリスト表示します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    Return Value:
    None: なし
    """
    pass

    
def listSets(allSets: bool = False,extendToShape: bool = False,object: str = "",type: int = 1) -> None:
    """
    オブジェクトが属するすべてのセットのリストを入手するために使用します。オブジェクトの特定タイプのセットを入手するには、type フラグも使用します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    allSets (boolean): シーン内のすべてのセットが返されます。

    -----------------------------------------

    extendToShape (boolean): トランスフォームのセットを要求すると、そのセットですぐ下のシェイプノードも調べられます。

    -----------------------------------------

    object (name): オブジェクトがメンバーになっている、すべてのセットが返されます。

    -----------------------------------------

    type (uint): シーン内で特定タイプのすべてのセットが返されます。1を指定すると、すべてのレンダリングセットが返されます。2を指定すると、すべてのデフォーマセットが返されます。

    -----------------------------------------

    Return Value:
    None: string[](オブジェクトが属するすべてのセットの文字配列)
    """
    pass

    
def lockNode(ignoreComponents: bool = False,lock: bool = False,lockName: bool = False,lockUnpublished: bool = False) -> None:
    """
    1 つまたは複数のディペンデンシー ノードをロックまたはロック解除します。ロックされたノードには、次のような制限事項があります。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    ignoreComponents (boolean): 通常、ロックするオブジェクトのリストにコンポーネントがあれば、コマンドにエラーが生じて失敗に終わります。しかしこのフラグを指定することで、コンポーネントが無視されます。

    -----------------------------------------

    lock (boolean): ノードの新しいロック状態を指定します。既定はtrueです。

    -----------------------------------------

    lockName (boolean): ノード名の新しいロック状態を指定します。

    -----------------------------------------

    lockUnpublished (boolean): lockフラグと一緒に使用します。コンテナ上では、コンテナのメンバー上にあるすべてのパブリッシュ解除アトリビュートをロックまたはロック解除します。コンテナ以外では、指定したノード上にあるパブリッシュ解除アトリビュートをロックまたはロック解除します。

    -----------------------------------------

    Return Value:
    None: boolean[]照会実行用。照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def ls(absoluteName: bool = False,allPaths: bool = False,assemblies: bool = False,cameras: bool = False,containerType: str = "",containers: bool = False,dagObjects: bool = False,defaultNodes: bool = False,dependencyNodes: bool = False,exactType: str = "",excludeType: str = "",flatten: bool = False,geometry: bool = False,ghost: bool = False,head: int = 1,hilite: bool = False,intermediateObjects: bool = False,invisible: bool = False,leaf: bool = False,lights: bool = False,live: bool = False,lockedNodes: bool = False,long: bool = False,materials: bool = False,modified: bool = False,noIntermediate: bool = False,nodeTypes: bool = False,objectsOnly: bool = False,orderedSelection: bool = False,partitions: bool = False,persistentNodes: bool = False,planes: bool = False,preSelectHilite: bool = False,readOnly: bool = False,recursive: bool = False,referencedNodes: bool = False,references: bool = False,renderGlobals: bool = False,renderQualities: bool = False,renderResolutions: bool = False,renderSetups: bool = False,selection: bool = False,sets: bool = False,shapes: bool = False,shortNames: bool = False,showNamespace: bool = False,showType: bool = False,tail: int = 1,templated: bool = False,textures: bool = False,transforms: bool = False,type: str = "",undeletable: bool = False,untemplated: bool = False,uuid: bool = False,visible: bool = False) -> None:
    """
    ls コマンドでは、シーン内のオブジェクトの名前(およびオプションでタイプ名)が返されます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    absoluteName (boolean): このフラグをshowNamespaceフラグと一緒に使用することで、コマンドによって返されるネームスペースが絶対ネームスペースフォーマットになるように指定できます。ネームスペースの絶対名は、ルートネームスペース「:」で始まり、すべての親ネームスペースを含むフルネームスペースパスです。たとえば、「:ns:ball」は絶対ネームスペース名ですが、「ns:ball」は絶対ネームスペース名ではありません。絶対ネームスペース名は不変であり、現在のネームスペースまたは相対ネームスペースモードの影響を受けません。

    -----------------------------------------

    allPaths (boolean): DAG内にあるノードのすべてのパスがリストされます。このフラグは、-dagも指定した場合、またはオブジェクト名を指定した場合に限って動作します。

    -----------------------------------------

    assemblies (boolean): 最上位レベルのトランスフォームDAGオブジェクトがリストされます。

    -----------------------------------------

    cameras (boolean): カメラのシェイプがリストされます。

    -----------------------------------------

    containerType (string): 指定のユーザ定義タイプを伴うリストコンテナです。このフラグは、typeまたはexactTypeフラグと一緒に使用できません。

    -----------------------------------------

    containers (boolean): コンテナをリストします。標準コンテナとdagContainersなどの別のコンテナタイプの両方を含みます。

    -----------------------------------------

    dagObjects (boolean): すべてのタイプのDAGオブジェクトがリストされます。オブジェクト名引数をコマンドに渡した場合、このフラグでは、指定したオブジェクトの下にすべてのDAGオブジェクトがリストされます。

    -----------------------------------------

    defaultNodes (boolean): 既定のノードを返します。既定のノードとは、Mayaが自動的に作成するノードで、シーンとともに保存されないノードです。ただし、ノードのいくつかアトリビュート値は保存することができます。

    -----------------------------------------

    dependencyNodes (boolean): ディペンデンシーノードがリストされます(DAGオブジェクトを含む)。

    -----------------------------------------

    exactType (string): 指定したタイプのオブジェクトをすべてリストします。ただし、そのタイプの下層にあるオブジェクトはリストしません。このフラグは、コマンドラインで複数回使用できます。注:このフラグに渡すタイプは、showTypeフラグで返されるタイプ名と同じになります。このフラグは、typeまたはexcludeTypeフラグと一緒に使用できません。

    -----------------------------------------

    excludeType (string): 指定したタイプではないすべてのオブジェクトがリストされます。このフラグは、コマンドラインで複数回使用できます。注:このフラグに渡すタイプは、showTypeフラグで返されるタイプ名と同じになります。このフラグは、typeまたはexactTypeフラグと一緒に使用できません。

    -----------------------------------------

    flatten (boolean): 返されるオブジェクトのリストを平らにし、それぞれのコンポーネントを個別に識別できるようにします。

    -----------------------------------------

    geometry (boolean): ジオメトリDAGオブジェクトがリストされます。

    -----------------------------------------

    ghost (boolean): ゴースト化オブジェクトがリストされます。

    -----------------------------------------

    head (int): 項目のリストの先頭から返される要素の最大数を指定します。注:それぞれのtypeフラグでは、最大でこの数の項目が返されます。複数のtypeフラグを指定すると、返される項目の数は、指定した値より多くなります。

    -----------------------------------------

    hilite (boolean): コンポーネント選択で現在ハイライトされているオブジェクトがリストされます。

    -----------------------------------------

    intermediateObjects (boolean): 中間DAGノードのみがリストされます。

    -----------------------------------------

    invisible (boolean): 表示されないDAGノードのみがリストされます。

    -----------------------------------------

    leaf (boolean): DAGのすべてのリーフノードがリストされます。このフラグはモディファイアなので、-dagフラグと一緒に使用する必要があります。

    -----------------------------------------

    lights (boolean): ライトのシェイプがリストされます。

    -----------------------------------------

    live (boolean): 現在ライブにしているオブジェクトがリストされます。

    -----------------------------------------

    lockedNodes (boolean): ロックされたノードを返します。これらのノードは削除も名前の変更もできません。ただし、ステータスは変更できます。

    -----------------------------------------

    long (boolean): DAGオブジェクトのフルパス名が返されます。既定では、最も短い固有の名前を返します。

    -----------------------------------------

    materials (boolean): マテリアルまたはシェーディンググループがリストされます。

    -----------------------------------------

    modified (boolean): このフラグを設定した場合、最後の保存後に変更されたノードのみが返されます。

    -----------------------------------------

    noIntermediate (boolean): 中間以外のDAGノードのみがリストされます。

    -----------------------------------------

    nodeTypes (boolean): 登録されているすべてのノードタイプがリストされます。

    -----------------------------------------

    objectsOnly (boolean): 設定すると、オブジェクト名のみが返され、コンポーネントやアトリビュートは無視されます。

    -----------------------------------------

    orderedSelection (boolean): オブジェクトとコンポーネントを現在の選択順でリスト表示します。このフラグは、selectPrefコマンドの-tso/trackSelectionOrderフラグの値に依存します。そのフラグが有効になっていなければ、このフラグは-sl/selectionフラグと同じものを返します。

    -----------------------------------------

    partitions (boolean): パーティションがリストされます。

    -----------------------------------------

    persistentNodes (boolean): 永続ノードを返します。これは「file」>「new」の後のMayaセッションでも存続するノードです。ファイル>新規でリセットされない特殊なクラスの既定のノードがあります。たとえば、itemFilterノード、selectionListOperatorノードです。

    -----------------------------------------

    planes (boolean): コンストラクションプレーンのシェイプがリストされます。

    -----------------------------------------

    preSelectHilite (boolean): プリ選択で現在ハイライトされているコンポーネントがリストされます。

    -----------------------------------------

    readOnly (boolean): 参照されたノードを返します。参照されたノードは読み取り専用です。注:廃止されました。「-referencedNodes」を使用してください。

    -----------------------------------------

    recursive (boolean): trueに設定すると、このコマンドはすべてのネームスペースから合致する名前を探します。falseに設定すると、要求されたネームスペースだけから探します(たとえば「:」を含む名前を指定すると、「ns1:pSphere1」)。

    -----------------------------------------

    referencedNodes (boolean): 参照されたノードを返します。参照されたノードは読み取り専用です。

    -----------------------------------------

    references (boolean): ファイルに関連するリファレンスをリストします。sharedReferenceNodeや不明リファレンスノードなどの特別なリファレンスノードは除外します。

    -----------------------------------------

    renderGlobals (boolean): レンダーグローバルがリストされます。

    -----------------------------------------

    renderQualities (boolean): 指定したレンダー画質がリストされます。

    -----------------------------------------

    renderResolutions (boolean): レンダー解像度がリストされます。

    -----------------------------------------

    renderSetups (boolean): -renderGlobalsのエイリアス。

    -----------------------------------------

    selection (boolean): 現在選択しているオブジェクトがリストされます。

    -----------------------------------------

    sets (boolean): セットがリストされます。

    -----------------------------------------

    shapes (boolean): シェイプオブジェクトがリストされます。

    -----------------------------------------

    shortNames (boolean): アトリビュートのショートネームが返されます。既定では、アトリビュートのロングネームが返されます。

    -----------------------------------------

    showNamespace (boolean): オブジェクト名の後に各オブジェクトのネームスペースを表示します。このフラグはshowTypeフラグと一緒に使用することはできません。

    -----------------------------------------

    showType (boolean): オブジェクト名の後にタイプがリストされます。

    -----------------------------------------

    tail (int): 項目のリストの末尾から返される要素の最大数を指定します。注:それぞれのtypeフラグでは、最大でこの数の項目が返されます。複数のtypeフラグを指定すると、返される項目の数は、指定した値より多くなります

    -----------------------------------------

    templated (boolean): テンプレート化DAGノードのみがリストされます。

    -----------------------------------------

    textures (boolean): テクスチャがリストされます。

    -----------------------------------------

    transforms (boolean): トランスフォームオブジェクトがリストされます。

    -----------------------------------------

    type (string): 指定したタイプのすべてのオブジェクトがリストされます。このフラグは、コマンドラインで複数回使用できます。注:このフラグに渡すタイプは、showTypeフラグで返されるタイプ名と同じになります。注:Mayaでの一部の選択項目は、特定オブジェクト/データタイプが関連しないので、このフラグでリストすると「untyped」が返されます。このフラグは、exactTypeまたはexcludeTypeフラグと一緒に使用できません。

    -----------------------------------------

    undeletable (boolean): 削除できないノード(ロックされたノードを含む)を返します。削除できないノードは名前の変更もできません。

    -----------------------------------------

    untemplated (boolean): テンプレート化が解除されたDAGノードのみがリストされます。

    -----------------------------------------

    uuid (boolean): ノード名の代わりにノードのUUIDを返します。「UUIDパス」がないことにご注意ください。このフラグと-longフラグなどを組み合わせた場合、ノードUUIDのパスは形成されません。

    -----------------------------------------

    visible (boolean): 可視DAGノードのみがリストされます。

    -----------------------------------------

    Return Value:
    None: string[]コマンドの結果
    """
    pass

    
def makeIdentity(apply: bool = False,jointOrient: bool = False,normal: int = 1,preserveNormals: bool = False,rotate: bool = False,scale: bool = False,translate: bool = False) -> None:
    """
    選択したトランスフォーム、およびシェイプレベルまでのすべての子を ID 変換でリセットする、高速な方法です。選択したトランスフォーム結果から適用されるトランスフォーム、回転、スケールを指定することもできます。ID 変換には以下の意味があります。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    apply (boolean): trueにすると、トランスフォームピボットのワールド空間での位置が保持されてシェイプが移動しないように、トランスフォームがIDになった後で、累積されたトランスフォームがシェイプに適用されます。既定はfalseです。

    -----------------------------------------

    jointOrient (boolean): 設定すると、ジョイントの方向がリセットされワールド座標空間に位置合わせされます。

    -----------------------------------------

    normal (uint): 1に設定すると、ポリゴンオブジェクトの法線がフリーズ(ロック)されます。このフラグは、-applyフラグがオンの場合のみ有効です。2に設定すると、ポリゴンオブジェクトの法線はリジッドでない変換行列、つまりシア、傾斜または不均等スケールなどを含まないトランスフォームの場合のみフリーズされます。既定では法線はフリーズされません。

    -----------------------------------------

    preserveNormals (boolean): このフラグがtrueの場合、ポリゴンオブジェクトの法線は、オブジェクトが負にスケールされる(反射)と反転されます。このフラグは、-applyフラグがオンの場合のみ有効です。

    -----------------------------------------

    rotate (boolean): trueにすると、回転のみがシェイプに適用されます。回転は、0,0,0に変更されます。translateフラグ、rotateフラグ、scaleフラグを指定しないと、すべての(t,r,s)が適用されます。

    -----------------------------------------

    scale (boolean): trueにすると、スケールのみがシェイプに適用されます。スケール係数は、1,1,1に変更されます。translateフラグ、rotateフラグ、scaleフラグを指定しないと、すべての(t,r,s)が適用されます。

    -----------------------------------------

    translate (boolean): trueにすると、平行移動のみがシェイプに適用されます。平行移動は、0,0,0に変更されます。translateフラグ、rotateフラグ、scaleフラグを指定しないと、すべての(t,r,s)が適用されます。(注:translateフラグは、ジョイントに適用しても効果がありません。ジョイントではワールド空間での位置が保持されるからです。このフラグはジョイントに影響しません。)

    -----------------------------------------

    Return Value:
    None: なし
    """
    pass

    
def makeLive(none: bool = False) -> None:
    """
    このコマンドによってオブジェクトがライブ化されます。ライブ オブジェクトはサーフェスを定義し、その上でオブジェクトを作成して相対的に移動します。ライブ化できるのは、コンストラクション プレーン、NURBS サーフェス、ポリゴン メッシュのみです。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    none (boolean): ライブオブジェクトが休止状態になります。このフラグを使用すると、すべての引数は無視されます。

    -----------------------------------------

    Return Value:
    None: なし
    """
    pass

    
def makePaintable(activate: bool = False,activateAll: bool = False,altAttribute: str = "",attrType: str = "",clearAll: bool = False,remove: bool = False,shapeMode: str = "",uiName: str = "") -> None:
    """
    アトリビュート ペイント ツールにペイント可能なノードのアトリビュートを作成します。このコマンドは、新しいアトリビュートをアトリビュート ペイント ツールにペイント可能として登録するために使用します。登録すると、アトリビュート ペイント ツールがそのアトリビュートを認識できるようになり、ユーザはそのアトリビュートにペイントできるようになります。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    activate (boolean): 指定したペイント可能なアトリビュートをアクティブ/非アクティブにします。アトリビュートペイントツールで一部のノードを除外する場合に使用します。

    -----------------------------------------

    activateAll (boolean): 登録したペイント可能なすべてのアトリビュートをアクティブ/非アクティブにします。アトリビュートペイントツールで一部のノードを除外する場合に使用します。

    -----------------------------------------

    altAttribute (string): 同じ値を受け取る代替アトリビュートを定義します。このフラグは複数回使用できます。

    -----------------------------------------

    attrType (string): ペイント可能なアトリビュートタイプ。サポートするタイプは以下のとおりです。intArray、doubleArray、vectorArray、multiInteger、multiFloat、multiDouble、multiVector。

    -----------------------------------------

    clearAll (boolean): すべてのペイント可能なアトリビュートの定義を除去します。

    -----------------------------------------

    remove (boolean): アトリビュートをペイント不可にします。

    -----------------------------------------

    shapeMode (string): このフラグは、アーティザンが、ペイント可能なノードを対応するシェイプノードに関連付ける方法を制御します。これはマルチタイプのアトリビュートで使用し、最初のマルチ次元がシェイプインデックス(すなわちクラスタノード)に対応します。現時点では、このフラグでサポートする値は「deformer」の1つのみです。既定ではこのフラグは空文字列で、これはシェイプの頂点を基準にしてアトリビュートを直接インデックス付けする(特別なマッピングは不要)ことを意味します。

    -----------------------------------------

    uiName (string): UI名。既定はアトリビュート名です。

    -----------------------------------------

    Return Value:
    None: なし照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def matchTransform(pivots: bool = False,position: bool = False,rotation: bool = False,scale: bool = False) -> None:
    """
    このコマンドは、ターゲット オブジェクトのトランスフォームに一致させるように、ソース オブジェクトのトランスフォームを修正します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    pivots (boolean): ソースオブジェクトのスケール/回転のピボット位置を、ターゲットトランスフォームのピボットに一致させます。

    -----------------------------------------

    position (boolean): ソースオブジェクトの位置をターゲットオブジェクトに一致させます。

    -----------------------------------------

    rotation (boolean): ソースオブジェクトの回転をターゲットオブジェクトに一致させます。

    -----------------------------------------

    scale (boolean): ソースオブジェクトのスケールをターゲットオブジェクトに一致させます。

    -----------------------------------------

    Return Value:
    None: なし
    """
    pass

    
def move(absolute: bool = False,componentOffset: bool = False,componentSpace: bool = False,constrainAlongNormal: bool = False,deletePriorHistory: bool = False,localSpace: bool = False,moveX: bool = False,moveXY: bool = False,moveXYZ: bool = False,moveXZ: bool = False,moveY: bool = False,moveYZ: bool = False,moveZ: bool = False,objectSpace: bool = False,orientJoint: str = "",parameter: bool = False,preserveChildPosition: bool = False,preserveGeometryPosition: bool = False,preserveUV: bool = False,reflection: bool = False,reflectionAboutBBox: bool = False,reflectionAboutOrigin: bool = False,reflectionAboutX: bool = False,reflectionAboutY: bool = False,reflectionAboutZ: bool = False,reflectionTolerance: float = 1.0,relative: bool = False,rotatePivotRelative: bool = False,scalePivotRelative: bool = False,secondaryAxisOrient: str = "",symNegative: bool = False,worldSpace: bool = False,worldSpaceDistance: bool = False,xformConstraint: str = "") -> None:
    """
    ジオメトリ オブジェクトの位置を変更するために使用します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    absolute (boolean): 絶対操作を実行します。

    -----------------------------------------

    componentOffset (boolean): ローカル空間内でコンポーネントを個別に移動します。

    -----------------------------------------

    componentSpace (boolean): ローカルコンポーネント空間で移動します。

    -----------------------------------------

    constrainAlongNormal (boolean): trueの場合は、最初に頂点法線方向にトランスフォームコンストレイントが適用されます。法線方向に交差が検出されなかった場合は、最近接ポイントのみが使用されます。

    -----------------------------------------

    deletePriorHistory (boolean): trueの場合、現在の操作より前のヒストリは削除されます。

    -----------------------------------------

    localSpace (boolean): ローカル座標空間で移動します。

    -----------------------------------------

    moveX (boolean): X方向に移動します。

    -----------------------------------------

    moveXY (boolean): XY方向に移動します。

    -----------------------------------------

    moveXYZ (boolean): すべての方向に移動します(既定)。

    -----------------------------------------

    moveXZ (boolean): XZ方向に移動します。

    -----------------------------------------

    moveY (boolean): Y方向に移動します。

    -----------------------------------------

    moveYZ (boolean): YZ方向に移動します。

    -----------------------------------------

    moveZ (boolean): Z方向に移動します。

    -----------------------------------------

    objectSpace (boolean): オブジェクト空間で移動します。

    -----------------------------------------

    orientJoint (string): 既定はxyzです。

    -----------------------------------------

    parameter (boolean): パラメータ空間で移動します。

    -----------------------------------------

    preserveChildPosition (boolean): trueの場合、オブジェクトをトランスフォームすると、反転トランスフォームが子トランスフォームに適用されて、これらがワールド空間上の同じ位置に保持されるようになります。既定はfalseです。

    -----------------------------------------

    preserveGeometryPosition (boolean): trueの場合、オブジェクトをトランスフォームすると、反転トランスフォームがジオメトリポイントに適用されて、これらがワールド空間上の同じ位置に保持されるようになります。既定はfalseです。

    -----------------------------------------

    preserveUV (boolean): trueの場合、移動されるコンポーネント上のUV値は、3D空間の移動に沿って投影されます。小さな編集では、これによりワールド空間のオブジェクト上のテクスチャマッピングがフリーズします。falseの場合は、選択した頂点のUV値は変更されません。既定はfalseです。

    -----------------------------------------

    reflection (boolean): 対応する対称的なコンポーネントも移動します。

    -----------------------------------------

    reflectionAboutBBox (boolean): 対称軸の位置をジオメトリのバウンディングボックスに設定します。

    -----------------------------------------

    reflectionAboutOrigin (boolean): 原点に対称軸の位置を設定します。

    -----------------------------------------

    reflectionAboutX (boolean): X=0を対称プレーンとして指定します。

    -----------------------------------------

    reflectionAboutY (boolean): Y=0を対称プレーンとして指定します。

    -----------------------------------------

    reflectionAboutZ (boolean): Z=0を対称プレーンとして指定します。

    -----------------------------------------

    reflectionTolerance (float): 対応する対称コンポーネントを見つける許容値を指定します。

    -----------------------------------------

    relative (boolean): オブジェクトの現在位置に対して相対的な操作を実行します。

    -----------------------------------------

    rotatePivotRelative (boolean): オブジェクトの回転ピボットポイントを基準に移動します。

    -----------------------------------------

    scalePivotRelative (boolean): オブジェクトのスケールピボットポイントを基準に移動します。

    -----------------------------------------

    secondaryAxisOrient (string): 既定はxyzです。

    -----------------------------------------

    symNegative (boolean): 設定すると、シンメトリプレーンの負の側に対して相対的になるようにコンポーネント変換が反転されます。既定(フラグなし)では、コンポーネントはシンメトリプレーンの正の側に対して相対的に変換されます。

    -----------------------------------------

    worldSpace (boolean): ワールド空間で移動します。

    -----------------------------------------

    worldSpaceDistance (boolean): ワールド空間単位で移動を指定します。

    -----------------------------------------

    xformConstraint (string): コンポーネントを移動するには、トランスフォームコンストレイントを適用します。none-コンストレイントなしsurface-コンポーネントをサーフェスにコンストレイントするedge-コンポーネントをサーフェスエッジにコンストレイントするlive-コンポーネントをライブサーフェスにコンストレイントする

    -----------------------------------------

    Return Value:
    None: なし
    """
    pass

    
def paramDimension() -> None:
    """
    パラメータ次数を作成し、カーブやサーフェスで指定したポイントでカーブやサーフェスのパラメータ値を表示するために使用します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    Return Value:
    None: string作成される paramDimension シェイプ ノードの名前
    """
    pass

    
def paramLocator(position: bool = False) -> None:
    """
    指定したパラメータ値の NURBS カーブか NURBS サーフェスのアンダーワールドで、ロケータを作成します。オブジェクトを指定しないと、ロケータは、選択した最初の有効な項目(カーブ ポイントかサーフェス ポイント)上に作成されます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    position (boolean): 正規化されたスペースにロケータの位置を設定するかどうかを表します。

    -----------------------------------------

    Return Value:
    None: stringNURBS シェイプのアンダーワールドにある新しいロケータの名前。照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def parent(absolute: bool = False,addObject: bool = False,noConnections: bool = False,noInvScale: bool = False,relative: bool = False,removeObject: bool = False,shape: bool = False,world: bool = False) -> None:
    """
    新しいグループのオブジェクトの移動、既存グループからのオブジェクトの除去、親の追加や除去が行われます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    absolute (boolean): 既存ワールドオブジェクト変換が保持されます(オブジェクトのローカル変換が修正され、オブジェクトの全体的な変換が保持されます)。親になるオブジェクトがジョイントの場合は、ジョイントの平行移動と向きが変更され、ワールドオブジェクトトランスフォームが維持されます(これが十分である場合)。その他の場合は、ジョイントと親の間にトランスフォームが挿入され、この目的が達成されます。この場合、ジョイント内部の変換は変更されません。［既定］

    -----------------------------------------

    addObject (boolean): 既存ローカルオブジェクト変換が保持されるが親にはならず、親の下にオブジェクトが追加されます。指定したオブジェクトの親としてワールドを追加するには、-worldを使用します。

    -----------------------------------------

    noConnections (boolean): parentコマンドでは、インスタンスを追加する場合に、インスタンス化されたセットの接続が新しく作成されます。つまり、新しいインスタンスのシェーディングエンジンの接続が作成されます。このフラグではその動きが抑制され、ファイルフォーマットで主に使用されます。

    -----------------------------------------

    noInvScale (boolean): parentコマンドは通常、inverseScaleをジョイントの親スケールに接続します。これはジョイントのスケールの補正に使用されます。子と親が両方ともジョイントで、子のinverseScaleに関する接続が存在しない場合、inverseScaleの接続は発生します。再ペアレントすると、古い親がジョイントの場合、古いinverseScaleの分割のみが行われます。それ以外の場合、接続はそのまま残ります。このフラグを指定すると、この動作が抑制されます。

    -----------------------------------------

    relative (boolean): オブジェクトの既存のローカル変換を保持します(親ノードに相対)。

    -----------------------------------------

    removeObject (boolean): 指定したすべてのオブジェクトの直接の親を除去します。1つの親から生じるシェイプの1つのインスタンスのみを除去するには、そのシェイプのパスを指定する必要があります。注:親が1つの場合は、オブジェクトを効率的にシーンから削除できます。指定オブジェクトの親としてワールドを除去する場合は-worldを使用します。

    -----------------------------------------

    shape (boolean): 通常の場合、parentコマンドはトランスフォーム上のみで動作します。このフラグを使用すると、指定したシェイプが、特定トランスフォームの下で直接親になることができます。これは、シェイプノードをインスタンス化するために使用されます。たとえば、「parent-add-shape」は、「instance」コマンドと同じです。このフラグは、ファイルフォーマットで主に使用します。

    -----------------------------------------

    world (boolean): 指定したオブジェクトをペアレント化解除します(ワールドにペアレント化します)。

    -----------------------------------------

    Return Value:
    None: string[]ペアレント化されたオブジェクトの名前(名前変更の可能性もあります)。
    """
    pass

    
def partition(addSet: str = "",name: str = "",removeSet: str = "",render: bool = False) -> None:
    """
    パーティションのセットの作成、照会、追加、除去に使用します。パーティション名を指定する必要がある場合は 1 番目の引数に指定します。その他の引数はセット名を表します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    addSet (name): 指定したパーティションにセットのリストを追加します。

    -----------------------------------------

    name (string): 指定した名前を新しいパーティションに割り当てます。作成モードでのみ有効です。

    -----------------------------------------

    removeSet (name): 指定したパーティションからセットのリストを除去します。

    -----------------------------------------

    render (boolean): 新しいパーティションにレンダーセットを含めることができます。作成モードのみで使用してください。既定はfalseです。照会フラグとともに使用することもできます。この場合はブーリアンを返します。

    -----------------------------------------

    Return Value:
    None: string作成または編集されたパーティションの名前照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def performanceOptions(clusterResolution: float = 1.0,disableStitch: str = "",disableTrimBoundaryDisplay: str = "",disableTrimDisplay: str = "",latticeResolution: float = 1.0,passThroughBlendShape: str = "",passThroughCluster: str = "",passThroughLattice: str = "",skipHierarchyTraversal: bool = False,useClusterResolution: str = "",useLatticeResolution: str = "") -> None:
    """
    アプリケーションのグローバル パフォーマンス オプションを設定します。オプションを使用すると、サーフェスのステッチやデフォーマなどの機能を無効にして、シーンの計算時間を短縮できます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    clusterResolution (float): クラスタ全体の解像度を設定します。この値は、0.0(正確な計算)～10.0(概形)の範囲内に設定します。

    -----------------------------------------

    disableStitch (string): サーフェスのステッチを使用不可にする状態を設定します。「on」に設定すると、サーフェスのステッチ生成が抑制されます。有効な値は「on」、「off」、「interactive」です。

    -----------------------------------------

    disableTrimBoundaryDisplay (string): 描画のトリム境界を使用不可にする状態を設定します。「on」に設定すると、サーフェスの描画のトリム境界が抑制されます。有効な値は「on」、「off」、「interactive」です。

    -----------------------------------------

    disableTrimDisplay (string): 描画のトリミングを使用不可にする状態を設定します。「on」に設定すると、サーフェスの描画のトリミングが抑制されます。有効な値は「on」、「off」、「interactive」です。

    -----------------------------------------

    latticeResolution (float): ラティス全体の解像度を設定します。この値は、0.0(正確な計算)～1.0(概形)の範囲内に設定します。

    -----------------------------------------

    passThroughBlendShape (string): ブレンドシェイプデフォーマ通過の状態を設定します。有効な値は「on」、「off」、「interactive」です。

    -----------------------------------------

    passThroughCluster (string): クラスタデフォーマ通過の状態を設定します。有効な値は「on」、「off」、「interactive」です。

    -----------------------------------------

    passThroughLattice (string): ラティスデフォーマ通過の状態を設定します。有効な値は「on」、「off」、「interactive」です。

    -----------------------------------------

    skipHierarchyTraversal (boolean): 有効にすると、パフォーマンスを高めるためにシーン内の非可視オブジェクトの階層の走査が無効になりますが、操作、再生の開始/終了、待機リフレッシュの呼び出しなどの特定のアクションに対して、冗長なビューポイントリフレッシュが実行されるという副作用が生じます。

    -----------------------------------------

    useClusterResolution (string): クラスタデフォーマ全体の解像度の状態を設定します。この設定により、クラスタを低い解像度で計算できます。有効な値は「on」、「off」、「interactive」です。

    -----------------------------------------

    useLatticeResolution (string): ラティスデフォーマ全体の解像度の状態を設定します。この設定により、ラティスを低い解像度で計算できます。有効な値は「on」、「off」、「interactive」です。

    -----------------------------------------

    Return Value:
    None: string「オン」、「オフ」、「インタラクティブ」のオプションの状態を指定しますfloatグローバル解像度の値照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def pixelMove() -> None:
    """
    pixelMove コマンドでは現在選択しているビューに従って、ピクセル単位でオブジェクトを移動します。オブジェクトが移動する、画面スペースでの方向を表す、2 つの整数型引数を取ります。ビューの中央ピクセルと指定したオフセット間のベクトルは、選択したオブジェクトを移動する相対距離を定義するワールド空間ベクトルにマップされます。マッピングはビューに依存します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    Return Value:
    None: なし
    """
    pass

    
def quit(abort: bool = False,exitCode: int = 1,force: bool = False) -> None:
    """
    アプリケーションを終了します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    abort (boolean): フラグ-forceと同様、保存せずに終了します。この場合、プリファレンス、ホットキー、カラーも保存されません。ユーザの責任で使用してください。

    -----------------------------------------

    exitCode (uint): アプリケーションが終了したときに返される終了コードを指定します。既定の終了コードは0です。

    -----------------------------------------

    force (boolean): このフラグを指定すると、保存しないで強制的に終了するか、または変更を保存するか確認されます。ユーザの責任で使用してください。

    -----------------------------------------

    Return Value:
    None: なし
    """
    pass

    
def rename(ignoreShape: bool = False,uuid: bool = False) -> None:
    """
    指定したオブジェクトが新しい名前に変更されます。引数を 1 つだけ指定すると、最初に選択したオブジェクトの名前が変更されます。新しい名前が既存の名前と同じ場合は、指定した名前に基づいて固有の名前がオブジェクトに付きます。オブジェクトの名前を空の文字列にすることはできません。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    ignoreShape (boolean): トランスフォームの下にあるシェイプノードの名前を変更しないように指定します。

    -----------------------------------------

    uuid (boolean): 新しい名前が、実際はUUIDであること、およびこのコマンドでノードのUUIDを変更する必要があることを示します。(この場合、名前は変更されません。)

    -----------------------------------------

    Return Value:
    None: string新しい名前。元に戻した場合、オリジナルの名前が返されます。
    """
    pass

    
def reorder(back: bool = False,front: bool = False,relative: int = 1) -> None:
    """
    このコマンドは、兄弟オブジェクトに対するオブジェクトの順序を変更(移動)します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    back (boolean): オブジェクトを兄弟オブジェクトのリストの最後に移動します。

    -----------------------------------------

    front (boolean): オブジェクトを兄弟オブジェクトのリストの先頭に移動します。

    -----------------------------------------

    relative (int): オブジェクトを他の兄弟オブジェクトに対して相対的に移動します。

    -----------------------------------------

    Return Value:
    None: なし
    """
    pass

    
def rotate(absolute: bool = False,centerPivot: bool = False,componentSpace: bool = False,constrainAlongNormal: bool = False,deletePriorHistory: bool = False,euler: bool = False,forceOrderXYZ: bool = False,objectCenterPivot: bool = False,objectSpace: bool = False,orientAxes: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),pivot: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),preserveChildPosition: bool = False,preserveGeometryPosition: bool = False,preserveUV: bool = False,reflection: bool = False,reflectionAboutBBox: bool = False,reflectionAboutOrigin: bool = False,reflectionAboutX: bool = False,reflectionAboutY: bool = False,reflectionAboutZ: bool = False,reflectionTolerance: float = 1.0,relative: bool = False,rotateX: bool = False,rotateXY: bool = False,rotateXYZ: bool = False,rotateXZ: bool = False,rotateY: bool = False,rotateYZ: bool = False,rotateZ: bool = False,symNegative: bool = False,translate: bool = False,worldSpace: bool = False,xformConstraint: str = "") -> None:
    """
    ジオメトリック オブジェクトの回転を変更するために使用します。回転値は、オイラー角(rx, ry, rz)で指定します。この値は、角度計測の現行単位に基づいて解釈されます。ほとんどの場合は度単位です。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    absolute (boolean): 絶対操作を実行します。

    -----------------------------------------

    centerPivot (boolean): ピボットを全オブジェクトのバウンディングボックスの中心に設定します。

    -----------------------------------------

    componentSpace (boolean): ローカルコンポーネントを空間内で回転します。

    -----------------------------------------

    constrainAlongNormal (boolean): trueの場合は、最初に頂点法線方向にトランスフォームコンストレイントが適用されます。法線方向に交差が検出されなかった場合は、最近接ポイントのみが使用されます。

    -----------------------------------------

    deletePriorHistory (boolean): trueの場合、現在の操作より前のヒストリは削除されます。

    -----------------------------------------

    euler (boolean): 回転値を指定する-relativeフラグの修飾子で、現在のXYZ回転値に加算されます。

    -----------------------------------------

    forceOrderXYZ (boolean): trueの場合、オイラー回転の値は、トランスフォームノード単位ではなくXYZ回転順序で認識されます。

    -----------------------------------------

    objectCenterPivot (boolean): ピボットを各オブジェクトのバウンディングボックスの中心に設定します。

    -----------------------------------------

    objectSpace (boolean): オブジェクト座標空間軸を中心に回転を実行します。

    -----------------------------------------

    orientAxes ([angle, angle, angle]): 方向のオイラー軸です。

    -----------------------------------------

    pivot ([linear, linear, linear]): 変換のためのピボットポイントを定義します。

    -----------------------------------------

    preserveChildPosition (boolean): trueの場合、オブジェクトをトランスフォームすると、反転トランスフォームが子トランスフォームに適用されて、これらがワールド空間上の同じ位置に保持されるようになります。既定はfalseです。

    -----------------------------------------

    preserveGeometryPosition (boolean): trueの場合、オブジェクトをトランスフォームすると、反転トランスフォームがジオメトリポイントに適用されて、これらがワールド空間上の同じ位置に保持されるようになります。既定はfalseです。

    -----------------------------------------

    preserveUV (boolean): trueの場合、回転されるコンポーネント上のUV値は、3D空間の回転から投影されます。小さな編集では、これによりワールド空間のオブジェクト上のテクスチャマッピングがフリーズします。falseの場合は、選択した頂点のUV値は変更されません。既定はfalseです。

    -----------------------------------------

    reflection (boolean): 対応する対称的なコンポーネントも移動します。

    -----------------------------------------

    reflectionAboutBBox (boolean): 対称軸の位置をジオメトリのバウンディングボックスに設定します。

    -----------------------------------------

    reflectionAboutOrigin (boolean): 原点に対称軸の位置を設定します。

    -----------------------------------------

    reflectionAboutX (boolean): X=0を対称プレーンとして指定します。

    -----------------------------------------

    reflectionAboutY (boolean): Y=0を対称プレーンとして指定します。

    -----------------------------------------

    reflectionAboutZ (boolean): Z=0を対称プレーンとして指定します。

    -----------------------------------------

    reflectionTolerance (float): 対応する対称コンポーネントを見つける許容値を指定します。

    -----------------------------------------

    relative (boolean): オブジェクトの現在位置に対して相対的な操作を実行します。

    -----------------------------------------

    rotateX (boolean): X方向に回転します。

    -----------------------------------------

    rotateXY (boolean): XおよびY方向に回転します。

    -----------------------------------------

    rotateXYZ (boolean): すべての方向に回転します(既定)。

    -----------------------------------------

    rotateXZ (boolean): XおよびZ方向に回転します。

    -----------------------------------------

    rotateY (boolean): Y方向に回転します。

    -----------------------------------------

    rotateYZ (boolean): YおよびZ方向に回転します。

    -----------------------------------------

    rotateZ (boolean): Z方向に回転します。

    -----------------------------------------

    symNegative (boolean): 設定すると、シンメトリプレーンの負の側に対して相対的になるようにコンポーネント変換が反転されます。既定(フラグなし)では、コンポーネントはシンメトリプレーンの正の側に対して相対的に変換されます。

    -----------------------------------------

    translate (boolean): trueの場合でオブジェクト自身の回転ピボットではないピボットを中心にして回転した場合、コマンドはrotateTranslateアトリビュートではなく、ノードの移動アトリビュートを修正します。

    -----------------------------------------

    worldSpace (boolean): グローバルワールド座標空間軸を中心に回転を実行します。

    -----------------------------------------

    xformConstraint (string): コンポーネントを移動するには、トランスフォームコンストレイントを適用します。none-コンストレイントなしsurface-コンポーネントをサーフェスにコンストレイントするedge-コンポーネントをサーフェスエッジにコンストレイントするlive-コンポーネントをライブサーフェスにコンストレイントする

    -----------------------------------------

    Return Value:
    None: なし
    """
    pass

    
def scale(absolute: bool = False,centerPivot: bool = False,componentSpace: bool = False,constrainAlongNormal: bool = False,deletePriorHistory: bool = False,distanceOnly: bool = False,localSpace: bool = False,objectCenterPivot: bool = False,objectSpace: bool = False,orientAxes: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),pivot: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),preserveChildPosition: bool = False,preserveGeometryPosition: bool = False,preserveUV: bool = False,reflection: bool = False,reflectionAboutBBox: bool = False,reflectionAboutOrigin: bool = False,reflectionAboutX: bool = False,reflectionAboutY: bool = False,reflectionAboutZ: bool = False,reflectionTolerance: float = 1.0,relative: bool = False,scaleX: bool = False,scaleXY: bool = False,scaleXYZ: bool = False,scaleXZ: bool = False,scaleY: bool = False,scaleYZ: bool = False,scaleZ: bool = False,symNegative: bool = False,worldSpace: bool = False,xformConstraint: str = "") -> None:
    """
    scale コマンドは、ジオメトリック オブジェクトのサイズを変更するために使用します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    absolute (boolean): 絶対操作を実行します。

    -----------------------------------------

    centerPivot (boolean): ピボットを全オブジェクトのバウンディングボックスの中心に設定します。

    -----------------------------------------

    componentSpace (boolean): ローカルコンポーネント空間で移動します。

    -----------------------------------------

    constrainAlongNormal (boolean): trueの場合は、最初に頂点法線方向にトランスフォームコンストレイントが適用されます。法線方向に交差が検出されなかった場合は、最近接ポイントのみが使用されます。

    -----------------------------------------

    deletePriorHistory (boolean): trueの場合、現在の操作より前のヒストリは削除されます。

    -----------------------------------------

    distanceOnly (boolean): オブジェクト間の距離のみをスケールします。

    -----------------------------------------

    localSpace (boolean): スケーリングにローカル空間を使用します。

    -----------------------------------------

    objectCenterPivot (boolean): ピボットを各オブジェクトのバウンディングボックスの中心に設定します。

    -----------------------------------------

    objectSpace (boolean): スケーリングにオブジェクト空間を使用します。

    -----------------------------------------

    orientAxes ([angle, angle, angle]): 方向軸の角度を使用します。

    -----------------------------------------

    pivot ([linear, linear, linear]): 変換のためのピボットポイントを定義します。

    -----------------------------------------

    preserveChildPosition (boolean): trueの場合、オブジェクトをトランスフォームすると、反転トランスフォームが子トランスフォームに適用されて、これらがワールド空間上の同じ位置に保持されるようになります。既定はfalseです。

    -----------------------------------------

    preserveGeometryPosition (boolean): trueの場合、オブジェクトをトランスフォームすると、反転トランスフォームがジオメトリポイントに適用されて、これらがワールド空間上の同じ位置に保持されるようになります。既定はfalseです。

    -----------------------------------------

    preserveUV (boolean): trueの場合、スケールされるコンポーネント上のUV値は、3D空間のスケール軸に沿って投影されます。小さな編集では、これによりワールド空間のオブジェクト上のテクスチャマッピングがフリーズします。falseの場合は、選択した頂点のUV値は変更されません。既定はfalseです。

    -----------------------------------------

    reflection (boolean): 対応する対称的なコンポーネントも移動します。

    -----------------------------------------

    reflectionAboutBBox (boolean): 対称軸の位置をジオメトリのバウンディングボックスに設定します。

    -----------------------------------------

    reflectionAboutOrigin (boolean): 原点に対称軸の位置を設定します。

    -----------------------------------------

    reflectionAboutX (boolean): X=0を対称プレーンとして指定します。

    -----------------------------------------

    reflectionAboutY (boolean): Y=0を対称プレーンとして指定します。

    -----------------------------------------

    reflectionAboutZ (boolean): Z=0を対称プレーンとして指定します。

    -----------------------------------------

    reflectionTolerance (float): 対応する対称コンポーネントを見つける許容値を指定します。

    -----------------------------------------

    relative (boolean): オブジェクトの現在位置に対して相対的な操作を実行します。

    -----------------------------------------

    scaleX (boolean): X軸方向にスケールします。

    -----------------------------------------

    scaleXY (boolean): X軸とY軸方向にスケールします。

    -----------------------------------------

    scaleXYZ (boolean): すべての方向にスケールします(既定)。

    -----------------------------------------

    scaleXZ (boolean): X軸とZ軸方向にスケールします。

    -----------------------------------------

    scaleY (boolean): Y軸方向にスケールします。

    -----------------------------------------

    scaleYZ (boolean): Y軸とZ軸方向にスケールします。

    -----------------------------------------

    scaleZ (boolean): Z軸方向にスケールします。

    -----------------------------------------

    symNegative (boolean): 設定すると、シンメトリプレーンの負の側に対して相対的になるようにコンポーネント変換が反転されます。既定(フラグなし)では、コンポーネントはシンメトリプレーンの正の側に対して相対的に変換されます。

    -----------------------------------------

    worldSpace (boolean): スケーリングにワールド空間を使用します。

    -----------------------------------------

    xformConstraint (string): コンポーネントを移動するには、トランスフォームコンストレイントを適用します。none-コンストレイントなしsurface-コンポーネントをサーフェスにコンストレイントするedge-コンポーネントをサーフェスエッジにコンストレイントするlive-コンポーネントをライブサーフェスにコンストレイントする

    -----------------------------------------

    Return Value:
    None: なし
    """
    pass

    
def scaleComponents(pivot: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),rotation: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0)) -> None:
    """
    これは scale コマンドの制限付きバージョンです。このコマンドは選択したコンポーネントのみに動作します。ワールド空間でピボットを使用すると、回転を行うことができます。この回転はスケーリングに作用します。そのため、指定した回転による回転が済んでから、X、Y、Z 軸方向にスケーリングします。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    pivot ([linear, linear, linear]): ワールド空間でのピボットの位置(既定は原点)

    -----------------------------------------

    rotation ([angle, angle, angle]): スケーリング用の回転オフセット(既定はなし)

    -----------------------------------------

    Return Value:
    None: なし
    """
    pass

    
def sets(addElement: str = "",afterFilters: bool = False,clear: str = "",color: int = 1,copy: str = "",edges: bool = False,editPoints: bool = False,empty: bool = False,facets: bool = False,flatten: str = "",forceElement: str = "",include: str = "",intersection: str = "",isIntersecting: str = "",isMember: str = "",layer: bool = False,name: str = "",noSurfaceShader: bool = False,noWarnings: bool = False,nodesOnly: bool = False,remove: str = "",renderable: bool = False,size: bool = False,split: str = "",subtract: str = "",text: str = "",union: str = "",vertices: bool = False) -> None:
    """
    このコマンドは、セットを作成したり、セットの状態を照会したり、あるいは操作を実行してセットのメンバー関係を更新したりするために使用します。セットは、オブジェクト、アトリビュート、またはオブジェクトのコンポーネントの任意の集まりを論理的にグループ化したものです。セットは、ディペンデンシー ノードです。セットのメンバー関係は、オブジェクトからセットへの接続によって定義されます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    addElement (name): 指定したセットに項目のリストを追加します。一部の項目が編集対象のセットと同じパーティション内の別のセットにあるためにそれらの項目をセットに追加できない場合、コマンドは失敗します。

    -----------------------------------------

    afterFilters (boolean): 既定の状態はfalseです。このフラグは編集モードのみに有効です。このフラグは、スカルプト、ラティス、ブレンドシェイプなどのデフォーマが適用されるセットに対して使用します。既定の編集モードでは、デフォーマが適用されるグループのメンバー関係が編集されます。グループを編集するがデフォーマのメンバー関係を変更しない場合は、このフラグをtrueに設定します。

    -----------------------------------------

    clear (name): 指定したセットからすべての項目を除去してセットを空にします。

    -----------------------------------------

    color (int): セットのハイライトカラーを定義します。値は[-1,7]の範囲の値(いずれかのユーザ定義カラー)である必要があります。-1は、カラーが未定義で、影響がないことを示します。頂点セットの頂点だけがこのカラーで表示されます。

    -----------------------------------------

    copy (name): 指定したセットのメンバーを新しいセットにコピーします。このフラグは作成モードのみに使用します。

    -----------------------------------------

    edges (boolean): 新しいセットにエッジだけを含めることができることを示します。このフラグは、作成モードまたは照会モードのみに使用します。既定値はfalseです。

    -----------------------------------------

    editPoints (boolean): 新しいセットにエディットポイントだけを含めることができることを示します。このフラグは、作成モードまたは照会モードのみに使用します。既定値はfalseです。

    -----------------------------------------

    empty (boolean): 作成されるセットが空でなければならないことを示します。つまり、セットに追加するオブジェクトを識別する引数はいずれも無視されます。このフラグは、新しいセットを作成する操作のみに有効です。

    -----------------------------------------

    facets (boolean): 新しいセットにファセットだけを含めることができることを示します。このフラグは、作成モードまたは照会モードのみに使用します。既定値はfalseです。

    -----------------------------------------

    flatten (name): 指定したセットの構造を平らにします。つまり、指定したセットに含まれているすべてのセットをセットのメンバーで置き換えて、セットにその他のセットではなくその他のセットのメンバーが含まれるようにします。

    -----------------------------------------

    forceElement (name): 編集モードのみで使用してください。項目を強制的にセットに追加します。指定したセットと同じパーティション内の別のセットにその項目がある場合、メンバー関係の観点からパーティション内の各セットの相互排他性を保つために、その項目は別のセットから除去されます。

    -----------------------------------------

    include (name): 指定したセットに項目のリストを追加します。セットに追加できない項目がある場合は、警告が発せられます。これは、-add/addElement操作よりも厳密性に欠けます。

    -----------------------------------------

    intersection (name): リストのセットすべてのメンバーである項目のリストを返します。

    -----------------------------------------

    isIntersecting (name): リスト内の各セットが共通のメンバーを持っているかどうかをテストします。

    -----------------------------------------

    isMember (name): 指定した項目すべてが指定したセットのメンバーであるかどうかをテストします。

    -----------------------------------------

    layer (boolean): 廃止されました。使用しないでください。

    -----------------------------------------

    name (string): 新しいセットの名前として文字列を割り当てます。このフラグは、新しいセットを作成する操作のみに有効です。

    -----------------------------------------

    noSurfaceShader (boolean): セットがレンダリング可能な場合、セットを既定のサーフェスシェーダマテリアルに接続しません。レンダリング不可能なセットの場合は、フラグに意味または効果はありません。このフラグは作成モードのみに使用します。既定値はfalseです。

    -----------------------------------------

    noWarnings (boolean): セットに無効な項目を追加しようとするときなどに、警告メッセージを報告しないことを示します(UIで使用)。

    -----------------------------------------

    nodesOnly (boolean): このフラグは、-q/queryフラグと一緒に使用できますが、照会可能な別のフラグと一緒に使用した場合は無視されます。このフラグは、セットのメンバー関係の照会結果を修正して、ノードのアトリビュート(sphere1.txなど)またはコンポーネントがセットに含まれているときにノードだけがリストされるようにします。セットにノードのアトリビュートまたはコンポーネントが複数存在する場合、各ノードは一度だけリストされます。

    -----------------------------------------

    remove (name): 指定したセットの項目リストを除去します。

    -----------------------------------------

    renderable (boolean): このフラグは、特殊なタイプのセットを作成することを示します。このタイプのセット(objectSetとはまったく異なるshadingEngine)には、ライトやジオメトリなどのレンダリング可能な要素だけを含めることができるという、メンバー関係に関する特定の制約があります。作成時に、これらのセットはシェーディンググループとして参照され、「renderPartition」ノードに自動的に接続されます(セットのメンバーとパーティションのその他のセットとの相互排他性を確保するため)。このフラグは、作成モードまたは照会モードのみに使用します。既定値はfalseで、通常のセットを作成することを意味します。

    -----------------------------------------

    size (boolean): sizeフラグはセットの長さを照会する場合に使用します。

    -----------------------------------------

    split (name): 項目リストを持つ新しいセットを作成し、指定したセットから項目リスト内の各項目を除去します。

    -----------------------------------------

    subtract (name): 2つのセットを比較して、2番目のセットにはない1番目のセットのメンバーを返します。

    -----------------------------------------

    text (string): セットとともに格納する注釈文字列を定義します。

    -----------------------------------------

    union (name): リストされたセットすべてのリストを返します。

    -----------------------------------------

    vertices (boolean): 新しいセットに頂点だけを含めることができることを示します。このフラグは、作成モードまたは照会モードのみに使用します。既定値はfalseです。

    -----------------------------------------

    Return Value:
    None: string作成操作(作成または編集されたセットの名前)string[]照会操作(セット内の項目名)booleanisIntersecting および isMember 操作照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def shapeCompare() -> None:
    """
    2 つのシェイプを比較します。コマンドラインにシェイプを指定しないと、アクティブ リストのシェイプが使用されます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    Return Value:
    None: int成功した場合は 0、要求されたフラグに基づいて両シェイプが等しいと判断できない場合は 1。
    """
    pass

    
def snapMode(curve: bool = False,distanceIncrement: float = 1.0,edgeMagnet: int = 1,edgeMagnetTolerance: float = 1.0,grid: bool = False,liveFaceCenter: bool = False,livePoint: bool = False,meshCenter: bool = False,pixelCenter: bool = False,pixelSnap: bool = False,point: bool = False,tolerance: int = 1,useTolerance: bool = False,uvTolerance: int = 1,viewPlane: bool = False) -> None:
    """
    snapMode コマンドは、スナップを制御するために使用します。このコマンドは、有効なスナップ モード間を切り替え、スナップに使用する情報を設定します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    curve (boolean): カーブスナップモードを設定します。

    -----------------------------------------

    distanceIncrement (linear): スナップの距離を、ラインやプレーンなどのオブジェクトに設定します。

    -----------------------------------------

    edgeMagnet (uint): エッジに沿って等間隔に配置する、スナップするための余分な磁石の数。

    -----------------------------------------

    edgeMagnetTolerance (float): エッジの磁石スナップの精度。

    -----------------------------------------

    grid (boolean): グリッドスナップモードを設定します。

    -----------------------------------------

    liveFaceCenter (boolean): ライブポリゴンオブジェクト上で移動する場合、そのフェースの中心にスナップされます。

    -----------------------------------------

    livePoint (boolean): ライブポリゴンオブジェクト上で移動する場合、その頂点にスナップされます。

    -----------------------------------------

    meshCenter (boolean): 移動中に、カメラからカーソルへのラインと交差するメッシュのセンターでスナップします。

    -----------------------------------------

    pixelCenter (boolean): UVをコーナーの代わりにピクセルのセンターにスナップします。

    -----------------------------------------

    pixelSnap (boolean): UVを最も近いピクセルのセンターまたはコーナーにスナップします。

    -----------------------------------------

    point (boolean): ポイントスナップモードを設定します。

    -----------------------------------------

    tolerance (uint): 正方形の領域のサイズを定義します。この領域内のポイントがスナップされます。tolerance値は、カーソル位置から正方形の四方の境界までの距離です。

    -----------------------------------------

    useTolerance (boolean): useToleranceが設定されている場合、ポイントスナップは、カーソル位置を囲む正方形の領域内のポイントに制限されます。正方形のサイズは、toleranceの値によって決まります。

    -----------------------------------------

    uvTolerance (uint): uvToleranceは、UVエディタで正方形の領域のサイズを定義します。この領域内のポイントがスナップされます。tolerance値は、カーソル位置から正方形の四方の境界までの距離です。

    -----------------------------------------

    viewPlane (boolean): ビュープレーンスナップモードを設定します。

    -----------------------------------------

    Return Value:
    None: booleanコマンドが照会の場合照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def snapTogetherCtx(clearSelection: bool = False,exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",name: str = "",setOrientation: bool = False,snapPolygonFace: bool = False) -> None:
    """
    snapTogetherCtx は、サーフェスを一緒にスナップするツールを作成するためのコマンドです。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    clearSelection (boolean): ツールへのエントリの選択をクリアするかを設定します。既定はtrueです。

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    setOrientation (boolean): 項目の方向を向いたり項目を移動させたりするかを設定します。既定はtrueです。

    -----------------------------------------

    snapPolygonFace (boolean): カーソルをポリゴンフェース中央にスナップするかどうかを設定します。既定はfalseです。

    -----------------------------------------

    Return Value:
    None: string(新しいコンテキストの名前)照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def spaceLocator(absolute: bool = False,name: str = "",position: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),relative: bool = False) -> None:
    """
    このコマンドは、空間内の指定した位置にロケータを作成します。既定では、(0,0,0)に作成されます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    absolute (boolean): 設定すると、ロケータの位置はワールド空間に対するものになります。

    -----------------------------------------

    name (string): ロケータの名前です。

    -----------------------------------------

    position ([linear, linear, linear]): ロケータが作成される3次元空間内の位置です。

    -----------------------------------------

    relative (boolean): 設定すると、ロケータの位置はローカル空間に対するものになります。ロケータは既定で相対モードで作成されます。

    -----------------------------------------

    Return Value:
    None: string[]空間内の新しいロケータの名前。照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def threadCount(numberOfThreads: int = 1) -> None:
    """
    このコマンドは、マルチスレッド化したコードの領域で、Maya が使用するスレッド数を設定します。既定では、スレッド数は、物理 CPU 数ではなく、論理 CPU 数と同じです。論理 CPU は、物理 CPU と次の部分が異なります。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    numberOfThreads (int): 使用するスレッド数を設定します。

    -----------------------------------------

    Return Value:
    None: なし照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def toggleAxis(origin: bool = False,view: bool = False) -> None:
    """
    表示軸の状態を切り替えます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    origin (boolean): 地表プレーン原点での座標軸の表示/非表示を切り替えます。

    -----------------------------------------

    view (boolean): 各ビュー左下の座標軸の表示/非表示を切り替えます(廃止-「headsUpDisplay」コマンドを参照)。

    -----------------------------------------

    Return Value:
    None: boolean照会モードの場合。それ以外の場合はなし。照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def transformCompare(root: bool = False) -> None:
    """
    引数として渡された 2 つのトランスフォームを比較します。同じ場合は、0 を返します。異なる場合は、1 を返します。コマンド ラインにトランスフォームを指定しないと、アクティブ リストのトランスフォームが使用されます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    root (boolean): ルートの下位階層全体ではなく、ルートだけを比較します。

    -----------------------------------------

    Return Value:
    None: int成功した場合は 0。transform1 と transform2 が等しくない場合は 1 です。
    """
    pass

    
def transformLimits(enableRotationX: Tuple[bool, bool] = tuple(False, False),enableRotationY: Tuple[bool, bool] = tuple(False, False),enableRotationZ: Tuple[bool, bool] = tuple(False, False),enableScaleX: Tuple[bool, bool] = tuple(False, False),enableScaleY: Tuple[bool, bool] = tuple(False, False),enableScaleZ: Tuple[bool, bool] = tuple(False, False),enableTranslationX: Tuple[bool, bool] = tuple(False, False),enableTranslationY: Tuple[bool, bool] = tuple(False, False),enableTranslationZ: Tuple[bool, bool] = tuple(False, False),remove: bool = False,rotationX: Tuple[float, float] = tuple(1.0, 1.0),rotationY: Tuple[float, float] = tuple(1.0, 1.0),rotationZ: Tuple[float, float] = tuple(1.0, 1.0),scaleX: Tuple[float, float] = tuple(1.0, 1.0),scaleY: Tuple[float, float] = tuple(1.0, 1.0),scaleZ: Tuple[float, float] = tuple(1.0, 1.0),translationX: Tuple[float, float] = tuple(1.0, 1.0),translationY: Tuple[float, float] = tuple(1.0, 1.0),translationZ: Tuple[float, float] = tuple(1.0, 1.0)) -> None:
    """
    transformLimits コマンドは、オブジェクトに適用できる変換に関する制限を設定、編集または照会できます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    enableRotationX ([boolean, boolean]): x回転の上下限を有効化/無効化します。照会するとbooleanbooleanを返します。

    -----------------------------------------

    enableRotationY ([boolean, boolean]): y回転の上下限を有効化/無効化します。照会するとbooleanbooleanを返します。

    -----------------------------------------

    enableRotationZ ([boolean, boolean]): z回転の上下限を有効化/無効化します。照会するとbooleanbooleanを返します。

    -----------------------------------------

    enableScaleX ([boolean, boolean]): xスケールの上下限を有効化/無効化します。照会するとbooleanbooleanを返します。

    -----------------------------------------

    enableScaleY ([boolean, boolean]): yスケールの上下限を有効化/無効化します。照会するとbooleanbooleanを返します。

    -----------------------------------------

    enableScaleZ ([boolean, boolean]): zスケールの上下限を有効化/無効化します。照会するとbooleanbooleanを返します。

    -----------------------------------------

    enableTranslationX ([boolean, boolean]): xトランスレーションの上下限を有効化/無効化します。照会するとbooleanbooleanを返します。

    -----------------------------------------

    enableTranslationY ([boolean, boolean]): yトランスレーションの上下限を有効化/無効化します。照会するとbooleanbooleanを返します。

    -----------------------------------------

    enableTranslationZ ([boolean, boolean]): zトランスレーションの上下限を有効化/無効化します。照会するとbooleanbooleanを返します。

    -----------------------------------------

    remove (boolean): すべての制限をオフにし、既定値にリセットします。

    -----------------------------------------

    rotationX ([angle, angle]): x回転の上下限を設定します。照会するとangleangleを返します。

    -----------------------------------------

    rotationY ([angle, angle]): y回転の上下限を設定します。照会するとangleangleを返します。

    -----------------------------------------

    rotationZ ([angle, angle]): z回転の上下限を設定します。照会するとangleangleを返します。

    -----------------------------------------

    scaleX ([float, float]): xスケールの上下限を設定します。照会するとfloatfloatを返します。

    -----------------------------------------

    scaleY ([float, float]): yスケールの上下限を設定します。照会するとfloatfloatを返します。

    -----------------------------------------

    scaleZ ([float, float]): zスケールの上下限を設定します。照会するとfloatfloatを返します。

    -----------------------------------------

    translationX ([linear, linear]): X軸に沿った移動の上下限を設定します。照会するとlinearlinearを返します。

    -----------------------------------------

    translationY ([linear, linear]): Y軸に沿った移動の上下限を設定します。照会するとlinearlinearを返します。

    -----------------------------------------

    translationZ ([linear, linear]): Z軸に沿った移動の上下限を設定します。照会するとlinearlinearを返します。

    -----------------------------------------

    Return Value:
    None: なし照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def ungroup(absolute: bool = False,parent: str = "",relative: bool = False,world: bool = False) -> None:
    """
    指定したオブジェクトのグループ化を解除します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    absolute (boolean): 既存のワールドオブジェクトの変換を保存します(オブジェクトの全体的な変換は、オブジェクのローカルな変換を修正することによって保持されます)。［既定］

    -----------------------------------------

    parent (string): グループ化解除されたオブジェクトを特定の親の下に置きます。

    -----------------------------------------

    relative (boolean): オブジェクトの既存のローカル変換を保持します(ローカル変換を修正しません)。

    -----------------------------------------

    world (boolean): グループ化解除されたオブジェクトをワールド空間の下に置きます。

    -----------------------------------------

    Return Value:
    None: なし
    """
    pass

    
def upAxis(axis: str = "",rotateView: bool = False) -> None:
    """
    upAxis コマンドはワールド空間でのアップ軸を変更します。現在のところは、ワールド空間のアップ軸に指定できるのは、Y 軸または Z 軸の 2 つだけです。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    axis (string): このフラグはワールド空間でのアップ軸の方向を指定します。有効な軸は「y」または「z」です。照会するとstringを返します。

    -----------------------------------------

    rotateView (boolean): このフラグは、ビューも同じように回転するように指定します。

    -----------------------------------------

    Return Value:
    None: なし照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def xform(absolute: bool = False,boundingBox: bool = False,boundingBoxInvisible: bool = False,centerPivots: bool = False,centerPivotsOnComponents: bool = False,deletePriorHistory: bool = False,euler: bool = False,matrix: Tuple[float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float] = tuple(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0),objectSpace: bool = False,pivots: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),preserve: bool = False,preserveUV: bool = False,reflection: bool = False,reflectionAboutBBox: bool = False,reflectionAboutOrigin: bool = False,reflectionAboutX: bool = False,reflectionAboutY: bool = False,reflectionAboutZ: bool = False,reflectionTolerance: float = 1.0,relative: bool = False,rotateAxis: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),rotateOrder: str = "",rotatePivot: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),rotateTranslation: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),rotation: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),scale: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),scalePivot: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),scaleTranslation: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),shear: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),translation: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),worldSpace: bool = False,worldSpaceDistance: bool = False,zeroTransformPivots: bool = False) -> None:
    """
    このコマンドは、変換ノードにおける、あらゆる要素の照会/設定に使用できます。また、変換行列やバウンディング ボックスのような、直接設定できない値を照会することもできます。ピボット ポイントを設定することもできます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    absolute (boolean): 絶対値による変換を実行します(既定)。

    -----------------------------------------

    boundingBox (boolean): オブジェクトのバウンディングボックスを返します。戻り値は次の順序で戻されます:xの最小値、yの最小値、zの最小値、xの最大値、yの最大値、zの最大値

    -----------------------------------------

    boundingBoxInvisible (boolean): オブジェクトのバウンディングボックスを返します。boundingBoxフラグを使用した場合は、含まれないすべての非表示の子のバウンディングボックスも含まれます。戻り値は次の順序で返されます。xの最小値、yの最小値、zの最小値、xの最大値、yの最大値、zの最大値

    -----------------------------------------

    centerPivots (boolean): ピボットポイントを、オブジェクトのバウンディングボックスの中心に設定します(-pフラグを参照)。

    -----------------------------------------

    centerPivotsOnComponents (boolean): ピボットポイントを、コンポーネントのバウンディングボックスの中心に設定します(-pフラグを参照)。

    -----------------------------------------

    deletePriorHistory (boolean): trueの場合、操作が実行される前にコンストラクションヒストリが削除されます。

    -----------------------------------------

    euler (boolean): 回転値を指定する-relativeフラグの修飾子で、現在のXYZ回転値に加算されます。

    -----------------------------------------

    matrix ([float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float]): 変換行列を作成または返します。＊注＊行列は、列の順番で指定される16個のdouble型の引数で表されます。

    -----------------------------------------

    objectSpace (boolean): (ピボット、移動、回転、回転軸、行列、バウンディングボックスフラグのみに有効な)オブジェクト空間の変換値として値を扱います。

    -----------------------------------------

    pivots ([linear, linear, linear]): 回転とピボットのスケールを同時に変更する便利な方法です(詳細は-rp-spフラグを参照)。

    -----------------------------------------

    preserve (boolean): 変換全体を保持します。またピボットや回転順序の変更時に、オブジェクトが「ジャンプ」するのを防ぐために使用されます。既定値はtrueです(-sp、-rp、-roo、-cp、-raフラグとともに使用)。

    -----------------------------------------

    preserveUV (boolean): trueの場合、回転されるコンポーネント上のUV値は、3D空間の回転から投影されます。小さな編集では、これによりワールド空間のオブジェクト上のテクスチャマッピングがフリーズします。falseの場合は、選択した頂点のUV値は変更されません。既定はfalseです。

    -----------------------------------------

    reflection (boolean): 対応する対称的なコンポーネントも移動します。

    -----------------------------------------

    reflectionAboutBBox (boolean): 対称軸の位置をジオメトリのバウンディングボックスに設定します。

    -----------------------------------------

    reflectionAboutOrigin (boolean): 原点に対称軸の位置を設定します。

    -----------------------------------------

    reflectionAboutX (boolean): X=0を対称プレーンとして指定します。

    -----------------------------------------

    reflectionAboutY (boolean): Y=0を対称プレーンとして指定します。

    -----------------------------------------

    reflectionAboutZ (boolean): Z=0を対称プレーンとして指定します。

    -----------------------------------------

    reflectionTolerance (float): 対応する対称コンポーネントを見つける許容値を指定します。

    -----------------------------------------

    relative (boolean): 相対値による変換を実行します。

    -----------------------------------------

    rotateAxis ([angle, angle, angle]): 回転軸の方向です(-pフラグとともに使用する場合は、回転全体における、軸回転の補正のために回転に変更が加えられるのを防ぎます)。

    -----------------------------------------

    rotateOrder (string): 回転の順番です(-pフラグとともに使用する場合は、ローカル回転にオリジナルのものと同等になるよう修正を加え、変換全体を保持します)。このフラグに対する有効な値は、<xyz|yzx|zxy|xzy|yxz|zyx>です。

    -----------------------------------------

    rotatePivot ([linear, linear, linear]): ピボットポイントで回転変換します(-pフラグとともに使用する場合は、変換全体の回転変換に変更が加えられるのを防ぎます)。

    -----------------------------------------

    rotateTranslation ([linear, linear, linear]): 回転移動します。

    -----------------------------------------

    rotation ([angle, angle, angle]): 回転変換します。

    -----------------------------------------

    scale ([float, float, float]): スケール変換します。

    -----------------------------------------

    scalePivot ([linear, linear, linear]): ピボットポイントでスケール変換します(-pフラグとともに使用する場合は、トランスフォーム全体のスケール変換に変更が加えられるのを防ぎます)。

    -----------------------------------------

    scaleTranslation ([linear, linear, linear]): スケール移動します。

    -----------------------------------------

    shear ([float, float, float]): シア変換します。値はシアの<xy,xz,yz>を表します。

    -----------------------------------------

    translation ([linear, linear, linear]): 移動します。

    -----------------------------------------

    worldSpace (boolean): (ピボット、移動、回転、回転軸、行列、バウンディングボックスフラグに対して有効。)スケールの照会時は、この計算は累積的なものであり、すべてが均等スケールで回転がない場合のみ有効になることに注意してください。不均等スケールと回転のある階層の場合、この値は認識されたグローバルスケールと正確に一致しない場合があります。

    -----------------------------------------

    worldSpaceDistance (boolean): -sp、-rp、-st、-rt、-t、-pivフラグの値は、ローカル軸に沿って動くワールド空間の距離として扱われます。ローカル軸は、コマンドがローカル空間、またはオブジェクト空間で機能しているかどうかによって異なります。このフラグは、ワールド空間では効果がありません。

    -----------------------------------------

    zeroTransformPivots (boolean): 移動チャネルにこれらの値を適用することにより、行列全体を変更せずにピボットポイントとピボットの移動をリセットします。

    -----------------------------------------

    Return Value:
    None: なし照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def xformConstraint(alongNormal: int = 1,live: bool = False,type: str = "") -> None:
    """
    このコマンドを使用すると、コンポーネントのトランスフォーム中に、トランスフォーム ツールで使用されるトランスフォーム コンストレイントを変更できます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    alongNormal (int): 設定されている場合、トランスフォームコンストレイントは最初に、トランスフォームされているコンポーネントの頂点法線に沿って適用されます。照会された場合は、このオプションの現在の状態を返します。

    -----------------------------------------

    live (boolean): 現在のライブサーフェスをトランスフォームコンストレイントとして使用するかどうかをチェックするために使用できる照会専用のフラグです。

    -----------------------------------------

    type (string): 使用するトランスフォームコンストレイントのタイプを設定します。照会すると、文字列として現在のトランスフォームコンストレイントを返します。none-コンストレイントなしsurface-コンポーネントをサーフェスにコンストレイントするedge-コンポーネントをサーフェスエッジにコンストレイントする

    -----------------------------------------

    Return Value:
    None: なし照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def addAttr(attributeType: str = "",binaryTag: str = "",cachedInternally: bool = False,category: str = "",dataType: str = "",defaultValue: float = 1.0,disconnectBehaviour: int = 1,enumName: str = "",exists: bool = False,fromPlugin: bool = False,hasMaxValue: bool = False,hasMinValue: bool = False,hasSoftMaxValue: bool = False,hasSoftMinValue: bool = False,hidden: bool = False,indexMatters: bool = False,internalSet: bool = False,keyable: bool = False,longName: str = "",maxValue: float = 1.0,minValue: float = 1.0,multi: bool = False,niceName: str = "",numberOfChildren: int = 1,parent: str = "",proxy: str = "",readable: bool = False,shortName: str = "",softMaxValue: float = 1.0,softMinValue: float = 1.0,storable: bool = False,usedAsColor: bool = False,usedAsFilename: bool = False,usedAsProxy: bool = False,writable: bool = False) -> None:
    """
    1 つまたは複数のノードにダイナミック アトリビュートを追加します。longName か shortName のどちらか一方またはその両方を指定する必要があります。dataType と attributeType のどちらも指定しないと、double アトリビュートが追加されます。dataType フラグを複数回指定すると、指定したすべてのタイプが許可されます(論理和)。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    attributeType (string): アトリビュートタイプを指定します。詳細は上の表を参照してください。注意が必要なのは、アトリビュートタイプ「float」、「matrix」、「string」はMELキーワードでもあるため、引用符で囲む必要があることです。

    -----------------------------------------

    binaryTag (string): このフラグはサポートしていません。いかなる動作もしません。

    -----------------------------------------

    cachedInternally (boolean): アトリビュートデータをノード内部にキャッシュするかどうかを指定します。このフラグは既定で、書き込み可能なアトリビュートではtrue、書き込み不可のアトリビュートではfalseです。書き込み可能なアトリビュートをユーザが強制的にキャッシュされないようにする場合、キーフレームを設定できなくなるため、警告が表示されます。

    -----------------------------------------

    category (string): アトリビュートカテゴリは、識別するためにアトリビュートに関連付けられています(アトリビュートを作成したプラグインの名前、バージョン情報など)。任意のアトリビュートを任意の数のカテゴリに関連付けすることが可能です。ただし、一度関連付けしたカテゴリを除去することはできません。

    -----------------------------------------

    dataType (string): データ型を指定します。データ型の名前の詳細については、「setAttr」を参照してください。

    -----------------------------------------

    defaultValue (float): アトリビュートの既定値を指定します(数値アトリビュートでのみ使用可能)。

    -----------------------------------------

    disconnectBehaviour (uint): 接続解除動作を、2何もしない、1リセット、0削除で定義します。

    -----------------------------------------

    enumName (string): enum値に対応するUI名を指定するために使用するフラグです。指定する文字列には、コロンで区切った名前のリストとオプション値を含めます。値を指定しないと、0で始まる連続した整数として扱われます。例:-enumName"A:B:C"が生成するオプション値は、A、B、Cの順に0、1、2で、-enumName"zero:one:two:thousand=1000"は、値0、1、2、1000の4つのオプションを生成し、-enumName"solo=1:triplet=3:quintet=5"は、値が1、3、5の3つのオプションを生成します。(現時点でのチャネルボックス(ChannelBox)に関する制限事項として、列挙型アトリビュートのプルダウンメニューが正しく表示されない場合があります。オプション値が連続していない場合に、その間の数がメニュー項目として余分に表示される可能性があります。この制限事項を回避するために、チャネルボックスで表示する列挙型アトリビュートのオプションには連続した値を指定してください。例:"solo=1:triplet=2:quintet=3"）。

    -----------------------------------------

    exists (boolean): 照会されたアトリビュートがユーザが追加したダイナミックアトリビュートであればtrue(真)を、そうでない場合にはfalseを返します。

    -----------------------------------------

    fromPlugin (boolean): 元はプラグンで作成したアトリビュートですか？APIコールが行われた場合、通常は自動的に設定されます-作成プラグインとは関係ないファイル内でのソートをサポートするために追加されました。

    -----------------------------------------

    hasMaxValue (boolean): アトリビュートに最大値があるかどうかを示すフラグです(数値アトリビュートでのみ使用可能)。

    -----------------------------------------

    hasMinValue (boolean): アトリビュートに最小値があるかどうかを示すフラグです(数値アトリビュートでのみ使用可能)。

    -----------------------------------------

    hasSoftMaxValue (boolean): 数値アトリビュートがソフト最大値を持つかどうかを示すフラグです。

    -----------------------------------------

    hasSoftMinValue (boolean): 数値アトリビュートがソフト最小値を持つかどうかを示すフラグです。

    -----------------------------------------

    hidden (boolean): このアトリビュートがUIから非表示になるかどうかを指定します。

    -----------------------------------------

    indexMatters (boolean): マルチアトリビュートに接続するときに、インデックスを使用する必要があるかどうかを設定します。indexMattersをfalseに設定すると、アトリビュートは強制的に読み取り不可になります。

    -----------------------------------------

    internalSet (boolean): このアトリビュート値が変更されたときに内部にキャッシュされた値にセットするかどうかを指定します。これはUI要素の更新に使用する内部フラグです。

    -----------------------------------------

    keyable (boolean): アトリビュートが既定でキー設定可であるかどうかを示します。

    -----------------------------------------

    longName (string): アトリビュートのロングネームを設定します。

    -----------------------------------------

    maxValue (float): アトリビュートの最大値を指定します(数値アトリビュートでのみ使用可能)。

    -----------------------------------------

    minValue (float): アトリビュートの最小値を指定します(数値アトリビュートでのみ使用可能)。

    -----------------------------------------

    multi (boolean): 新しいアトリビュートをマルチアトリビュートにします。

    -----------------------------------------

    niceName (string): UIに表示するアトリビュートのナイスネームを設定します。アトリビュートのナイスネームに空でない文字列を設定すると、Mayaの文字列カタログからナイスネームを検索する既定の動作が無効になります。(カタログにあるアトリビュートのナイスネームを検索するには、MELコマンド「attributeNiceName」と「attributeQuery-niceName」を使用します)。

    -----------------------------------------

    numberOfChildren (uint): 新しいアトリビュートには子が何個あるかを指定します。

    -----------------------------------------

    parent (string): 新しいアトリビュートの親になるアトリビュートです。

    -----------------------------------------

    proxy (string): 別のノードのアトリビュートをプロキシ化します。プロキシ化されたプラグがソースとして接続されます。この場合は、UsedAsProxyフラグが自動的に設定されます。

    -----------------------------------------

    readable (boolean): このアトリビュートから出力接続を作成できるかどうかを指定します。

    -----------------------------------------

    shortName (string): アトリビュートのショートネームを設定します。

    -----------------------------------------

    softMaxValue (float): ソフト最大値、数値アトリビュートにのみ有効。このアトリビュート用のスライダで使用する既定の上限値を指定します。

    -----------------------------------------

    softMinValue (float): ソフト最小値、数値アトリビュートにのみ有効です。このアトリビュート用のスライダで使用する既定の上限値を指定します。

    -----------------------------------------

    storable (boolean): アトリビュートがファイルに格納できるかどうかを指定します。

    -----------------------------------------

    usedAsColor (boolean): アトリビュートをカラー定義として使用します。このフラグを使用するには、3DOUBLEまたは3FLOATの子が必要です。アトリビュートタイプ「-at」は必要に応じて「double3」または「float3」にする必要があります。また、このフラグを「double3」または「float3」としたデータ型「-dt」とともに使用してエフェクトを小さくすることもできますが、コードの部分によってはこの代替をサポートしないことがあります。特別なアトリビュートタイプ/データである「スペクトラム」と「反射率」はカラーフラグもサポートしており、この上では既定でカラーフラグが設定されます。

    -----------------------------------------

    usedAsFilename (boolean): アトリビュートをファイル名定義として扱います。このフラグはデータ型が「string」の「-dt」フラグを持つアトリビュートでのみサポートされます。

    -----------------------------------------

    usedAsProxy (boolean): 指定されたアトリビュートを別のアトリビュートのプロキシとして処理するかどうかを設定します。

    -----------------------------------------

    writable (boolean): このアトリビュートへの入力接続を作成できるかどうかを指定します。

    -----------------------------------------

    Return Value:
    None: なし照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def addExtension(nodeType: str = "",attributeType: str = "",binaryTag: str = "",cachedInternally: bool = False,category: str = "",dataType: str = "",defaultValue: float = 1.0,disconnectBehaviour: int = 1,enumName: str = "",exists: bool = False,fromPlugin: bool = False,hasMaxValue: bool = False,hasMinValue: bool = False,hasSoftMaxValue: bool = False,hasSoftMinValue: bool = False,hidden: bool = False,indexMatters: bool = False,internalSet: bool = False,keyable: bool = False,longName: str = "",maxValue: float = 1.0,minValue: float = 1.0,multi: bool = False,niceName: str = "",numberOfChildren: int = 1,parent: str = "",proxy: str = "",readable: bool = False,shortName: str = "",softMaxValue: float = 1.0,softMinValue: float = 1.0,storable: bool = False,usedAsColor: bool = False,usedAsFilename: bool = False,usedAsProxy: bool = False,writable: bool = False) -> None:
    """
    ノード タイプに拡張子アトリビュートを追加します。longName か shortName のどちらか一方またはその両方を指定する必要があります。dataType と attributeType のどちらも指定しないと、double アトリビュートが追加されます。dataType フラグを複数回指定すると、指定したすべてのタイプが許可されます(論理和)。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    nodeType (string): アトリビュートを追加するノードのタイプを指定します。異なるノードタイプの名前については、nodeTypeコマンドを参照してください。

    -----------------------------------------

    attributeType (string): アトリビュートタイプを指定します。詳細は上の表を参照してください。注意が必要なのは、アトリビュートタイプ「float」、「matrix」、「string」はMELキーワードでもあるため、引用符で囲む必要があることです。

    -----------------------------------------

    binaryTag (string): このフラグはサポートしていません。いかなる動作もしません。

    -----------------------------------------

    cachedInternally (boolean): アトリビュートデータをノード内部にキャッシュするかどうかを指定します。このフラグは既定で、書き込み可能なアトリビュートではtrue、書き込み不可のアトリビュートではfalseです。書き込み可能なアトリビュートをユーザが強制的にキャッシュされないようにする場合、キーフレームを設定できなくなるため、警告が表示されます。

    -----------------------------------------

    category (string): アトリビュートカテゴリは、識別するためにアトリビュートに関連付けられています(アトリビュートを作成したプラグインの名前、バージョン情報など)。任意のアトリビュートを任意の数のカテゴリに関連付けすることが可能です。ただし、一度関連付けしたカテゴリを除去することはできません。

    -----------------------------------------

    dataType (string): データ型を指定します。データ型の名前の詳細については、「setAttr」を参照してください。

    -----------------------------------------

    defaultValue (float): アトリビュートの既定値を指定します(数値アトリビュートでのみ使用可能)。

    -----------------------------------------

    disconnectBehaviour (uint): 接続解除動作を、2何もしない、1リセット、0削除で定義します。

    -----------------------------------------

    enumName (string): enum値に対応するUI名を指定するために使用するフラグです。指定する文字列には、コロンで区切った名前のリストとオプション値を含めます。値を指定しないと、0で始まる連続した整数として扱われます。例:-enumName"A:B:C"が生成するオプション値は、A、B、Cの順に0、1、2で、-enumName"zero:one:two:thousand=1000"は、値0、1、2、1000の4つのオプションを生成し、-enumName"solo=1:triplet=3:quintet=5"は、値が1、3、5の3つのオプションを生成します。(現時点でのチャネルボックス(ChannelBox)に関する制限事項として、列挙型アトリビュートのプルダウンメニューが正しく表示されない場合があります。オプション値が連続していない場合に、その間の数がメニュー項目として余分に表示される可能性があります。この制限事項を回避するために、チャネルボックスで表示する列挙型アトリビュートのオプションには連続した値を指定してください。例:"solo=1:triplet=2:quintet=3"）。

    -----------------------------------------

    exists (boolean): 照会されたアトリビュートがユーザが追加したダイナミックアトリビュートであればtrue(真)を、そうでない場合にはfalseを返します。

    -----------------------------------------

    fromPlugin (boolean): 元はプラグンで作成したアトリビュートですか？APIコールが行われた場合、通常は自動的に設定されます-作成プラグインとは関係ないファイル内でのソートをサポートするために追加されました。

    -----------------------------------------

    hasMaxValue (boolean): アトリビュートに最大値があるかどうかを示すフラグです(数値アトリビュートでのみ使用可能)。

    -----------------------------------------

    hasMinValue (boolean): アトリビュートに最小値があるかどうかを示すフラグです(数値アトリビュートでのみ使用可能)。

    -----------------------------------------

    hasSoftMaxValue (boolean): 数値アトリビュートがソフト最大値を持つかどうかを示すフラグです。

    -----------------------------------------

    hasSoftMinValue (boolean): 数値アトリビュートがソフト最小値を持つかどうかを示すフラグです。

    -----------------------------------------

    hidden (boolean): このアトリビュートがUIから非表示になるかどうかを指定します。

    -----------------------------------------

    indexMatters (boolean): マルチアトリビュートに接続するときに、インデックスを使用する必要があるかどうかを設定します。indexMattersをfalseに設定すると、アトリビュートは強制的に読み取り不可になります。

    -----------------------------------------

    internalSet (boolean): このアトリビュート値が変更されたときに内部にキャッシュされた値にセットするかどうかを指定します。これはUI要素の更新に使用する内部フラグです。

    -----------------------------------------

    keyable (boolean): アトリビュートが既定でキー設定可であるかどうかを示します。

    -----------------------------------------

    longName (string): アトリビュートのロングネームを設定します。

    -----------------------------------------

    maxValue (float): アトリビュートの最大値を指定します(数値アトリビュートでのみ使用可能)。

    -----------------------------------------

    minValue (float): アトリビュートの最小値を指定します(数値アトリビュートでのみ使用可能)。

    -----------------------------------------

    multi (boolean): 新しいアトリビュートをマルチアトリビュートにします。

    -----------------------------------------

    niceName (string): UIに表示するアトリビュートのナイスネームを設定します。アトリビュートのナイスネームに空でない文字列を設定すると、Mayaの文字列カタログからナイスネームを検索する既定の動作が無効になります。(カタログにあるアトリビュートのナイスネームを検索するには、MELコマンド「attributeNiceName」と「attributeQuery-niceName」を使用します)。

    -----------------------------------------

    numberOfChildren (uint): 新しいアトリビュートには子が何個あるかを指定します。

    -----------------------------------------

    parent (string): 新しいアトリビュートの親になるアトリビュートです。

    -----------------------------------------

    proxy (string): 別のノードのアトリビュートをプロキシ化します。プロキシ化されたプラグがソースとして接続されます。この場合は、UsedAsProxyフラグが自動的に設定されます。

    -----------------------------------------

    readable (boolean): このアトリビュートから出力接続を作成できるかどうかを指定します。

    -----------------------------------------

    shortName (string): アトリビュートのショートネームを設定します。

    -----------------------------------------

    softMaxValue (float): ソフト最大値、数値アトリビュートにのみ有効。このアトリビュート用のスライダで使用する既定の上限値を指定します。

    -----------------------------------------

    softMinValue (float): ソフト最小値、数値アトリビュートにのみ有効です。このアトリビュート用のスライダで使用する既定の上限値を指定します。

    -----------------------------------------

    storable (boolean): アトリビュートがファイルに格納できるかどうかを指定します。

    -----------------------------------------

    usedAsColor (boolean): アトリビュートをカラー定義として使用します。このフラグを使用するには、3DOUBLEまたは3FLOATの子が必要です。アトリビュートタイプ「-at」は必要に応じて「double3」または「float3」にする必要があります。また、このフラグを「double3」または「float3」としたデータ型「-dt」とともに使用してエフェクトを小さくすることもできますが、コードの部分によってはこの代替をサポートしないことがあります。特別なアトリビュートタイプ/データである「スペクトラム」と「反射率」はカラーフラグもサポートしており、この上では既定でカラーフラグが設定されます。

    -----------------------------------------

    usedAsFilename (boolean): アトリビュートをファイル名定義として扱います。このフラグはデータ型が「string」の「-dt」フラグを持つアトリビュートでのみサポートされます。

    -----------------------------------------

    usedAsProxy (boolean): 指定されたアトリビュートを別のアトリビュートのプロキシとして処理するかどうかを設定します。

    -----------------------------------------

    writable (boolean): このアトリビュートへの入力接続を作成できるかどうかを指定します。

    -----------------------------------------

    Return Value:
    None: なし照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def aliasAttr(remove: bool = False) -> None:
    """
    指定したノードの任意のアトリビュートに対して、エイリアス(代替名)を定義できるようにします。アトリビュートにエイリアスを指定すると、システムはエイリアスを使用してアトリビュートの情報を表示します。ただし、ユーザはアトリビュートのエイリアスとオリジナルの名前のどちらでも自由に使用できます。アトリビュートには単一のエイリアスしか指定できないため、すでにエイリアスが設定されたアトリビュートにエイリアスを設定すると、古いエイリアスが壊れます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    remove (boolean): リストしたエイリアスを除去するように指定します(指定しないと新しいエイリアスが追加されます)。

    -----------------------------------------

    Return Value:
    None: string[]照会モードで使用。照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def applyAttrPattern(nodeType: str = "",patternName: str = "") -> None:
    """
    定義済みのパターンで表現したアトリビュート構造を使用し、ノードに(ダイナミック アトリビュートとして)、またはノード タイプに(拡張子アトリビュートとして)適用します。パターンで表現したアトリビュート構造を操作で複製できるため、同じパターンを異なるノードまたはノード タイプに何度も適用することができます。パターンの作成方法については、'createAttrPatterns' コマンドを参照してください。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    nodeType (string): アトリビュートパターンが適用されるノードタイプの名前。このフラグによって新しい拡張子アトリビュートツリーが作成され、指定されたタイプのすべてのノードで新しいアトリビュートが使用可能になります。指定されていない場合は、ダイナミックアトリビュートのアプリケーションに対し、ノード名を指定するか、ノードを選択する必要があります。

    -----------------------------------------

    patternName (string): 適用するパターンの名前。この名前を持つパターンは、createAttrPatternsコマンドを使用して事前に作成されている必要があります。

    -----------------------------------------

    Return Value:
    None: intアトリビュートが追加されたノードの数またはノード タイプ
    """
    pass

    
def attributeInfo(allAttributes: bool = False,bool: bool = False,enumerated: bool = False,hidden: bool = False,inherited: bool = False,internal: bool = False,leaf: bool = False,logicalAnd: bool = False,multi: bool = False,short: bool = False,userInterface: bool = False,writable: bool = False,type: str = "") -> None:
    """
    このコマンドは、特定のフラグでマークされるアトリビュートをすべてリスト表示します。フラグの組み合わせを指定することにより、すべてを考慮できます。(組み合わせ方法は「logicalAnd/and」フラグの状態によって異なります)。「allAttributes/all」フラグを指定すると、全タイプのアトリビュートがリスト表示されます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    allAttributes (boolean): タイプに関係なく、ノードに接続されたすべてのアトリビュートを表示します。このフラグを使用すると、他のアトリビュートタイプのフラグやコマンドで指定した論理演算がすべて無効になります。

    -----------------------------------------

    bool (boolean): タイプがブーリアンのアトリビュートを表示します。ブーリアンアトリビュートのみを取得するには「on」状態を、ブーリアンアトリビュートを無視するには「off」状態を使用します。

    -----------------------------------------

    enumerated (boolean): タイプが列挙型のアトリビュートを表示します。列挙型アトリビュートを取得するには「on」状態を、列挙型アトリビュートを無視するには「off」状態を使用します。

    -----------------------------------------

    hidden (boolean): 非表示としてマークされたアトリビュートを表示します。非表示アトリビュートを取得するには「on」状態を、表示アトリビュートを取得するには「off」状態を使用します。

    -----------------------------------------

    inherited (boolean): ノードタイプに直接属するかどうか、またはルートタイプから継承されているかどうか(meshShape/directであるかdagObject/inheritedであるか)によってフィルタリングします。「on」状態を使用すると継承されたアトリビュートだけ、「off」状態を使用すると直接所有されるアトリビュートだけ、フラグを指定しなければ両方を取得します。

    -----------------------------------------

    internal (boolean): ノード内部としてマークされたアトリビュートを表示します。内部アトリビュートを取得するには「on」状態を、内部でないアトリビュートを取得するには「off」状態を使用します。

    -----------------------------------------

    leaf (boolean): 複雑なリーフのアトリビュートを表示します(つまり親アトリビュートを持ち、子は持たない)。リーフアトリビュートを取得するには「on」状態を、リーフでないアトリビュートを取得するには「off」状態を使用します。

    -----------------------------------------

    logicalAnd (boolean): 既定は上記条件の論理和です。このフラグを指定すると、論理積に切り替わります。

    -----------------------------------------

    multi (boolean): マルチのアトリビュートを表示します。マルチアトリビュートを取得するには「on」状態、非マルチアトリビュートを取得するには「off」状態を使用します。

    -----------------------------------------

    short (boolean): ロングネームの代わりにショートアトリビュート名を表示します。

    -----------------------------------------

    userInterface (boolean): MayaASCII名の代わりに、ユーザに親しみやすいアトリビュート名を表示します。-s/-shortフラグとともに指定すると、このフラグが優先されます。

    -----------------------------------------

    writable (boolean): 書き込み可能な(つまり入力接続を持つことができる)アトリビュートを表示します。書き込み可能なアトリビュートを取得するには「on」状態を、書き込み不可のアトリビュートを取得するには「off」状態を使用します。

    -----------------------------------------

    type (string): 「作用対象」情報を取得するスタティックノードタイプ

    -----------------------------------------

    Return Value:
    None: string[]基準に一致するアトリビュートのリスト
    """
    pass

    
def attributeName(leaf: bool = False,long: bool = False,nice: bool = False,short: bool = False) -> None:
    """
    このコマンドは、コマンド ラインから 1 つの「ノード.アトリビュート」形式の指定子を取得して、アトリビュートのロング ネーム、ショート ネーム、またはナイス ネームのいずれかを返します(「ナイス」ネームまたは UI 名は Maya のインタフェースでアトリビュートの表示に使用する名前で、Maya を英語以外の言語で実行している場合はローカライズされることがあります)。コマンド ラインで複数の「ノード.アトリビュート」指定子を指定すると、最初の有効な指定子のみ処理されます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    leaf (boolean): falseの場合、親マルチアトリビュートを表示します(例:controlPoints[2].xValue)。trueの場合、末端アトリビュート名のみ表示します(例:xValue)。既定はtrueです。注:親のマルチインデックスが欠落している場合(例:controlPoints.xValue)、不正な名前が組み合わせられている場合(例:cntrlPnts[2].xValue)など、アトリビュートの文字列が不完全な場合、既定の設定であるtureが指定され、入力した末端アトリビュートがノードに定義されている限り、結果として返されます。

    -----------------------------------------

    long (boolean): 「translateX」のような「ロングネーム」フォーマットで名前を返します。

    -----------------------------------------

    nice (boolean): 「TranslateX」のような「ナイスネーム」フォーマットで名前を返します。

    -----------------------------------------

    short (boolean): 「tx」のような「ショートネーム」フォーマットで名前を返します。

    -----------------------------------------

    Return Value:
    None: stringコマンドの結果
    """
    pass

    
def attributeQuery(affectsAppearance: bool = False,affectsWorldspace: bool = False,attributeType: bool = False,cachedInternally: bool = False,categories: bool = False,channelBox: bool = False,connectable: bool = False,enum: bool = False,exists: bool = False,hidden: bool = False,indeterminant: bool = False,indexMatters: bool = False,internal: bool = False,internalGet: bool = False,internalSet: bool = False,keyable: bool = False,listChildren: bool = False,listDefault: bool = False,listEnum: bool = False,listParent: bool = False,listSiblings: bool = False,longName: bool = False,maxExists: bool = False,maximum: bool = False,message: bool = False,minExists: bool = False,minimum: bool = False,multi: bool = False,niceName: bool = False,node: str = "",numberOfChildren: bool = False,range: bool = False,rangeExists: bool = False,readable: bool = False,renderSource: bool = False,shortName: bool = False,softMax: bool = False,softMaxExists: bool = False,softMin: bool = False,softMinExists: bool = False,softRange: bool = False,softRangeExists: bool = False,storable: bool = False,type: str = "",typeExact: str = "",usedAsColor: bool = False,usedAsFilename: bool = False,usesMultiBuilder: bool = False,worldspace: bool = False,writable: bool = False) -> None:
    """
    attributeQuery は、アトリビュートの構成に関する情報を返します。両方のブーリアン フラグを処理し、他の戻り値と同様に true または false を返します。複数のブーリアン フラグを指定すると、指定したすべてのブーリアン フラグの論理和を返します。両方がブーリアン タイプの戻り値を返すのでなければ、2 つのフラグを指定することはできません。（たとえば、「-internal -hidden」は指定できますが、「-range -hidden」や「-range -softRange」は指定できません）。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    affectsAppearance (boolean): アトリビュートがノードの外観に影響を与える場合はtrueを返します。

    -----------------------------------------

    affectsWorldspace (boolean): ワールド空間に影響を与えるアトリビュートをマークするアトリビュートフラグの状態を返します。

    -----------------------------------------

    attributeType (boolean): アトリビュートタイプの名前(addAttrコマンドとaddExtensionコマンドで解説したタイプ名と同じ名前)を返します。

    -----------------------------------------

    cachedInternally (boolean): アトリビュートがノード内の他にデータブロックでもキャッシュされるかどうかを返します。

    -----------------------------------------

    categories (boolean): アトリビュートが属するカテゴリを返します。アトリビュートがどのカテゴリにも属さない場合は、空のリストを返します。

    -----------------------------------------

    channelBox (boolean): アトリビュートがchannelBoxで表示されるかどうかを返します。

    -----------------------------------------

    connectable (boolean): アトリビュートの接続可能な状態を返します。

    -----------------------------------------

    enum (boolean): アトリビュートがenumアトリビュートの場合、trueを返します。

    -----------------------------------------

    exists (boolean): アトリビュートが存在する場合はtrueを返します。

    -----------------------------------------

    hidden (boolean): アトリビュートの非表示ステータスを返します。

    -----------------------------------------

    indeterminant (boolean): このアトリビュートが評価で使用されるかどうかが評価時まで不明である場合はtrueを返します。

    -----------------------------------------

    indexMatters (boolean): アトリビュートのindexMattersステータスを返します。

    -----------------------------------------

    internal (boolean): アトリビュートがinternalSetかinternalGetのどちらかである場合にtrueを返します。

    -----------------------------------------

    internalGet (boolean): アトリビュートがgetCachedValueで取得された場合にtrueを返します。

    -----------------------------------------

    internalSet (boolean): アトリビュートをsetCachedValueで設定する必要がある場合にtrueを返します。

    -----------------------------------------

    keyable (boolean): アトリビュートのキー設定可能な状態を返します。

    -----------------------------------------

    listChildren (boolean): 指定したアトリビュートの子アトリビュートのリストを返します。

    -----------------------------------------

    listDefault (boolean): 数値および複合数値型アトリビュートの既定値を返します。

    -----------------------------------------

    listEnum (boolean): 指定したアトリビュートに対するenum文字列のリストを返します。

    -----------------------------------------

    listParent (boolean): 指定したアトリビュートの親を返します。

    -----------------------------------------

    listSiblings (boolean): 指定したアトリビュートの兄弟アトリビュートのリストを返します。

    -----------------------------------------

    longName (boolean): アトリビュートのロングネームを返します。

    -----------------------------------------

    maxExists (boolean): アトリビュートがハード最大値を持つ場合、trueを返します。最小値は存在する必要はありません。

    -----------------------------------------

    maximum (boolean): アトリビュート値のハード最大値を返します。

    -----------------------------------------

    message (boolean): アトリビュートがメッセージアトリビュートの場合、trueを返します。

    -----------------------------------------

    minExists (boolean): アトリビュートがハード最小値を持つ場合、trueを返します。最大値は存在する必要はありません。

    -----------------------------------------

    minimum (boolean): アトリビュート値のハード最小値を返します。

    -----------------------------------------

    multi (boolean): アトリビュートがマルチアトリビュートの場合、trueを返します。

    -----------------------------------------

    niceName (boolean): アトリビュートのナイスネーム(または「UI名」)を返します。

    -----------------------------------------

    node (name): ノード名がNAMEのすべてのアトリビュートを使用します。

    -----------------------------------------

    numberOfChildren (boolean): アトリビュートが持つ子の数を返します。

    -----------------------------------------

    range (boolean): アトリビュート値のハード範囲を返します。

    -----------------------------------------

    rangeExists (boolean): アトリビュートがハード範囲を持つ場合、trueを返します。最小値と最大値の両方とも存在する必要があります。

    -----------------------------------------

    readable (boolean): アトリビュートの読み取り可能ステータスを返します。

    -----------------------------------------

    renderSource (boolean): このアトリビュートがレンダリングソースとしてマークされているかどうかを返します。

    -----------------------------------------

    shortName (boolean): アトリビュートのショートネームを返します。

    -----------------------------------------

    softMax (boolean): アトリビュート値のソフト最大値(スライダ範囲)を返します。

    -----------------------------------------

    softMaxExists (boolean): アトリビュートがソフト最大値を持つ場合、trueを返します。最小値は存在する必要はありません。

    -----------------------------------------

    softMin (boolean): アトリビュート値のソフト最小値(スライダ範囲)を返します。

    -----------------------------------------

    softMinExists (boolean): アトリビュートがソフト最小値を持つ場合、trueを返します。最大値は存在する必要はありません。

    -----------------------------------------

    softRange (boolean): アトリビュート値のソフト範囲(スライダ範囲)を返します。

    -----------------------------------------

    softRangeExists (boolean): アトリビュートがソフト範囲を持つ場合、trueを返します。最小値と最大値の両方とも存在する必要があります。

    -----------------------------------------

    storable (boolean): アトリビュートが保存可能の場合、trueを返します。

    -----------------------------------------

    type (string): タイプがTYPEのノードのスタティックアトリビュートを使用します。親クラスのノードから継承されたアトリビュートを含みます。

    -----------------------------------------

    typeExact (string): タイプがTYPEのノードのスタティックアトリビュートのみを使用します。継承されたアトリビュートは含みません。

    -----------------------------------------

    usedAsColor (boolean): アトリビュートがカラーピッカーを起動する場合、trueを返します。

    -----------------------------------------

    usedAsFilename (boolean): アトリビュートがファイルブラウザを起動する場合は、trueを返します。

    -----------------------------------------

    usesMultiBuilder (boolean): アトリビュートがマルチアトリビュートであり、マルチビルダを使用してそのデータを処理する場合は、trueを返します。

    -----------------------------------------

    worldspace (boolean): ワールド空間アトリビュートをマークするアトリビュートフラグの状態を返します。

    -----------------------------------------

    writable (boolean): アトリビュートの書き込み可能な状態を返します。

    -----------------------------------------

    Return Value:
    None: float[]範囲または既定値を照会する場合booleanアトリビュート フラグを照会する場合
    """
    pass

    
def connectAttr(force: bool = False,lock: bool = False,nextAvailable: bool = False,referenceDest: str = "") -> None:
    """
    2 つのディペンデンシー ノードのアトリビュートを接続し、接続された 2 つのアトリビュートの名前を返します。接続されるアトリビュートは、互換性のあるタイプのものでなければなりません1 番目のアトリビュートがソース アトリビュートで、2 番目のアトリビュートが宛先です。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    force (boolean): 接続を強制します。既に接続先に接続されている場合、古い接続は解除され、新しい接続が設定されます。

    -----------------------------------------

    lock (boolean): 引数がtrueの場合、接続を完了し接続先のアトリビュートをロックします。引数がfalseの場合、接続する前に、接続をロック解除します。

    -----------------------------------------

    nextAvailable (boolean): この指定したフラグで、接続先のマルチアトリビュートがindexMattersをfalseに設定している場合、次の使用可能なインデックスに接続されます。インデックスを指定する必要はありません。

    -----------------------------------------

    referenceDest (string): このフラグは、ファイルioのみで使用します。このフラグは、接続がリファレンスファイルで作成された接続を置き換えることを示し、また、フラグ引数はリファレンスファイルの元の接続先を示します。このフラグは、リファレンスファイルに変更が加えられても、Mayaはメインシーンからリファレンスオブジェクトへの適切な接続を行うために使用します。

    -----------------------------------------

    Return Value:
    None: string接続されたアトリビュートの名前を含むフレーズ
    """
    pass

    
def connectionInfo(destinationFromSource: bool = False,getExactDestination: bool = False,getExactSource: bool = False,getLockedAncestor: bool = False,isDestination: bool = False,isExactDestination: bool = False,isExactSource: bool = False,isLocked: bool = False,isSource: bool = False,sourceFromDestination: bool = False) -> None:
    """
    connectionInfo コマンドは、接続元と接続先の情報を得るために使用します。isConnected コマンドとは異なり、このコマンドでは接続一端のみが必要です。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    destinationFromSource (boolean): 指定したプラグ(あるいはその先祖)がソースであれば、このフラグはこのソースから接続されている接続先のリストを返します(文字配列、なければ空の配列)。

    -----------------------------------------

    getExactDestination (boolean): プラグあるいはその先祖が接続先であれば、接続先自身のプラグ名を返します(該当する接続がない場合は、空文字列を返します)。

    -----------------------------------------

    getExactSource (boolean): プラグあるいはその先祖が接続元であれば、ソース自身のプラグ名を返します(該当する接続がない場合は、空文字列を返します)。

    -----------------------------------------

    getLockedAncestor (boolean): 指定したプラグがロックされていたら、その名前が返されます。そのプラグの先祖がロックされていたら、その名前が返されます。複数の先祖がロックされていたら、一番近いものの名前だけが返されます。このプラグ、あるいは先祖がロックされていなかったら、空の文字列が返されます。

    -----------------------------------------

    isDestination (boolean): プラグ(またはその先祖)が接続先であればtrue、そうでなければfalseを返します。

    -----------------------------------------

    isExactDestination (boolean): プラグが接続の接続先自身であればtrue、そうでなければfalseを返します。

    -----------------------------------------

    isExactSource (boolean): プラグが接続元自身であればtrue、そうでなければfalseを返します。

    -----------------------------------------

    isLocked (boolean): このプラグ(あるいはその先祖)がロックされていたら、trueを返します。

    -----------------------------------------

    isSource (boolean): プラグ(またはその先祖)が接続元であればtrue、そうでなければfalseを返します。

    -----------------------------------------

    sourceFromDestination (boolean): 指定したプラグ(あるいはその先祖)が接続先であれば、このフラグは接続のソースを返します(文字列、なければ空)。

    -----------------------------------------

    Return Value:
    None: boolean使用しているフラグによって、プロパティを問い合わせる場合。stringプラグ名を問い合わせる場合。string[]プラグのリストを問い合わせる場合。
    """
    pass

    
def copyAttr(attribute: str = "",containerParentChild: bool = False,inConnections: bool = False,keepSourceConnections: bool = False,outConnections: bool = False,renameTargetContainer: bool = False,values: bool = False) -> None:
    """
    2 つのノードを指定し、名前とデータ タイプが一致するすべてのアトリビュートに対して、1 番目のノードから 2 番目のノードに接続および/または値を転送します。値を転送する場合は、直接転送されます。マッピングや修正は行われません。transferAttributes コマンドを使用して、メッシュ アトリビュートを転送およびリマップすることができます。処理するアトリビュートのリストを指定するには、アトリビュート フラグを使用します。アトリビュート フラグを使用しないと、すべてのアトリビュートが処理されます。ダイナミック アトリビュートでは、値および/または接続は、両方のノード上のアトリビュート名が一致する場合のみ転送されます。このコマンドは、メッシュ、サブディビジョン、および NURBS などのジオメトリ シェイプ ノードはサポートしていません。このコマンドは、ウェイト配列などのマルチ アトリビュート値の転送はサポートしていません。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    attribute (string): 接続および/または値を転送するアトリビュート名です。アトリビュートを指定しないと、すべてのアトリビュートが転送されます。

    -----------------------------------------

    containerParentChild (boolean): あるコンテナから別のコンテナにコピーする場合にのみ使用します。このオプションは、オリジナルコンテナのパブリッシュされた親および/または子のリレーションシップを、パブリッシュされた名前が一致する場合にターゲットコンテナに転送します。

    -----------------------------------------

    inConnections (boolean): 入力接続が転送されることを示します。

    -----------------------------------------

    keepSourceConnections (boolean): outConnectionsフラグでのみ使用。1番目のノード上の接続を維持したまま、さらに2番目のノードへの接続を作成します。outConnectionsを使用してkeepSourceConnectionsを使用しないと、ソースノード上の出力接続が解除されてターゲットノードに作成されます。

    -----------------------------------------

    outConnections (boolean): 出力接続が転送されることを示します。

    -----------------------------------------

    renameTargetContainer (boolean): あるコンテナから別のコンテナにコピーする場合にのみ使用します。このオプションは、ターゲットコンテナの名前をオリジナルコンテナの名前に変更し、オリジナルコンテナの名前をその前の名前+「Orig」に変更します。このオプションを使用して、オリジナルコンテナを参照して編集した変更内容を、メインのシーンから新しいコンテナに転送することができます。

    -----------------------------------------

    values (boolean): 値が転送されることを示します。

    -----------------------------------------

    Return Value:
    None: なし照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def createAttrPatterns(patternDefinition: str = "",patternFile: str = "",patternType: str = "") -> None:
    """
    パターン タイプ(XML など)と文字列またはアトリビュート ツリーの説明を含むパターンのフォーマットでのデータ ファイルが指定されたアトリビュート パターンの新しいインスタンスを作成します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    patternDefinition (string): パターンの定義にファイルを別途作成する必要がない単純なフォーマット用の、パターン定義を含むハードコードされた文字列。

    -----------------------------------------

    patternFile (string): パターン情報があるファイル

    -----------------------------------------

    patternType (string): パターンのこのインスタンスの作成に使用するパターン定義タイプの名前です。

    -----------------------------------------

    Return Value:
    None: string作成したパターンの名前
    """
    pass

    
def createNode(name: str = "",parent: str = "",shared: bool = False,skipSelect: bool = False) -> None:
    """
    このコマンドを使うと、指定タイプのディペンデンシー グラフに新規ノードを作成できます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    name (string): 新しく作成するノードの名前を設定します。ネームスペースパスを含む場合、指定されたネームスペースの下に新しいノードが作成されます。ネームスペースが存在しない場合は、ネームスペースを作成します。

    -----------------------------------------

    parent (string): DAG内で新しいノードが属する親を指定します。

    -----------------------------------------

    shared (boolean): このノードは複数ファイルで共有されるため、存在していない場合のみ作成されます。

    -----------------------------------------

    skipSelect (boolean): このノードは作成後選択されません。オリジナルの選択が保持されます。

    -----------------------------------------

    Return Value:
    None: string新しいノードの名前。
    """
    pass

    
def cycleCheck(all: bool = False,children: bool = False,dag: bool = False,evaluation: bool = False,firstCycleOnly: bool = False,firstPlugPerNode: bool = False,lastPlugPerNode: bool = False,list: bool = False,listSeparator: str = "",parents: bool = False,secondary: bool = False,timeLimit: float = 1.0) -> None:
    """
    このコマンドは、ディペンデンシー グラフのプラグ サイクルを検索します。プラグやノードを選択すると、そのプラグやノードが関連するサイクルを検索します。プラグまたはノードも、引数として渡されます。-all フラグを使用すると、グラフ全体が検索されます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    all (boolean): セレクションリストの代わりに、サイクルのグラフ全体を検索します(注:何も選択しない場合は、-allが指定されているとみなされます)。

    -----------------------------------------

    children (boolean): 子のサイクルは考慮せず、指定したプラグのみを考慮します。

    -----------------------------------------

    dag (boolean): DAGのリレーションシップによるサイクルも検索します。DAGノードごとの子のペアレント化接続は、サイクルの検索時にも考慮されます。

    -----------------------------------------

    evaluation (boolean): グラフの評価中のサイクル検出をオンまたはオフにします。

    -----------------------------------------

    firstCycleOnly (boolean): -listを使用してプラグリストを返す場合、リストには複数のサイクルや部分サイクルが含まれることがあります。-firstCycleOnlyを指定すると、この中の最初のサイクル(全体サイクル)のみが返されます。

    -----------------------------------------

    firstPlugPerNode (boolean): -listを使用してプラグリストを返す場合、リストには通常はノードごとに複数のプラグが含まれ(例:A.outputB.inputB.outputC.inputなど)、外部とのDG接続よりも内部の「作用対象」のリレーションシップが反映されます。-firstPlugPerNodeを指定すると、ノードごとにリストの最初のプラグのみが返されます(例ではB.input)。

    -----------------------------------------

    lastPlugPerNode (boolean): -listを使用してプラグリストを返す場合、リストには通常はノードごとに複数のプラグが含まれ(例:A.outputB.inputB.outputC.inputなど)、外部とのDG接続よりも内部の「作用対象」のリレーションシップが反映されます。-lastPlugPerNodeを指定すると、ノードごとにリストの最後のプラグのみが返されます(例ではB.output)。

    -----------------------------------------

    list (boolean): 1つまたは複数のサイクルに含まれるすべてのプラグを返します。指定しない場合は、サイクルが存在するかどうかを示すブーリアン値を返します。

    -----------------------------------------

    listSeparator (string): -listを使用してプラグリストを返す場合、リストには複数のサイクルや部分サイクルが含まれることがあります。-listSeparatorを使用すれば、各サイクルを区切る文字列を指定して返される文字配列に挿入できます。

    -----------------------------------------

    parents (boolean): 親のサイクルは考慮せず、指定したプラグのみを考慮します。

    -----------------------------------------

    secondary (boolean): 指定のプラグだけでなく関連プラグのサイクルも検索します。既定値は、「-all」の場合は「オン」、その他の場合は「オフ」です。

    -----------------------------------------

    timeLimit (time): 検索時間を指定の長さに制限します。

    -----------------------------------------

    Return Value:
    None: boolean一般的な場合。string[]list フラグを使用する場合。照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def deleteAttr(attribute: str = "",name: str = "") -> None:
    """
    ダイナミック アトリビュートをノードから削除するために使用します。アトリビュートは、ロング ネームかショート ネームのどちらかを使用して指定できます。一度に削除できるのは、1 つのダイナミック アトリビュートのみです。スタティック アトリビュートは削除できません。複合アトリビュートの子は削除できません。その場合は、複合アトリビュート全体を削除する必要があります。このコマンドには編集機能がありません。唯一の照会機能は、ノードのすべてのダイナミック アトリビュートをリストする機能です。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    attribute (string): アトリビュートのロングネームかショートネームを指定します。

    -----------------------------------------

    name (string): ノード名

    -----------------------------------------

    Return Value:
    None: なし照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def deleteAttrPattern(allPatterns: bool = False,patternName: str = "",patternType: str = "") -> None:
    """
    アトリビュート パターンのリストが次第に雑然としてくる場合があります。このコマンドでは、関心のあるパターンのみを表示するようメモリからパターンを除去できます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    allPatterns (boolean): 指定は、既知のアトリビュートパターンをすべて削除することを意味します。

    -----------------------------------------

    patternName (string): 削除するパターンの名前。

    -----------------------------------------

    patternType (string): 特定のタイプのパターンをすべて削除します。

    -----------------------------------------

    Return Value:
    None: string削除されたパターンの名前
    """
    pass

    
def deleteExtension(attribute: str = "",forceDelete: bool = False,nodeType: str = "") -> None:
    """
    このコマンドは、ノード タイプから拡張子アトリビュートを削除するのに使用されます。アトリビュートは、ロング ネームかショート ネームのどちらかを使用して指定できます。一度に削除できる拡張子アトリビュートは 1 つだけです。複合アトリビュートの子は削除できません。その場合、複合アトリビュート全体を削除する必要があります。このコマンドには元に戻す機能、編集機能、照会機能はありません。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    attribute (string): アトリビュートのロングネームかショートネームを指定します。

    -----------------------------------------

    forceDelete (boolean): このフラグを設定してオンにすると、拡張子アトリビュートのすべてのデータ値が確認なしで削除されます。設定してオフにすると、ノードの既定以外の値を設定した拡張子アトリビュートはそのまま保持されます。このフラグを設定しない場合、拡張子アトリビュートの既定以外の値を保持するかどうかが確認されます。

    -----------------------------------------

    nodeType (string): ノードタイプの名前。

    -----------------------------------------

    Return Value:
    None: int削除後にデータを変更したノードの数
    """
    pass

    
def disconnectAttr(nextAvailable: bool = False) -> None:
    """
    関連付けられた 2 つのアトリビュートが関連付けを解除されます。1 番目のアトリビュートがソース アトリビュートで、2 番目のアトリビュートが宛先です。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    nextAvailable (boolean): 宛先のマルチアトリビュートでindexMattersがfalseに設定されている場合は、最初に一致する関連付けが解除されます。インデックスを指定する必要はありません。

    -----------------------------------------

    Return Value:
    None: string切断されたアトリビュートの名前を含むフレーズ。
    """
    pass

    
def getAttr(asString: bool = False,caching: bool = False,channelBox: bool = False,expandEnvironmentVariables: bool = False,keyable: bool = False,lock: bool = False,multiIndices: bool = False,noEvaluation: bool = False,settable: bool = False,silent: bool = False,size: bool = False,time: float = 1.0,type: bool = False) -> None:
    """
    このコマンドは指定したオブジェクトのアトリビュート値を返します。該当する場合には UI ユニットが使用されます。現在、表示できるアトリビュートのタイプは次のとおりです。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    asString (boolean): このフラグは列挙型のアトリビュートの場合にだけ有効です。このフラグを使えば、アトリビュート値を整数ではなく文字列として取得することができます。返される文字列の値は、Mayaが実行しているUI言語(-uiLanguage)に依存することに注意してください。

    -----------------------------------------

    caching (boolean): アトリビュートが内部的にキャッシュされるように設定されているかどうかを返します。

    -----------------------------------------

    channelBox (boolean): アトリビュートがチャネルボックスで表示されるように設定されているかどうかを返します。チャネルボックスにはキー設定可能なアトリビュートも表示されます。

    -----------------------------------------

    expandEnvironmentVariables (boolean): 返される文字列アトリビュート内の環境変数とチルダ文字(UNIXの場合)を展開します。

    -----------------------------------------

    keyable (boolean): アトリビュートのキー設定可能な状態を返します。

    -----------------------------------------

    lock (boolean): アトリビュートのロックされた状態を返します。

    -----------------------------------------

    multiIndices (boolean): アトリビュートがマルチであれば、そのアトリビュートに有効なすべてのインデックスを含むリストを返します。

    -----------------------------------------

    noEvaluation (boolean): ダーティな値は再評価しないで、ノードで現在使用可能な値のみを返します(値が存在する場合)

    -----------------------------------------

    settable (boolean): このアトリビュートが現在setAttrで設定できる場合は1を、そうでない場合は0を返します。アトリビュートが、ロックされていない、接続されていない、またはキーフレームされたアニメーションがないといった場合は、設定できます。

    -----------------------------------------

    silent (boolean): 数値や文字列の値でないアトリビュートの評価時に、データを表示できないというエラーメッセージを表示しないようにします。データは表示されませんが、アトリビュートは評価されます。このフラグはすべてのエラーメッセージではなく、問題のないエラーのメッセージのみを対象とします。

    -----------------------------------------

    size (boolean): マルチアトリビュート配列のサイズを返します。マルチでない場合は、1を返します。

    -----------------------------------------

    time (time): 現在のタイムでなく指定した時間にアトリビュートを評価します。

    -----------------------------------------

    type (boolean): アトリビュートの現在のデータ型を返します。文字列や数値などの単純な型のアトリビュートには常にデータが含まれていますが、配列やメッシュなどの複雑な型のアトリビュートには、それまでに何も割り当てられていない場合、データが含まれないことがあります。これが発生すると、コマンドで結果が返されません。空の文字列が返されるのではなく、結果がまったく返されません。この存在しない結果を別の値と直接比較しようとしたり、エクスプレッションで使用しようとしてもエラーが発生しますが、これを変数に割り当て、型の既定値に変数を設定することができます(たとえば、文字列変数には空の文字列、整数変数には0、配列変数には空の配列)。このフラグを使用したときに安全にするため、結果は常に文字列変数に割り当てるようにし、直接使用しようとはしないでください。

    -----------------------------------------

    Return Value:
    None: Anyアトリビュートの値、または状態です。返される値の数とタイプは、アトリビュート タイプによって異なります。
    """
    pass

    
def getClassification(satisfies: str = "") -> None:
    """
    指定したタイプのノードの分類文字列を返します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    satisfies (string): 指定したノードタイプの分類文字列がこのフラグで渡した分類文字列を満たしていれば、trueを返します。複合文字列でないAがBの従属分類文字列である場合、Aは複合文字列でない分類文字列Bを満たしていると見なされます(たとえば、「shaders/reflective」は「shaders」を満たしている)。以下の場合、複合分類文字列Aは複合文字列Bを満たしています。Aのすべてのコンポーネントが最低1つのBのコンポーネントを満たし、Bのすべてのコンポーネントが最低1つのAのコンポーネントを満たしているよって、「shader/reflective/phong:texture」は「shader:texture」を満たしていますが、「shader/reflective/phong」は「shader:texture」を満たしていません。

    -----------------------------------------

    Return Value:
    None: string[]指定したノード タイプに対する分類文字列、またはノード タイプが分類されていなければ空の配列を返します。
    """
    pass

    
def inheritTransform(off: bool = False,on: bool = False,preserve: bool = False,toggle: bool = False) -> None:
    """
    これは、オブジェクトの継承状態を切り替えるためのコマンドです。このフラグがオフの場合、オブジェクトは親から変換を継承しません。すなわち、オブジェクトは、親ノードに適用された変換による影響を受けず、ワールドの下にあるような動作をします。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    off (boolean): 指定したオブジェクトの継承状態をオフに設定します。

    -----------------------------------------

    on (boolean): 指定したオブジェクトの継承状態をオンに設定します。

    -----------------------------------------

    preserve (boolean): オブジェクトの変換待ち行列を修正して、このオブジェクトのワールド空間位置を保持します。

    -----------------------------------------

    toggle (boolean): 指定したオブジェクトの継承状態を切り替えます。これはフラグが何も指定されていない場合の既定です。-on指定したオブジェクトの継承状態をオンにします。-off指定したオブジェクトの継承状態をオフにします。

    -----------------------------------------

    Return Value:
    None: なし照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def isConnected(ignoreUnitConversion: bool = False) -> None:
    """
    isConnected コマンドは、ディペンデンシー グラフで 2 つのプラグが接続されているかどうかをチェックするために使用されます。接続されていない場合の戻り値は false、接続されている場合は true になります。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    ignoreUnitConversion (boolean): 接続を検索しているときに、ユニット変換ノードをスキップします。

    -----------------------------------------

    Return Value:
    None: boolean2 つのプラグは接続されていますか?
    """
    pass

    
def isDirty(connection: bool = False,datablock: bool = False) -> None:
    """
    isDirty コマンドは、プラグがダーティかどうかのチェックに使用されます。ダーティでない場合は 0、ダーティな場合は 1 が返されます。複数のフラグが指定されている場合は、すべてのオブジェクトの論理積が返されます。つまり、ダーティなフラグが 1 つでもあれば、1 を返します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    connection (boolean): プラグの接続をチェックします(既定)。

    -----------------------------------------

    datablock (boolean): プラグのデータブロックエントリをチェックします。

    -----------------------------------------

    Return Value:
    None: booleanプラグはダーティですか? 複数のプラグを指定した場合、ダーティ状態にあるすべての論理和が返されます。
    """
    pass

    
def listAttr(array: bool = False,caching: bool = False,category: str = "",changedSinceFileOpen: bool = False,channelBox: bool = False,connectable: bool = False,extension: bool = False,fromPlugin: bool = False,hasData: bool = False,hasNullData: bool = False,inUse: bool = False,keyable: bool = False,leaf: bool = False,locked: bool = False,multi: bool = False,output: bool = False,ramp: bool = False,read: bool = False,readOnly: bool = False,scalar: bool = False,scalarAndArray: bool = False,settable: bool = False,shortNames: bool = False,string: str = "",unlocked: bool = False,usedAsFilename: bool = False,userDefined: bool = False,visible: bool = False,write: bool = False) -> None:
    """
    ノードのアトリビュートがリストされます。フラグを指定しないと、すべてのアトリビュートがリストされます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    array (boolean): 配列(マルチ以外)アトリビュートのみがリストされます。

    -----------------------------------------

    caching (boolean): 内部的にキャッシュされているアトリビュートのみが表示されます。

    -----------------------------------------

    category (string): 指定したカテゴリに属するアトリビュートのみを表示します。カテゴリの文字列には正規表現を使用できます。

    -----------------------------------------

    changedSinceFileOpen (boolean): アトリビュートの元のファイルが開いてから変更されたアトリビュートのみがリストされます。特に、リファレンスファイルのオブジェクトやアトリビュートのみに便利です。

    -----------------------------------------

    channelBox (boolean): チャネルボックスに表示されるキー設定不可のアトリビュートだけを表示します。

    -----------------------------------------

    connectable (boolean): 接続可能アトリビュートのみが表示されます。

    -----------------------------------------

    extension (boolean): このタイプのすべてのノードのユーザ定義アトリビュート(拡張子アトリビュート)のリストを表示します。

    -----------------------------------------

    fromPlugin (boolean): プラグインで作成されたアトリビュートのみを表示します

    -----------------------------------------

    hasData (boolean): データを持つアトリビュートのみがリストされます(メッセージアトリビュート以外すべてのアトリビュート)。

    -----------------------------------------

    hasNullData (boolean): ヌルデータを持つアトリビュートのみがリストされます。データを持つすべてのアトリビュートがリストされますが(hasDataフラグ参照)、データ値は初期化されません。アトリビュートがヌルデータを持つ一般的な例として、文字列アトリビュートが作成されたが、初期値がまだ代入されていない場合が挙げられます。同様に、配列型データは初期化されるまでヌルの場合がよくあります。

    -----------------------------------------

    inUse (boolean): 現在、使用中とマークされたアトリビュートのみを表示します。このフラグは、アトリビュートが何らかの方法でシーンデータに作用していることを示します。たとえば、既定以外の値を持つか、別のアトリビュートに接続されています。これは一般的な例であり、実際はそれぞれ異なります。

    -----------------------------------------

    keyable (boolean): キーフレームにできるアトリビュートのみが表示されます。

    -----------------------------------------

    leaf (boolean): アトリビュートの名前の末端のみがリストされます。controlPoints[44].xValueならば、「xValue」とリストされます。

    -----------------------------------------

    locked (boolean): ロックされているアトリビュートのみがリストされます。

    -----------------------------------------

    multi (boolean): マルチアトリビュートの既存の要素がリストされます。

    -----------------------------------------

    output (boolean): 数値であるか、数値アトリビュートの複合であるアトリビュートのみがリストされます。

    -----------------------------------------

    ramp (boolean): ランプであるアトリビュートのみをリスト表示します

    -----------------------------------------

    read (boolean): 読み込み可能なアトリビュートのみがリストされます。

    -----------------------------------------

    readOnly (boolean): 読み込み可能だが書き込み不可能なアトリビュートのみがリストされます。

    -----------------------------------------

    scalar (boolean): スカラー数値アトリビュートのみがリストされます。

    -----------------------------------------

    scalarAndArray (boolean): スカラーアトリビュートと配列アトリビュートのみがリストされます。

    -----------------------------------------

    settable (boolean): 設定可能なアトリビュートがリストされます。

    -----------------------------------------

    shortNames (boolean): ショートアトリビュートネームがリストされます。既定ではロングネームがリストされます。

    -----------------------------------------

    string (string): 他の基準に一致し、さらにこのフラグから渡された文字列に一致するアトリビュートのみを表示します。文字列には正規表現を使用できます。

    -----------------------------------------

    unlocked (boolean): ロックが解除されているアトリビュートのみがリストされます。

    -----------------------------------------

    usedAsFilename (boolean): ファイル名として扱われるように指定したアトリビュートのみをリスト表示します

    -----------------------------------------

    userDefined (boolean): ユーザ定義(ダイナミック)アトリビュートがリストされます。

    -----------------------------------------

    visible (boolean): 可視アトリビュート、つまり隠れていないアトリビュートのみが表示されます。

    -----------------------------------------

    write (boolean): 書き込み可能なアトリビュートのみがリストされます。

    -----------------------------------------

    Return Value:
    None: string[]: 基準に一致するアトリビュートのリスト
    """
    pass

    
def listAttrPatterns(patternType: bool = False,verbose: bool = False) -> None:
    """
    アトリビュート パターンは、Maya のアトリビュート フォレスト全体に関するプレーン テキストの説明です。(ここで「フォレスト」と呼んでいるのは、任意の数のルート レベル アトリビュートが存在する可能性があるからです。アトリビュートは 1 つの共通の親を持つとは限りません。ただし、一般的には、アトリビュートが 1 つの共通の親を持つように制限することをお勧めします)。このコマンドは、通常はプラグインで作成される使用可能なさまざまなパターン タイプとすでにインスタンス化されている特定のパターンをリスト表示します。パターン タイプは、アトリビュート ツリーに関する何らかのテキスト説明(XML やプレーン テキストなど)を受け取り、それを Maya の任意のノードまたはノード タイプに変換することができるものです。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    patternType (boolean): オンにした場合、実際のインスタンス化されたパターンの代わりにパターンタイプのリストが表示されます。

    -----------------------------------------

    verbose (boolean): オンにした場合、パターンまたはパターンタイプに関する詳細情報が表示されます。詳細情報を取得しないようにした場合は、インスタンス名またはパターン名の同じリストが返されます。

    -----------------------------------------

    Return Value:
    None: string[]使用可能なパターンまたはパターン インスタンスのリスト
    """
    pass

    
def listConnections(connections: bool = False,destination: bool = False,exactType: bool = False,plugs: bool = False,shapes: bool = False,skipConversionNodes: bool = False,source: bool = False,type: str = "") -> None:
    """
    特定のオブジェクトに接続されている、指定したタイプのすべてのアトリビュートやオブジェクトのリストを返します。オブジェクトを指定しない場合、選択したノードの接続がリスト表示されます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    connections (boolean): trueの場合、接続に関連する両アトリビュートを返します。指定したオブジェクトのアトリビュートを先に返します。既定はfalseです。

    -----------------------------------------

    destination (boolean): 特定のオブジェクトへの接続の「目的」側にあるアトリビュートやオブジェクトを返します。既定はtrueです。

    -----------------------------------------

    exactType (boolean): trueに設定した場合、-t/typeはこのタイプのノードのみを考慮します。それ以外の場合は、派生タイプも考慮に入れられます。

    -----------------------------------------

    plugs (boolean): trueの場合、接続されたアトリビュート名を返します。falseの場合、接続されたオブジェクト名のみを返します。既定はfalseです。

    -----------------------------------------

    shapes (boolean): シェイプを「選択」した場合、トランスフォームの代わりにシェイプ名を返します。既定はfalseです。

    -----------------------------------------

    skipConversionNodes (boolean): trueの場合、単位変換ノードをスキップし、反対側の変換ノードに接続されたノードを返します。既定はfalseです。

    -----------------------------------------

    source (boolean): 特定のオブジェクトへの接続の「ソース」側にあるアトリビュートやオブジェクトを返します。既定はtrueです。

    -----------------------------------------

    type (string): 指定した場合、指定したタイプのオブジェクトのみが考慮されます。

    -----------------------------------------

    Return Value:
    None: string[]接続 プラグ/ノードのリスト
    """
    pass

    
def listHistory(allConnections: bool = False,allFuture: bool = False,allGraphs: bool = False,breadthFirst: bool = False,future: bool = False,futureLocalAttr: bool = False,futureWorldAttr: bool = False,groupLevels: bool = False,historyAttr: bool = False,interestLevel: int = 1,leaf: bool = False,levels: int = 1,pruneDagObjects: bool = False) -> None:
    """
    指定したノードからグラフ内を前後に移動し、コマンドが通過するコンストラクション ヒストリがあるすべてのノードを返します。コンストラクション ヒストリは、クリエータとして定義されているノードの特定アトリビュートへの接続、および NURBS カーブ ノードのカーブなど、ノードのメイン データの結果から構成されます。例えば、NURBS カーブ ノードのカーブなど。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    allConnections (boolean): 指定した場合、ヒストリまたはフューチャを検索する移動は、ノードの移動を依存したプラグインのみに制限しません。したがって、あらゆる上流ノード(またはf/futureのすべての下流ノード)に到達します。

    -----------------------------------------

    allFuture (boolean): フューチャがリストされる場合は、そのすべてがリストされます。そうでなければ、シェイプがその出力ジオメトリデータを表すアトリビュートを持ち、プラグが接続されている場合は、接続から下流のフューチャヒストリのみがリストされます。

    -----------------------------------------

    allGraphs (boolean): このフラグは廃止されていて、効果がありません。

    -----------------------------------------

    breadthFirst (boolean): 幅優先移動では、最初の移動で最も近いノードが返されます。深さ優先移動では、ノードからパス全体がたどられ、ノードからその他のパスに戻ります。既定は深さ優先です。

    -----------------------------------------

    future (boolean): ヒストリの代わりにフューチャがリストされます。

    -----------------------------------------

    futureLocalAttr (boolean): このフラグによって、シェイプノード上でローカル空間の将来に関連するアトリビュートの照会が可能になります。

    -----------------------------------------

    futureWorldAttr (boolean): このフラグによって、シェイプノード上でワールド空間の将来に関連するアトリビュートの照会が可能になります。

    -----------------------------------------

    groupLevels (boolean): ノード名がレベルにしたがってグループ化されます。>1が先頭で、後はそれにグループ化されます。

    -----------------------------------------

    historyAttr (boolean): このフラグによって、シェイプノード上でヒストリを接続しているアトリビュートの照会が可能になります。

    -----------------------------------------

    interestLevel (int): このフラグを設定すると、historicallyInterestingアトリビュート値がこの値以上であるノードのみがリストされます。historicallyInterestingアトリビュートは、プログラマ以外の人にとって重要でないノードで0になります。TDでは1、ユーザでは2です。

    -----------------------------------------

    leaf (boolean): トランスフォームを選択した場合は、リーフシェイプのヒストリが表示されます。既定はtrueです。

    -----------------------------------------

    levels (uint): 移動するレベル。レベル数を0に設定すると、すべてのレベルに移動します。すべてのレベルが既定です。

    -----------------------------------------

    pruneDagObjects (boolean): このフラグを設定すると、DAGオブジェクトで切り取られます。

    -----------------------------------------

    Return Value:
    None: string[]ヒストリ ノードのリスト照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def listNodeTypes(exclude: str = "") -> None:
    """
    指定された分類文字列を満たす、ディペンデンシー ノード タイプをリストします。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    exclude (string): この除外分類を満たすノードはフィルタを通過しません。

    -----------------------------------------

    Return Value:
    None: string[]システムで、指定された分類文字列を満足させるノード タイプすべてのタイプの名前。
    """
    pass

    
def listRelatives(allDescendents: bool = False,allParents: bool = False,children: bool = False,fullPath: bool = False,noIntermediate: bool = False,parent: bool = False,path: bool = False,shapes: bool = False,type: str = "") -> None:
    """
    DAG オブジェクトの親と子がリストされます。-c/children フラグ、-ad/allDescendents フラグ、-s/shapes フラグ、-p/parent フラグ、-ap/allParents フラグを同時に指定することはできません。1 つのコマンドでは、このうち 1 つのみを使用できます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    allDescendents (boolean): DAGノードのすべての子や孫などが返されます。派生するものがインスタンス化されている場合、その派生するものは、返されるリストに1回だけ現れます。子の前に孫がリストされることに注意してください。

    -----------------------------------------

    allParents (boolean): DAGノードのすべての親が返されます。通常の場合、このコマンドは、オブジェクトの最初のインスタンスに対応する親のみを返します。

    -----------------------------------------

    children (boolean): DAGノードのすべての子がリストされます(既定)。

    -----------------------------------------

    fullPath (boolean): オブジェクト名ではなくフルパス名が返されます。

    -----------------------------------------

    noIntermediate (boolean): 中間オブジェクトは返されません。

    -----------------------------------------

    parent (boolean): DAGノードの親が返されます。

    -----------------------------------------

    path (boolean): 別のコマンドに渡すことができる、適切なオブジェクト名が返されます。

    -----------------------------------------

    shapes (boolean): トランスフォームではなく、シェイプノードである、DAGノードのすべての子がリストされます。

    -----------------------------------------

    type (string): 指定したタイプに関連するものすべてがリストされます。

    -----------------------------------------

    Return Value:
    None: string[]コマンドの結果
    """
    pass

    
def nodeCast(copyDynamicAttrs: bool = False,disableAPICallbacks: bool = False,disableScriptJobCallbacks: bool = False,disconnectUnmatchedAttrs: bool = False,force: bool = False,swapNames: bool = False,swapValues: bool = False) -> None:
    """
    タイプ A のソース ノードと、タイプ B のターゲット ノードの 2 つのノードを指定し、タイプ A がタイプ B かそのサブタイプである場合、このコマンドはターゲット ノードをソース ノードに置換します。つまりターゲット ノードのすべてのノード 接続、DAG 階層、アトリビュート値はターゲット ノードから除去され、ソース ノードに配置されます。どちらかのオブジェクトが参照されている、ロックされている、またはサブタイプを共有していない場合、この操作は失敗します。この操作はアトミックです。指定したパラメータが失敗すると、ソース ノードとターゲット ノードはコマンド実行前の初期状態に戻ります。重要: このコマンドは現在、インスタンス 接続、インスタンス オブジェクト、そしてリファレンス ノードを無視します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    copyDynamicAttrs (boolean): ソースノード上に定義されていないダイナミックアトリビュートがターゲットノードに含まれている場合に、ソースノード上に同一のダイナミックアトリビュートを作成し、ターゲットノードから値と接続をコピーします。

    -----------------------------------------

    disableAPICallbacks (boolean): コメントを追加

    -----------------------------------------

    disableScriptJobCallbacks (boolean): コメントを追加

    -----------------------------------------

    disconnectUnmatchedAttrs (boolean): スワップアウトするノードにターゲットノードに存在しない接続がある場合、その接続を切断するかどうかを指定します。既定では、ターゲットノードをソースノードと再度入れ替えた場合に復元できなくなるため、これらの接続は除去されません。

    -----------------------------------------

    force (boolean): ノードがベースオブジェクトを共有していない場合でも、ノードのキャスト演算を強制します。コマンドでこのフラグを指定すると、コマンドのスワッピング時に、最適のアトリビュートを一致させます。このフラグと'-swapValues/sv'フラグ一緒に使用することは推奨しません。

    -----------------------------------------

    swapNames (boolean): ノードの名前を入れ替えます。既定では、名前は入れ替えられません。

    -----------------------------------------

    swapValues (boolean): 2つのノード間に共通するアトリビュートのアトリビュート同士を交換するかどうかを示します。たとえば、トランスフォームノードと同じベースタイプのノードの場合、回転、スケール、移動の値がコピーされます。

    -----------------------------------------

    Return Value:
    None: int成功は 0、失敗は 1 です
    """
    pass

    
def nodeType(apiType: bool = False,derived: bool = False,inherited: bool = False,isTypeName: bool = False) -> None:
    """
    このコマンドは、ノードのクラスに固有の識別文字列を返します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    apiType (boolean): 指定したノードに対応するMFn::Type値を(文字列として)返します。このフラグは、特定のノードがプラグインによって定義されている場合、MFn::Type値が基礎プロキシクラスに対応するため、特に便利です。このフラグは、ほかのフラグと一緒に使用することはできません。

    -----------------------------------------

    derived (boolean): 指定したノードタイプから派生したすべての既知のノードタイプの名前を含む文字配列を返します。

    -----------------------------------------

    inherited (boolean): 指定したノードが継承するすべてのベースノードタイプの名前を含む文字配列を返します。

    -----------------------------------------

    isTypeName (boolean): このフラグが存在すると、コマンドンに渡される引数は、特定のノードの名前ではなくノードタイプの名前になります。

    -----------------------------------------

    Return Value:
    None: string単一のコマンドの結果string[]複数のコマンドの結果
    """
    pass

    
def objectCenter(gl: bool = False,local: bool = False,x: bool = False,y: bool = False,z: bool = False) -> None:
    """
    このコマンドは、指定したオブジェクトのバウンディング ボックスの中心の座標を返します。1 つの座標だけを指定した場合、浮動小数点数として返します。座標がまったく指定されていない場合、x、y、z を含む浮動小数点数の配列が返されます。複数の座標を指定した場合、1 つだけが返されます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    gl (boolean): グローバル座標の位置の値を返します(既定)。

    -----------------------------------------

    local (boolean): ローカル座標の位置の値を返します。

    -----------------------------------------

    x (boolean): Xの値だけを返します。

    -----------------------------------------

    y (boolean): Yの値だけを返します。

    -----------------------------------------

    z (boolean): Zの値だけを返します。

    -----------------------------------------

    Return Value:
    None: float[]中心を求められた場合(既定)。float1 つの座標だけが指定した場合。
    """
    pass

    
def objectType(isAType: str = "",isType: str = "",tagFromType: str = "",typeFromTag: int = 1,typeTag: bool = False) -> None:
    """
    このコマンドは、要素のタイプを返します。警告: このコマンドは不完全で、すべてのオブジェクト タイプでサポートされるとは限りません。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    isAType (string): オブジェクトが指定したタイプまたは指定したタイプのオブジェクトから派生したものである場合はtrueを返します。このフラグはディペンデンシーノードでのみ機能します。

    -----------------------------------------

    isType (string): オブジェクトが指定したタイプである場合はtrueを返します。それ以外はfalseを返します。

    -----------------------------------------

    tagFromType (string): タイプ名が指定されていればタイプのタグを返します。

    -----------------------------------------

    typeFromTag (int): 整数タイプのタグが指定されていればタイプ名を返します。

    -----------------------------------------

    typeTag (boolean): そのオブジェクトタイプの固有の整数タグを返します。すべてのオプジェクトタイプにタグがあるとは限りません。これは、バイナリファイルフォーマットで指定したタイプのノードを識別するために使われる、固有の4バイトの値です。

    -----------------------------------------

    Return Value:
    None: string指定されたオブジェクトのタイプboolean「isType」の場合: 指定されたタイプのオブジェクトでしたか?
    """
    pass

    
def objExists() -> None:
    """
    このコマンドは、指定した名前のオブジェクトが存在するかどうかによって、true または false を返します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    Return Value:
    None: booleanコマンドの結果
    """
    pass

    
def removeMultiInstance(allChildren: bool = False,b: bool = False) -> None:
    """
    multiElement の特定のインスタンスを除去します。出力アトリビュートは、ノードが次回実行された際に再生成されるので、入力アトリビュートのみに便利です。このコマンドはインスタンスを除去し、オプションでそのインスタンスの入出力接続をすべて切断します。-b true フラグを使用して接続を切断しない場合、接続が存在すると、このコマンドはエラーになります。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    allChildren (boolean): 引数がtrueの場合は、複数の親のすべての子を削除します。

    -----------------------------------------

    b (boolean): この引数をtrueにすると、アトリビュートのすべての接続が切断されてから要素が除去されます。falseにした場合、要素が接続されていると、このコマンドはエラーになります。

    -----------------------------------------

    Return Value:
    None: boolean(インスタンスが除去された場合は true、何らかの問題がある場合は false (アトリビュートが接続されているが、-b true が指定されなかった場合など))
    """
    pass

    
def renameAttr() -> None:
    """
    指定されたユーザ定義のアトリビュートの名前を、文字列引数で指定された名前に変更します。新しい名前が既存の名前と同じである場合、このコマンドはエラーになります。アトリビュートの名前を空の文字列にすることはできません。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    Return Value:
    None: string新しい名前。元に戻した場合、オリジナルの名前が返されます。
    """
    pass

    
def setAttr(alteredValue: bool = False,caching: bool = False,capacityHint: int = 1,channelBox: bool = False,clamp: bool = False,keyable: bool = False,lock: bool = False,size: int = 1,type: str = "") -> None:
    """
    ディペンデンシー ノードのアトリビュートの値を設定します。-l/-k/-s フラグを使用しているときは、アトリビュートの値を設定する必要はありません。-type フラグは、非数値型のアトリビュートを設定するときのみに必要となります。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    alteredValue (boolean): 値は現在値にすぎず、(アトリビュートに入力接続がある場合は)次の評価で変更される可能性があります。このフラグはファイル入出力時のみに使用します。したがって、入力接続を持つアトリビュートのデータが、ファイルが開かれてから最初の評価時に上書きされることはありません。

    -----------------------------------------

    caching (boolean): アトリビュートの内部キャッシュをオンまたはオフに設定します。すべてのアトリビュートのキャッシュを定義できるわけではありません。既定でキャッシュするように定義されていないアトリビュートに限り、キャッシュを設定することができます。また、マルチアトリビュート要素にはキャッシュを設定することができません。キャッシュの設定は、複合アトリビュートの子アトリビュートにも影響を及ぼします。

    -----------------------------------------

    capacityHint (uint): -sizeフラグで十分な情報を指定できないアトリビュートに対して、メモリ割り当てヒントを指定するために使用されます。このフラグはオプションであり、主にファイルの読み取りや書き出し中に使用します。このフラグは特定のアトリビュートでのみ使用され、フラグの値の解釈はアトリビュートごとに異なります。このフラグは現在(node.attribute)によって使用されています。mesh.face-フェースエッジリストの合計要素数のヒントを指定します。

    -----------------------------------------

    channelBox (boolean): channelBoxでのアトリビュートの表示をオンまたはオフに設定します。キー設定可能なアトリビュートは、channelBox設定に関係なく常にchannelBoxに表示されます。

    -----------------------------------------

    clamp (boolean): 数値アトリビュートで、その値がアトリビュートの範囲外である場合、強制的に最小値あるいは最大値にします。失敗することはありません。

    -----------------------------------------

    keyable (boolean): アトリビュートのキー設定可能な状態をオンまたはオフに設定します。

    -----------------------------------------

    lock (boolean): アトリビュートのロック状態をオンまたはオフに設定します。

    -----------------------------------------

    size (uint): マルチアトリビュート配列のサイズを定義します。これは単なるヒントで、できるだけ効率的にメモリを割り当てられるようにするために使用します。

    -----------------------------------------

    type (string): データ型を識別します。-typeフラグが指定されていない場合は、数値型と想定されます。

    -----------------------------------------

    Return Value:
    None: なし照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def currentUnit(angle: str = "",fullName: bool = False,linear: str = "",time: str = "",updateAnimation: bool = False) -> None:
    """
    このコマンドを使うと、Maya での作業における単位を変更することができます。次の 3 種類の単位があります: linear、angular、time。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    angle (string): 現在の角度単位を設定します。有効な文字列:[deg|degree|rad|ラジアン]照会すると、現在の角度単位を示す文字列を返します。

    -----------------------------------------

    fullName (boolean): 照会モード専用フラグです。-linear/-angle/-timeフラグのいずれかと一緒に指定すると、単位の長い記述形式を返します。たとえば、mmとmillimeterは同じ単位ですが、前者は単位名の短い記述形式で後者は長い記述形式です。

    -----------------------------------------

    linear (string): 現在のリニア単位を設定します。有効な文字列:[mm|ミリメートル|cm|センチメートル|m|メートル|km|キロメートル|in|インチ|ft|フィート|yd|ヤード|mi|マイル]照会すると、現在のリニア単位を示す文字列を返します。

    -----------------------------------------

    time (string): 現在の時間単位を設定します。有効な文字列:[時|分|秒|ミリ秒|ゲーム|フィルム|PAL|NTSC|show|palf|ntscf|23.976fps|29.97fps|29.97df|47.952fps|59.94fps|44100fps|48000fps]照会すると、現在の時間単位を返します。時間単位には長い記述形式はありません。秒ベースでない時間単位は、以下のフレーム/秒として解釈されます。ゲーム:15fpsフィルム:24fpsPAL:25fpsNTSC:30fpsshow:48fpspalf:50fpsntscf:60fps

    -----------------------------------------

    updateAnimation (boolean): 編集モード専用フラグです。-timeフラグと一緒に指定すると、キーのタイム設定が更新されません。既定では、現在の時間単位を変更すると、再生のタイミングが保持されるようにキーのタイム設定が変更されます。たとえば、現在の時間単位をntscに変更すると、12filmフレームに設定されていたキーは15ntscフレームに変更されます。12filmと15ntscは両者とも0.5秒でキー設定されます。-updateAnimationをfalseに指定すると、12ntscフレームにキー設定されたままになります。既定では、-updateAnimationはtrueです。

    -----------------------------------------

    Return Value:
    None: string設定された新しい現在の単位照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def curveRGBColor(hueSaturationValue: bool = False,list: bool = False,listNames: bool = False,remove: bool = False,resetToFactory: bool = False,resetToSaved: bool = False) -> None:
    """
    このコマンドは、グラフ エディタ(Graph Editor)でカーブを描画するために使用されるカスタム カーブ カラーを作成、変更、除去します。カスタム カーブの名前は単一の文字に相当する「?」ワイルドカードや任意数の文字に相当する「*」を含むことができます。このカラーは UI の一部であって、モデルの保存データの一部ではありません。このコマンドは元に戻せません。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    hueSaturationValue (boolean): RGB値が実際にはHSV値であることを示します。

    -----------------------------------------

    list (boolean): すべてのカーブカラー名とその値のリストを書き出します。

    -----------------------------------------

    listNames (boolean): すべてのカーブカラー名の配列を返します。

    -----------------------------------------

    remove (boolean): 指定したカーブカラーを除去します。

    -----------------------------------------

    resetToFactory (boolean): すべてのカーブカラーを既定にリセットします。

    -----------------------------------------

    resetToSaved (boolean): すべてのカーブカラーを保存した値にリセットします。

    -----------------------------------------

    Return Value:
    None: float[]HSV フラグの照会から取得される HSV 値照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def displayAffected() -> None:
    """
    現在セレクション リスト内にあるオブジェクトの影響を受ける、オブジェクトの特殊カラーリングのオンとオフが切り替わります。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    Return Value:
    None: int影響を受ける表示数照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def displayColor(active: bool = False,create: bool = False,dormant: bool = False,list: bool = False,queryIndex: int = 1,resetToFactory: bool = False,resetToSaved: bool = False) -> None:
    """
    アプリケーション内のすべてのものの表示カラーの変更か照会が行われ、ユーザがカラーを設定できるようになります。カラーは、選択されていない状態のカラー パレットかアクティブなカラー パレットにカラー インデックスで定義されます。このカラーは UI の一部であって、モデルの保存データの一部ではありません。このコマンドは元に戻せません。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    active (boolean): アクティブ状態のカラーパレットにカラーインデックスを適用することを指定します。nameには、変更するカラー名を指定します。indexにはカラーのカラーインデックスです。

    -----------------------------------------

    create (boolean): 照会か設定ができる、新しい表示カラーを作成します。カラープリファレンスの保存時のみ使用してください。

    -----------------------------------------

    dormant (boolean): 選択されていない状態のカラーパレットにカラーインデックスを適用することを指定します。dormantフラグもactiveフラグも指定しない場合は、dormantが既定になります。

    -----------------------------------------

    list (boolean): すべてのカラー名とその値のリストを書き出します。

    -----------------------------------------

    queryIndex (int): 指定したカラーインデックスでカラー名のリストを取得できます。

    -----------------------------------------

    resetToFactory (boolean): すべての表示カラーを工場出荷時の既定にリセットします。

    -----------------------------------------

    resetToSaved (boolean): すべての表示カラーを保存した値にリセットします。

    -----------------------------------------

    Return Value:
    None: なし照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def displayCull(backFaceCulling: bool = False) -> None:
    """
    サーフェスのバックフェースのカリング プロパティ表示が設定されます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    backFaceCulling (boolean): バックフェースのカリングを有効化/無効化します。

    -----------------------------------------

    Return Value:
    None: なし照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def displayLevelOfDetail(levelOfDetail: bool = False) -> None:
    """
    編集リフレッシュの表示 LOD が設定されます。有効にすると、オブジェクトはカメラからの距離に基づいて低い詳細レベルで描画されます。無効にすると、常にオブジェクトは完全解像度で表示されます。このコマンドは元に戻せません。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    levelOfDetail (boolean): LODを有効化/無効化します。

    -----------------------------------------

    Return Value:
    None: なし照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def displayPref(activeObjectPivots: bool = False,displayAffected: bool = False,displayGradient: bool = False,ghostFrames: Tuple[int, int, int] = tuple(1, 1, 1),materialLoadingMode: str = "",maxHardwareTextureResolution: bool = False,maxTextureResolution: int = 1,purgeExistingTextures: bool = False,regionOfEffect: bool = False,shadeTemplates: bool = False,textureDrawPixel: bool = False,wireframeOnShadedActive: str = "") -> None:
    """
    グローバル表示パラメータの設定と照会が実行されます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    activeObjectPivots (boolean): アクティブなオブジェクトのピボットを描画する場合の表示状態が設定されます。

    -----------------------------------------

    displayAffected (boolean): 現在セレクションリスト内にあるオブジェクトの影響を受ける、オブジェクトの特殊カラーリングのオンとオフが切り替わります。ロフト内のいずれかのカーブを選択してこの機能をオンに切り替えると、ロフトされたサーフェスは、ロフトカーブの影響を受けるのでハイライトされます。

    -----------------------------------------

    displayGradient (boolean): 一定のバックグラウンドカラーに対して、カラーグラディエントを使用してバックグラウンドを表示するかどうかを設定します。

    -----------------------------------------

    ghostFrames ([int, int, int]): フレームのゴースト化プリファレンスが設定されます。前ステップ、後ステップ、ステップサイズの順です。

    -----------------------------------------

    materialLoadingMode (string): シーンを読み込むときに、マテリアル読み込みモードを設定します。文字列の引数の有効な値は、「immediate」、「deferred」、「parallel」です。

    -----------------------------------------

    maxHardwareTextureResolution (boolean): 現在のビデオカードで使用できるハードウェアテクスチャの最高許容解像度を照会します。この最大値は、ビデオカードやオペレーティングシステムによって異なる場合があります。

    -----------------------------------------

    maxTextureResolution (int): 表示用にハードウェアテクスチャを作成するときに使用するハードウェアテクスチャの最大解像度を設定します。最大値は、このコマンドを起動した時点でハードウェアに対して定義した最大許容テクスチャに固定されます。この最大値を読み込むには、-maxHardwareTextureResolutionを使用してください。既存のハードウェアテクスチャに対する効果はありません。この最大値に固定されるのは新たに作成されるテクスチャだけです。

    -----------------------------------------

    purgeExistingTextures (boolean): 既存のハードウェアテクスチャを消去します。この処理によって、表示に使用されているハードウェアテクスチャが強制的に再評価されるので、処理に時間がかかる場合があります。

    -----------------------------------------

    regionOfEffect (boolean): 選択したCVとエディットポイントの変更内容の影響を受ける、カーブやサーフェスの領域の表示のオンとオフが切り替わります。

    -----------------------------------------

    shadeTemplates (boolean): シェード表示モードで、テンプレート化サーフェスのシェーディングされた状態としての表示のオンとオフが切り替わります。オフにすると、テンプレート化サーフェスはワイヤフレームで表示されます。

    -----------------------------------------

    textureDrawPixel (boolean): イメージプレーンを描画する場合の表示モードが設定されます。GLテクスチャの使用をtrueにするとパースビューをコールします。このフラグは通常必要ありません。Windowsでイメージプレーンの表示が高速になるかもしれませんが、アーティファクトが表示されてしまうことがあります。

    -----------------------------------------

    wireframeOnShadedActive (string): アクティブなシェーディングしたオブジェクトのワイヤフレームを描画する場合の表示状態が設定されます。文字列引数として有効な値は、「full」、「reduced」、「none」です。

    -----------------------------------------

    Return Value:
    None: なし照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def displayRGBColor(create: bool = False,hueSaturationValue: bool = False,list: bool = False,resetToFactory: bool = False,resetToSaved: bool = False) -> None:
    """
    アプリケーション内のすべてのものの表示カラーの変更か照会が行われ、ユーザがカラーを設定できるようになります。このカラーは UI の一部であって、モデルの保存データの一部ではありません。このコマンドは元に戻せません。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    create (boolean): 照会か設定ができる、新しいRGB表示カラーが作成されます。カラープリファレンスの保存時のみ使用してください。nameには、変更するカラー名を指定します。

    -----------------------------------------

    hueSaturationValue (boolean): RGB値が実際にはHSV値であることを示します。照会時、3つの浮動小数点の配列としてHSV値を返します。rgbはカラーのRGB値です(0から1)。

    -----------------------------------------

    list (boolean): すべてのRGBカラー名とその値のリストが書き出されます。

    -----------------------------------------

    resetToFactory (boolean): すべてのRGB表示カラーが、工場出荷時の既定にリセットされます。

    -----------------------------------------

    resetToSaved (boolean): すべてのRGB表示カラーが、保存された値にリセットされます。

    -----------------------------------------

    Return Value:
    None: stringリスト フラグを使用する場合。その他の場合はなし。照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def displaySmoothness(all: bool = False,boundary: bool = False,defaultCreation: bool = False,divisionsU: int = 1,divisionsV: int = 1,full: bool = False,hull: bool = False,pointsShaded: int = 1,pointsWire: int = 1,polygonObject: int = 1,renderTessellation: bool = False,simplifyU: int = 1,simplifyV: int = 1) -> None:
    """
    NURBS カーブとサーフェスの表示の滑らかさが、あらかじめ定義された値またはカスタム値に設定されます。ハルなどの精度とハルの単純化係数も表示モード用に設定されます。現在、このコマンドは取り消すことはできません。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    all (boolean): すべてのカーブとサーフェスの平滑性を変更します。

    -----------------------------------------

    boundary (boolean): サーフェスの境界のみを使用してワイヤフレームが表示されます。まだ完全には実装されていません。

    -----------------------------------------

    defaultCreation (boolean): 作成時の既定値(-du、-dv、-pw、-psのみを適用)。

    -----------------------------------------

    divisionsU (int): U方向における、スパンごとのアイソパラム分割数。値の有効範囲は[0,64]です。

    -----------------------------------------

    divisionsV (int): V方向における、スパンごとのアイソパラム分割数。値の有効範囲は[0,64]です。

    -----------------------------------------

    full (boolean): 完全解像度でサーフェスが表示されます。これが既定です。

    -----------------------------------------

    hull (boolean): ハルを使用してサーフェスが表示されます(サーフェスノットポイントではなく、コントロールポイントが描画されます)。このモードは、サーフェス上でポイントを評価する必要がないので、サーフェスを修正したときの、表示パフォーマンスが改善されて便利です。

    -----------------------------------------

    pointsShaded (int): シェーディングモードでのサーフェススパンごとのポイント数。値の有効範囲は[1,64]です。

    -----------------------------------------

    pointsWire (int): ワイヤフレームモードにおける、サーフェスアイソパラムスパンごとのポイント数、またはカーブスパンごとのポイント数。値の有効範囲は[1,128]です。注:NURBSカーブにも適用されるフラグはこれだけです

    -----------------------------------------

    polygonObject (int): 指定した解像度でポリゴンオブジェクトが表示されます。

    -----------------------------------------

    renderTessellation (boolean): シェーディングモードではレンダーテッセレーションパラメータを使って表示します。

    -----------------------------------------

    simplifyU (int): ハル表示モードの場合にU方向でスキップされるスパン数。

    -----------------------------------------

    simplifyV (int): ハル表示モードの場合にV方向でスキップされるスパン数。

    -----------------------------------------

    Return Value:
    None: なし照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def displaySurface(flipNormals: bool = False,twoSidedLighting: bool = False,xRay: bool = False) -> None:
    """
    指定したサーフェスかアクティブなサーフェスの表示のオプションが切り替わります。一般的に、このコマンドは NURBS またはポリゴン メッシュ サーフェスに適用され、その他のタイプのオブジェクトは無視します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    flipNormals (boolean): サーフェス上で法線方向を反転します。

    -----------------------------------------

    twoSidedLighting (boolean): サーフェスを両面とみなすべきかどうかを切り替えます。片面の場合、描画とレンダリングでは、パフォーマンスを高めるために片面のライティングとバックフェースカリングを使用する場合があります。

    -----------------------------------------

    xRay (boolean): X線モードが切り替わります(サーフェスが透明になります)。

    -----------------------------------------

    Return Value:
    None: boolean照会モードの場合。照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def hide(allObjects: bool = False,clearLastHidden: bool = False,clearSelection: bool = False,invertComponents: bool = False,returnHidden: bool = False,testVisibility: bool = False) -> None:
    """
    hide コマンドはオブジェクトを非表示にするために使用します。フラグを使用しないと指定したオブジェクトが、またはオブジェクトを指定しないとアクティブ オブジェクトが非表示になります。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    allObjects (boolean): すべてを非表示にします(最上位レベルのオブジェクト)。

    -----------------------------------------

    clearLastHidden (boolean): 最後に非表示にしたリストをクリアします。

    -----------------------------------------

    clearSelection (boolean): 操作後に選択をクリアします。

    -----------------------------------------

    invertComponents (boolean): 指定されていないコンポーネントを非表示にします。

    -----------------------------------------

    returnHidden (boolean): オブジェクトを非表示にして、非表示にしたオブジェクトのリストを返します。

    -----------------------------------------

    testVisibility (boolean): 可視性は変更せずに、テストのみを行います(非表示の場合は1、表示の場合は2、部分的な表示の場合は3を返します)。

    -----------------------------------------

    Return Value:
    None: なし
    """
    pass

    
def showHidden(above: bool = False,allObjects: bool = False,below: bool = False,lastHidden: bool = False) -> None:
    """
    showHidden コマンドは、非表示オブジェクトを可視にするために使用します。フラグが指定されていない場合、コマンドに指定したオブジェクトだけが可視状態になります。オブジェクトの親が不可視の場合、当該オブジェクトも不可視のままです。不可視性は継承されます。オブジェクトを確実に可視にするには、-a/above フラグを使用します。このフラグを使用すると、オブジェクト(1 つまたは複数)の不可視の祖先がすべて可視になります。-b/below フラグを使用すると、オブジェクトの下のすべての不可視オブジェクトが可視になります。すべてのオブジェクトを可視にするには、-all/allObjects フラグを使用します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    above (boolean): オブジェクトと、そのオブジェクトのすべての不可視の祖先を可視にします。

    -----------------------------------------

    allObjects (boolean): すべての不可視オブジェクトを可視にします。

    -----------------------------------------

    below (boolean): オブジェクトと、そのオブジェクトのすべての不可視の子孫を可視にします。

    -----------------------------------------

    lastHidden (boolean): 最後の非表示コマンドで非表示になったすべての項目を表示します。

    -----------------------------------------

    Return Value:
    None: なし
    """
    pass

    
def timeCode(mayaStartFrame: float = 1.0,productionStartFrame: float = 1.0,productionStartHour: float = 1.0,productionStartMinute: float = 1.0,productionStartSecond: float = 1.0) -> None:
    """
    このコマンドを使用して、ファイルのタイム コード情報を照会および設定します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    mayaStartFrame (float): タイムコードのMaya開始時間をフレーム単位で設定します。照会モードでは、タイムコードのMaya開始フレームを返します。

    -----------------------------------------

    productionStartFrame (float): タイムコードのプロダクション開始時間をフレーム単位で設定します。照会モードでは、プロダクション開始時間の秒以下のフレームを返します。

    -----------------------------------------

    productionStartHour (float): タイムコードのプロダクション開始時間を時間単位で設定します。照会モードでは、プロダクション開始時間の時間を返します。

    -----------------------------------------

    productionStartMinute (float): タイムコードのプロダクション開始時間を分単位で設定します。照会モードでは、プロダクション開始時間の分を返します。

    -----------------------------------------

    productionStartSecond (float): タイムコードのプロダクション開始時間を秒単位で設定します。照会モードでは、プロダクション開始時間の秒を返します。

    -----------------------------------------

    Return Value:
    None: time値照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def toggle(above: bool = False,below: bool = False,boundary: bool = False,boundingBox: bool = False,controlVertex: bool = False,doNotWrite: bool = False,editPoint: bool = False,extent: bool = False,facet: bool = False,geometry: bool = False,gl: bool = False,highPrecisionNurbs: bool = False,hull: bool = False,latticePoint: bool = False,latticeShape: bool = False,localAxis: bool = False,newCurve: bool = False,newPolymesh: bool = False,newSurface: bool = False,normal: bool = False,origin: bool = False,point: bool = False,pointDisplay: bool = False,pointFacet: bool = False,rotatePivot: bool = False,scalePivot: bool = False,selectHandle: bool = False,state: bool = False,surfaceFace: bool = False,template: bool = False,uvCoords: bool = False,vertex: bool = False) -> None:
    """
    toggle コマンドは、オブジェクトが持つさまざまなオブジェクト コンポーネントの表示と非表示を切り替えます。たとえば、リストにある NURBS カーブやサーフェスに対して、CV およびエディット ポイントの表示と非表示を切り替えることができます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    above (boolean): リストされたオブジェクトから上の全オブジェクトの状態を切り替えます。

    -----------------------------------------

    below (boolean): リストされたオブジェクト以下の全オブジェクトの状態を切り替えます。

    -----------------------------------------

    boundary (boolean): リストされたメッシュオブジェクトの境界の表示を切り替えます。

    -----------------------------------------

    boundingBox (boolean): リストされたオブジェクトのバウンディングボックスの表示を切り替えまたは照会します。

    -----------------------------------------

    controlVertex (boolean): リストされたカーブまたはサーフェスのCVの表示を切り替えます。

    -----------------------------------------

    doNotWrite (boolean): 「thisshouldbewrittentothefile」の状態を切り替えます。

    -----------------------------------------

    editPoint (boolean): リストされたカーブまたはサーフェスのエディットポイントの表示を切り替えます。

    -----------------------------------------

    extent (boolean): リストされたメッシュオブジェクトの範囲表示を切り替えます。

    -----------------------------------------

    facet (boolean): normalフラグとともに使用します。法線表示スタイルをファセットの表示に設定します。

    -----------------------------------------

    geometry (boolean): リストされたオブジェクトのジオメトリの表示を切り替えます。

    -----------------------------------------

    gl (boolean): 全オブジェクトの状態を切り替えます。

    -----------------------------------------

    highPrecisionNurbs (boolean): NURBSの高精度表示を切り替えます。

    -----------------------------------------

    hull (boolean): リストされたカーブまたはサーフェスのハルの表示を切り替えます。

    -----------------------------------------

    latticePoint (boolean): リストされたラティスのポイントの表示を切り替えます。

    -----------------------------------------

    latticeShape (boolean): リストされたラティスの表示を切り替えます。

    -----------------------------------------

    localAxis (boolean): リストされたオブジェクトのローカル軸の表示を切り替えます。

    -----------------------------------------

    newCurve (boolean): 新しいカーブオブジェクトのコンポーネントの表示状態を設定します。

    -----------------------------------------

    newPolymesh (boolean): 新しいポリゴンメッシュオブジェクトのコンポーネントの表示状態を設定します。

    -----------------------------------------

    newSurface (boolean): 新しいサーフェスオブジェクトのコンポーネントの表示状態を設定します。

    -----------------------------------------

    normal (boolean): リストされたサーフェスとメッシュの法線の表示を切り替えます。

    -----------------------------------------

    origin (boolean): リストされたサーフェスの原点の表示を切り替えます。

    -----------------------------------------

    point (boolean): normalフラグとともに使用します。法線表示スタイルを頂点の表示に設定します。

    -----------------------------------------

    pointDisplay (boolean): リストされたサーフェスのポイントの表示を切り替えます。

    -----------------------------------------

    pointFacet (boolean): normalフラグとともに使用します。法線表示スタイルを頂点とフェースの表示に設定します。

    -----------------------------------------

    rotatePivot (boolean): リストされたオブジェクトの回転ピボットハンドルの表示を切り替えます。

    -----------------------------------------

    scalePivot (boolean): リストされたオブジェクトのスケールピボットハンドルの表示を切り替えます。

    -----------------------------------------

    selectHandle (boolean): リストされたオブジェクトのセレクションハンドルの表示を切り替えます。

    -----------------------------------------

    state (boolean): 状態を切り替える代わりに、trueまたはfalseで明示的に状態を指定します。照会はできません。

    -----------------------------------------

    surfaceFace (boolean): リストされたサーフェスのサーフェスフェースハンドルの表示を切り替えます。

    -----------------------------------------

    template (boolean): リストされたオブジェクトのテンプレートの状態を切り替えます。

    -----------------------------------------

    uvCoords (boolean): リストされたメッシュオブジェクトのUV座標の表示を切り替えます。

    -----------------------------------------

    vertex (boolean): リストされたメッシュオブジェクトの頂点の表示を切り替えます。

    -----------------------------------------

    Return Value:
    None: boolean照会モードの場合。それ以外のモードの場合はなし。照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def toggleDisplacement() -> None:
    """
    このコマンドは、ポリゴンのディスプレイスメント プレビューを切り替えます。このコマンドは取り消すことができません。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    Return Value:
    None: なし
    """
    pass

    
def expandedSelection(depth: int = 1,expansionType: str = "") -> None:
    """
    現在のセレクション リストを調べ、そのリストを特定の基準を満たすように拡張して返します。使用される正確な基準については、コマンド フラグを参照してください。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    depth (uint): 現在の選択範囲から拡張するステップ数。値が0の場合、選択範囲は拡張されません。

    -----------------------------------------

    expansionType (string): 選択範囲を拡張するグラフのタイプです。正当な値は次のとおりです。DG:通常のDG接続を使用EG:評価グラフ接続を使用SG:評価グラフ内でスケジュールグラフ接続を使用選択した実際のノードが、拡張するグラフに含まれていない場合(たとえば、EGタイプを使用するときに評価ノードがない場合など)、選択したノードは出力に表示されません。このフラグが指定されていない場合、既定でタイプはDGになります。

    -----------------------------------------

    Return Value:
    None: string要求されたセレクション リスト拡張内のオブジェクトのリストstring[]DG 拡張でアクセスしたノードのリストstring[](Python のみ)EG または SG 拡張でアクセスした単一ノードおよびタプルのリスト。タプルはクラスタ内の DG ノードを表します。
    """
    pass

    
def hilite(replace: bool = False,toggle: bool = False,unHilite: bool = False) -> None:
    """
    指定したオブジェクトのハイライトを設定または設定解除します。オブジェクトのハイライトを設定すると、オブジェクトのコンポーネントを選択できるようになります。オブジェクトが指定されていない場合、セレクション リストが使われます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    replace (boolean): 指定したオブジェクトにハイライトを設定します。前にハイライトされていたオブジェクトは、ハイライトされなくなります。

    -----------------------------------------

    toggle (boolean): 指定したオブジェクトのハイライトの状態を切り替えます。

    -----------------------------------------

    unHilite (boolean): ハイライトリストから指定したオブジェクトを除去します。

    -----------------------------------------

    Return Value:
    None: なし
    """
    pass

    
def isolateSelect(addDagObject: str = "",addSelected: bool = False,addSelectedObjects: bool = False,loadSelected: bool = False,removeDagObject: str = "",removeSelected: bool = False,state: bool = False,update: bool = False,viewObjects: bool = False) -> None:
    """
    このコマンドは、引数として指定された特定のモデリング ビューで選択項目の分離モードのオンとオフを切り替えます。選択項目の分離モードはディスプレイ モードの 1 つで、このモードでは現在選択されているオブジェクトがリストに追加され、これらのオブジェクトだけがビューに表示されます。したがって、特定のオブジェクトやオブジェクト コンポーネントだけを選択的に表示することができます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    addDagObject (name): ビューに表示されるように、指定したオブジェクトをオブジェクトセットに追加します。

    -----------------------------------------

    addSelected (boolean): ビューに表示されるように、現在アクティブなオブジェクトをオブジェクトのセットに追加します。

    -----------------------------------------

    addSelectedObjects (boolean): ビューに表示されるように、選択したオブジェクトをオブジェクトのセットに追加します。このフラグは、addSelectedとは異なり、選択したコンポーネントを無視してすべてのオブジェクトを追加します。

    -----------------------------------------

    loadSelected (boolean): 表示されているオブジェクトを、現在アクティブなオブジェクトで置き換えます。

    -----------------------------------------

    removeDagObject (name): ビューに表示されるオブジェクトセットから、指定されたオブジェクトを除去します。

    -----------------------------------------

    removeSelected (boolean): ビューに表示されている、現在アクティブなオブジェクトをオブジェクトのセットから除去します。

    -----------------------------------------

    state (boolean): 選択項目の分離モードのオン、オフを切り替えます。

    -----------------------------------------

    update (boolean): 表示されるオブジェクトセットの変更に従って、ビューに表示されているオブジェクトのリストを更新します。

    -----------------------------------------

    viewObjects (boolean): 選択項目の分離モードがオンの場合、ビューで可視のオブジェクトのリストを含むobjectSetの名前(もしあれば)を返します。オフの場合、空の文字列が返されます。

    -----------------------------------------

    Return Value:
    None: boolean照会で使用する場合照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def pickWalk(direction: str = "",recurse: bool = False,type: str = "") -> None:
    """
    pickWalk コマンドでは現在選択されているノードに関連して、セレクション リストを迅速に変更できます。現在選択されているものを選択解除し、現在選択されているリストから指定した方向にあるノードを選択して、あるセレクション リストから別のセレクション リストに移動します。コマンド ラインのオブジェクトを指定すると、選択したリストではなく、そのオブジェクトから移動します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    direction (string): ノードからの方向。up、down、left、right、in、outのいずれかを選択します。upを選択すると親ノードへ、downを選択すると子ノードへ、leftまたはrightを選択すると兄弟ノードへ移動します。サーフェス上のCVを選択した場合、左方向と右方向ではサーフェスのUパラメータ方向、上方向と下方向ではVパラメータ方向に移動します。inとoutはタイプフラグが「latticepoints」のみの場合に使用します。既定はrightです。

    -----------------------------------------

    recurse (boolean): 指定すると、ウォーク時に反復処理します。

    -----------------------------------------

    type (string): 選択肢は、nodes、instances、edgeloop、edgering、faceloop、keys、latticepoints、motiontrailpointsです。typeがnodesであれば、左方向と右方向で、後の兄弟DAGノードに移動します。instancesにすると、左方向と右方向で、同じDAGノードの前後のインスタンスに移動します。edgeloopにすると、最初に選択したエッジから開始するエッジループが選択されます。edgeringにすると、最初に選択したエッジから開始するエッジリングが選択されます。faceloopにし、フェースループを定義する2つの接続された四角フェースを選択した場合、そのフェースループが選択されます。edgeloop、edgering、faceloopは、そのコマンドで続けて選択する限り、最初に選択したエッジやフェースを記憶します。コマンドは、この情報を使用して、「次」に選択するべきループやリングを判断します。方向フラグを「left」や「right」にすることで、前方向にも逆方向にも選択することができます。typeがmotiontrailpointsであれば、左方向と右方向で、それぞれ前または次のモーション軌跡のポイントに移動します。既定はnodesです。

    -----------------------------------------

    Return Value:
    None: string[]新しく選択したオブジェクトのリスト
    """
    pass

    
def select(add: bool = False,addFirst: bool = False,all: bool = False,allDagObjects: bool = False,allDependencyNodes: bool = False,clear: bool = False,containerCentric: bool = False,deselect: bool = False,hierarchy: bool = False,noExpand: bool = False,replace: bool = False,symmetry: bool = False,symmetrySide: int = 1,toggle: bool = False,visible: bool = False) -> None:
    """
    このコマンドを使用して、オブジェクトをアクティブ リストに追加、またはリストからオブジェクトを削除します。5 つのフラグ [-add, -af, -r, -d, -tgl] を指定していない場合、既定ではアクティブ リストのオブジェクトが指定したリストのオブジェクトに置き換えられます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    add (boolean): アクティブリストの既存の項目を除去することなく、指定した項目をアクティブリストに追加することを示します。

    -----------------------------------------

    addFirst (boolean): アクティブリストから既存の項目を除去することなく、指定した項目をアクティブリストの先頭に追加することを示します。

    -----------------------------------------

    all (boolean): ルートレベルの削除可能なすべてのDAGオブジェクトと、DAGノード以外の削除可能なすべてのディペンデンシーノードを選択することを示します。

    -----------------------------------------

    allDagObjects (boolean): ルートレベルの削除可能なすべてのDAGオブジェクトを選択することを示します。

    -----------------------------------------

    allDependencyNodes (boolean): 削除可能なすべてのDAGオブジェクトを含め、削除可能なすべてのディペンデンシーノードを選択することを示します。

    -----------------------------------------

    clear (boolean): アクティブリストをクリアします。これは、「select-d;」を実行するより効果的です。また、「select-d;」では、「-ne」を一緒に指定しなければアクティブリストからセットは除去されません。

    -----------------------------------------

    containerCentric (boolean): メインビューポート内の選択項目に適用するルールと同じ選択ルールが選択コマンドに適用されるように指定します。特に、指定したオブジェクトがブラックボックスコンテナのメンバーであり、ノードとしてパブリッシュされない場合、Mayaではこのようなオブジェクトは選択されません。代わりに、選択項目に対して有効な一番上にある親が選択されます。

    -----------------------------------------

    deselect (boolean): 指定した項目がアクティブリストにある場合、それらの項目をアクティブリストから除去することを示します。

    -----------------------------------------

    hierarchy (boolean): 指定したDAGオブジェクトのすべての子、孫、曾孫なども選択することを示します。

    -----------------------------------------

    noExpand (boolean): 選択した項目の中にあるセットをメンバーリストに展開しないことを示します。これによって、セットのメンバー(既定動作)ではなくセットを選択できるようになります。

    -----------------------------------------

    replace (boolean): アクティブリストの既存の項目を指定した項目で置き換えることを示します。

    -----------------------------------------

    symmetry (boolean): 現在のsymmetricModellingコマンド設定を使用してコンポーネントを対称的に選択するように指定します。対称モデリングが有効になっていない場合、このフラグは影響しません。

    -----------------------------------------

    symmetrySide (int): 指定されたパラメータに従って、現在のシンメトリオブジェクトに含まれるコンポーネントを選択するように指定します。パラメータの有効値は次のとおりです。-1:非対称領域でコンポーネントを選択します。0:シンメトリの継ぎ目でコンポーネントを選択します。1:サイド1でコンポーネントを選択します。2:サイド2でコンポーネントを選択します。対称モデリングが有効になっていない場合、このフラグは影響しません。注:現在はトポロジシンメトリでのみ機能します。

    -----------------------------------------

    toggle (boolean): 与えられたリストの項目のうち、アクティブリストにある項目をアクティブリストから除去し、アクティブリストにない項目をアクティブリストに追加することを示します。

    -----------------------------------------

    visible (boolean): 指定した項目の内、可視の項目のみに影響することを示します。

    -----------------------------------------

    Return Value:
    None: なし
    """
    pass

    
def selectKey(addTo: bool = False,animation: str = "",attribute: str = "",clear: bool = False,controlPoints: bool = False,float: Tuple[float, float] = tuple(1.0, 1.0),hierarchy: str = "",inTangent: bool = False,includeUpperBound: bool = False,index: int = 1,keyframe: bool = False,outTangent: bool = False,remove: bool = False,replace: bool = False,shape: bool = False,time: Tuple[float, float] = tuple(1.0, 1.0),toggle: bool = False,unsnappedKeys: float = 1.0) -> None:
    """
    このコマンドは、キーセット上に作用します。キーセットは、1 つまたは複数のアニメーション カーブ上の指定したタイム レンジ内のキー グループとして定義されます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    addTo (boolean): キーフレーム/接線の現在のセレクションに追加します。

    -----------------------------------------

    animation (string): このコマンドが、自身が影響を与えるアニメーションを取得する場所です。有効な値は「objects」、「keys」、「keysOrObjects」で、既定は「keysOrObjects」です(詳細については、説明を参照してください)。

    -----------------------------------------

    attribute (string): 選択するアトリビュートのリストです。照会モードでは、このフラグに値が必要になります。

    -----------------------------------------

    clear (boolean): アクティブリストからすべてのキーフレームと接線を除去します。

    -----------------------------------------

    controlPoints (boolean): このフラグは、アトリビュートのリストにシェイプのコントロールポイントを含めるかどうかを明示的に指定します(「-s」フラグを参照)。既定:false(「pasteKey」コマンドでは無効)。照会モードでは、このフラグに値が必要になります。

    -----------------------------------------

    float (floatrange): 時間ベースのanimCurve上の時間ベースでないキー(またはキーレンジ)を固有に表す値です。有効なfloatRangeは、単一の値(-f10)、または上下限をコロンで区切った文字列(-f"10:20")です。照会モードでは、このフラグに値が必要になります。

    -----------------------------------------

    hierarchy (string): 階層展開オプションです。有効な値は、「above」、「below」、「both」、「none」です。(「pasteKey」コマンドでは無効)。照会モードでは、このフラグに値が必要になります。

    -----------------------------------------

    inTangent (boolean): 指定したタイムレンジのキーフレームのイン接線を選択します。

    -----------------------------------------

    includeUpperBound (boolean): -t/timeまたは-f/floatフラグがキーの範囲を表す場合に、範囲の上限のキーをキーセットに含めるかどうかを定義します。既定値:true。このフラグは、-t/timeフラグの引数が上下限が指定したタイムレンジである場合に限り有効です（「pasteKey」コマンドでこのフラグを使用するときに「replace」、「fitReplace」、「scaleReplace」などのオプションを指定すると、このフラグは、置き換えられるターゲットカーブの時間範囲のみを参照します。このフラグは、クリップボードからペーストされたカーブには影響しません）。

    -----------------------------------------

    index (uint): アニメーションカーブ上のキーのインデックス照会モードでは、このフラグに値が必要になります。

    -----------------------------------------

    keyframe (boolean): キーフレームだけを選択します(-in/-outと組み合わせて使用することはできません)。

    -----------------------------------------

    outTangent (boolean): 指定したタイムレンジのキーフレームのアウト接線を選択します。

    -----------------------------------------

    remove (boolean): キーフレーム/接線の現在のセレクションから除去します。

    -----------------------------------------

    replace (boolean): キーフレーム/接線の現在のセレクションを置き換えます。

    -----------------------------------------

    shape (boolean): トランスフォームの下にあるシェイプのアトリビュート(「controlPoints」以外)も考慮します。既定:true(「pasteKey」コマンドでは無効)。照会モードでは、このフラグに値が必要になります。

    -----------------------------------------

    time (timerange): 時間ベースのアニメーションカーブ上のキー(またはキーレンジ)を固有に表す時間です。単一のフレームまたはフレーム範囲の設定方法については、以下のコード例を参照してください。照会モードでは、このフラグに値が必要になります。

    -----------------------------------------

    toggle (boolean): 指定したキーセットの選択状態を切り替えます。

    -----------------------------------------

    unsnappedKeys (float): 指定した数値の倍数ではない時間を持つキーだけを選択します。

    -----------------------------------------

    Return Value:
    None: intキーが選択(または選択解除)されたカーブの数です。
    """
    pass

    
def selectMode(component: bool = False,hierarchical: bool = False,leaf: bool = False,object: bool = False,preset: bool = False,root: bool = False,template: bool = False) -> None:
    """
    selectMode コマンドは、セレクション モードを変更するために使用します。オブジェクト、コンポーネント、ルート、リーフ、テンプレートの各モードは同時に選択できません。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    component (boolean): コンポーネントの選択をオンに設定します。コンポーネントセレクションモードに設定すると、コンポーネントセレクションマスクに基づいてフィルタによる選択を行えるようになります。コンポーネントセレクションマスクは、選択可能なコンポーネントを示す、オブジェクト関連のセレクションマスクのセットです。

    -----------------------------------------

    hierarchical (boolean): 階層の選択をオンに設定します。階層の選択には、ルート、リーフ、テンプレートの3つのタイプがあります。ルート、リーフ、あるいはテンプレートの各モードに設定すると、階層モードが設定されます。階層モードに設定すると、ルート、リーフ、またはテンプレートのうち前回オンになっていたモードが設定されます。

    -----------------------------------------

    leaf (boolean): リーフセレクションモードをオンに設定します。リーフセレクションモードに設定すると、リーフレベルのオブジェクトを選択できます。これはオブジェクトセレクションモードと似ていますが、オブジェクトセレクションマスクは無視されます。

    -----------------------------------------

    object (boolean): オブジェクトの選択をオンに設定します。オブジェクトセレクションモードに設定すると、オブジェクトセレクションマスクに基づいてフィルタによる選択を行えるようになります。オブジェクトセレクションマスクは、選択可能なオブジェクトを示す、オブジェクト関連のセレクションマスクのセットです。マスクは「selectType」コマンドによって制御されます。オブジェクトセレクションモードでは、リーフレベルのオブジェクトが選択されます。

    -----------------------------------------

    preset (boolean): オブジェクトかコンポーネントかに関係なく、マスクセットを持つすべてのものを選択できるようにします。

    -----------------------------------------

    root (boolean): ルートセレクションモードをオンに設定します。ルートセレクションモードに設定すると、いずれかの子孫を選択することによって階層のルートを選択できるようになります。オブジェクトセレクションマスクは無視されます。

    -----------------------------------------

    template (boolean): テンプレートセレクションモードをオンに設定します。このモードでは、テンプレート化オブジェクトを選択できます。階層のルートに最も近いテンプレート付きオブジェクトが選択されます。

    -----------------------------------------

    Return Value:
    None: boolean照会操作の場合照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def selectPref(affectsActive: bool = False,allowHiliteSelection: bool = False,autoSelectContainer: bool = False,autoUseDepth: bool = False,clickBoxSize: int = 1,clickDrag: bool = False,containerCentricSelection: bool = False,disableComponentPopups: bool = False,expandPopupList: bool = False,ignoreSelectionPriority: bool = False,manipClickBoxSize: int = 1,paintSelect: bool = False,paintSelectWithDepth: bool = False,popupMenuSelection: bool = False,preSelectBackfacing: bool = False,preSelectClosest: bool = False,preSelectDeadSpace: int = 1,preSelectHilite: bool = False,preSelectHiliteSize: float = 1.0,preSelectTweakDeadSpace: int = 1,selectTypeChangeAffectsActive: bool = False,selectionChildHighlightMode: int = 1,singleBoxSelection: bool = False,straightLineDistance: bool = False,trackSelectionOrder: bool = False,useDepth: bool = False,xformNoSelect: bool = False) -> None:
    """
    このコマンドは、UI 動作を選択するために使用する状態変数を制御します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    affectsActive (boolean): 影響アクティブな切り替えを設定します。影響アクティブな切り替えがオンに設定されていると、オブジェクトモードとコンポーネントモードとの変更時にアクティブリストが影響を受けるようになります。

    -----------------------------------------

    allowHiliteSelection (boolean): コンポーネントモード時に、編集のためにオブジェクトを選択できるようにします。編集のためにオブジェクトが選択した場合、オブジェクトはハイライトカラーで表示され、オブジェクトの選択可能なコンポーネントが自動的に表示されます。

    -----------------------------------------

    autoSelectContainer (boolean): コンテナ中心の選択がオンの状態で有効にすると、ルートトランスフォームをビューポートで選択するたびに、コンテナノードも自動的に選択されます。

    -----------------------------------------

    autoUseDepth (boolean): 有効にすると、useDepthおよびpaintSelectWithDepthがシェーディング表示モードでは自動的に有効になり、ワイヤフレーム表示モードでは無効になります。

    -----------------------------------------

    clickBoxSize (uint): クリック選択時の、カーソルを囲む正方形の選択領域のサイズを定義します。正方形のサイズは、指定した値の2乗になります。つまり、この値はカーソル位置から四方の領域の量を定義します。サイズは正の値でなければなりません。

    -----------------------------------------

    clickDrag (boolean): クリック/ドラッグによる選択操作をオン/オフに設定します。

    -----------------------------------------

    containerCentricSelection (boolean): 有効の場合、ビューポートのコンテナにある任意のDAGノードを選択すると、コンテナのルートトランスフォームがあればこれが選択されます。ルートトランスフォームがない場合、コンテナ内で最上位のDAGノードが選択されます。コンテナに入っていないノードを選択しても何も起こりません。

    -----------------------------------------

    disableComponentPopups (boolean): コンポーネントを選択したときにユーザがポップアップメニューを無効にすることができる別個のプリファレンス。このプリファレンスは、popupMenuSelectionプリファレンスが有効の場合のみ意味を持ちます。

    -----------------------------------------

    expandPopupList (boolean): ポップアップセレクションモード時にこれが設定されている場合、複数のオブジェクトまたはコンポーネントを含むすべての選択項目が展開され、各オブジェクトまたはコンポーネントが単一の新しい選択項目になります。

    -----------------------------------------

    ignoreSelectionPriority (boolean): これが設定されている場合、選択を実行する際の選択の優先順位は無視されます。

    -----------------------------------------

    manipClickBoxSize (uint): マニピュレータ選択時の、カーソルを囲む正方形の選択領域のサイズを定義します。正方形のサイズは、指定した値の2乗になります。つまり、この値はカーソル位置から四方の領域の量を定義します。サイズは正の値でなければなりません。

    -----------------------------------------

    paintSelect (boolean): 有効にすると、選択ツールはセレクションボックス選択の代わりにドラッグ選択を使用します。

    -----------------------------------------

    paintSelectWithDepth (boolean): 有効にすると、ペイント選択で現在のカメラビュー内のサーフェスの後ろにあるコンポーネントは選択されません。

    -----------------------------------------

    popupMenuSelection (boolean): これが設定されている場合、ポップアップメニューが表示され、選択するオブジェクトを決定するために使用されます。メニューには、選択した候補オブジェクトの現在のユーザフィールド(マーキー)がリストされます。

    -----------------------------------------

    preSelectBackfacing (boolean): 有効にすると、事前選択で法線がカメラの方を向いていないバックフェース側のコンポーネントがハイライト表示されます。

    -----------------------------------------

    preSelectClosest (boolean): 有効にしてカーソルがサーフェス上にある場合、事前選択ハイライトでは距離に関係なくカーソルに最も近いコンポーネントを事前選択しようとします。

    -----------------------------------------

    preSelectDeadSpace (uint): この値は、カーソルがサーフェスの外側にある場合の事前選択ハイライトに使用する、カーソル周囲の領域のサイズを定義します。

    -----------------------------------------

    preSelectHilite (boolean): 有効にすると、カーソルの下にある最も近いコンポーネントがハイライト表示され、これをクリックするとそのコンポーネントが選択されることを示します。

    -----------------------------------------

    preSelectHiliteSize (float): この値は、事前選択ハイライトに使用するカーソル周囲の領域のサイズを定義します。この領域内のカーソルに最も近いコンポーネントがハイライト表示されます。

    -----------------------------------------

    preSelectTweakDeadSpace (uint): この値は、微調整モードでカーソルがサーフェスの外側にある場合の事前選択ハイライトに使用する、カーソル周囲の領域のサイズを定義します。

    -----------------------------------------

    selectTypeChangeAffectsActive (boolean): Trueの場合は、アクティブリストが新しい選択プリファレンスに従って更新されます。

    -----------------------------------------

    selectionChildHighlightMode (int): 選択されたオブジェクトの子のハイライトを制御します。有効なモードは、0:常に子をハイライト(Alwayshighlightchildren)、1:子をハイライトしない(Neverhighlightchildren)、2:オブジェクトごとに"選択項目の子をハイライト"設定を使用(Useper-object"SelectionChildHighlight"setting)です。既定モードは、(0):常に子をハイライト(Alwayshighlightchildren)です。(2)の場合、各DAGオブジェクトには、"選択項目の子をハイライト(SelectionChildHighlight)"ブーリアンフラグが個別にあります。既定では、このフラグはTRUEになります。モード(2)を有効にすると、コントロールは、選択したオブジェクトの"選択項目の子をハイライト(SelectionChildHighlight)"フラグに従います。

    -----------------------------------------

    singleBoxSelection (boolean): 単一のフィールド選択をオン/オフに設定します。このフラグがtrueに設定されている場合、ユーザフィールド(マーキー)で複数のオブジェクトが選択したときに単一のオブジェクトだけが選択されます。このフラグがfalseに設定されている場合は、フィールド内のすべてのオブジェクトが選択されます。

    -----------------------------------------

    straightLineDistance (boolean): Trueの場合は、選択の近接度に直線距離を使用します。

    -----------------------------------------

    trackSelectionOrder (boolean): 有効にすると、選択したオブジェクトとコンポーネントの順番を返します。'ls'コマンドは、スクリプトを記述する選択順のアクティブなリストを返せるようになります。

    -----------------------------------------

    useDepth (boolean): 有効にすると、セレクションボックス選択で現在のカメラビュー内のサーフェスの後ろにあるコンポーネントは選択されません。

    -----------------------------------------

    xformNoSelect (boolean): xformツールでの選択を無効にします。

    -----------------------------------------

    Return Value:
    None: boolean照会モードのみ照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def selectPriority(allComponents: int = 1,allObjects: int = 1,animBreakdown: int = 1,animCurve: int = 1,animInTangent: int = 1,animKeyframe: int = 1,animOutTangent: int = 1,byName: Tuple[str, bool] = tuple("", False),camera: int = 1,cluster: int = 1,collisionModel: int = 1,controlVertex: int = 1,curve: int = 1,curveKnot: int = 1,curveOnSurface: int = 1,curveParameterPoint: int = 1,dimension: int = 1,dynamicConstraint: int = 1,edge: int = 1,editPoint: int = 1,emitter: int = 1,facet: int = 1,field: int = 1,fluid: int = 1,follicle: int = 1,hairSystem: int = 1,handle: int = 1,hull: int = 1,ikEndEffector: int = 1,ikHandle: int = 1,imagePlane: int = 1,implicitGeometry: int = 1,isoparm: int = 1,joint: int = 1,jointPivot: int = 1,lattice: int = 1,latticePoint: int = 1,light: int = 1,localRotationAxis: int = 1,locator: int = 1,locatorUV: int = 1,locatorXYZ: int = 1,meshUVShell: int = 1,motionTrailPoint: int = 1,motionTrailTangent: int = 1,nCloth: int = 1,nParticle: int = 1,nParticleShape: int = 1,nRigid: int = 1,nonlinear: int = 1,nurbsCurve: int = 1,nurbsSurface: int = 1,orientationLocator: int = 1,particle: int = 1,particleShape: int = 1,plane: int = 1,polymesh: int = 1,polymeshEdge: int = 1,polymeshFace: int = 1,polymeshFreeEdge: int = 1,polymeshUV: int = 1,polymeshVertex: int = 1,polymeshVtxFace: int = 1,queryByName: str = "",rigidBody: int = 1,rigidConstraint: int = 1,rotatePivot: int = 1,scalePivot: int = 1,sculpt: int = 1,selectHandle: int = 1,spring: int = 1,springComponent: int = 1,stroke: int = 1,subdiv: int = 1,subdivMeshEdge: int = 1,subdivMeshFace: int = 1,subdivMeshPoint: int = 1,subdivMeshUV: int = 1,surfaceEdge: int = 1,surfaceFace: int = 1,surfaceKnot: int = 1,surfaceParameterPoint: int = 1,surfaceRange: int = 1,texture: int = 1,vertex: int = 1) -> None:
    """
    selectPriority コマンドは、選択ツールの使用時に選択できる特定タイプのオブジェクトの選択の優先順位を変更するために使用します。このコマンドは、フラグ以外に引数を受け取りません。これらのフラグは、'selectType' コマンドで使用されるフラグと同じです。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    allComponents (uint): すべてのコンポーネントの選択の優先順位を設定します。

    -----------------------------------------

    allObjects (uint): すべてのオブジェクトの選択の優先順位を設定します。

    -----------------------------------------

    animBreakdown (uint): アニメーションのブレイクダウンの選択の優先順位を設定します。

    -----------------------------------------

    animCurve (uint): アニメーションカーブの選択の優先順位を設定します。

    -----------------------------------------

    animInTangent (uint): アニメーションのイン接線の選択の優先順位を設定します。

    -----------------------------------------

    animKeyframe (uint): アニメーションのキーフレームの選択の優先順位を設定します。

    -----------------------------------------

    animOutTangent (uint): アニメーションのアウト接線の選択の優先順位を設定します。

    -----------------------------------------

    byName ([string, boolean]): 指定のユーザ定義の選択タイプに対する選択項目の優先順位を設定します。

    -----------------------------------------

    camera (uint): カメラの選択の優先順位を設定します。

    -----------------------------------------

    cluster (uint): クラスタの選択の優先順位を設定します。

    -----------------------------------------

    collisionModel (uint): 衝突モデルの選択の優先順位を設定します。

    -----------------------------------------

    controlVertex (uint): コントロール頂点(CV)の選択の優先順位を設定します。

    -----------------------------------------

    curve (uint): カーブの選択の優先順位を設定します。

    -----------------------------------------

    curveKnot (uint): カーブノットの選択の優先順位を設定します。

    -----------------------------------------

    curveOnSurface (uint): カーブオンサーフェスの選択の優先順位を設定します。

    -----------------------------------------

    curveParameterPoint (uint): カーブのパラメータポイントの選択の優先順位を設定します。

    -----------------------------------------

    dimension (uint): ディメンションシェイプの選択の優先順位を設定します。

    -----------------------------------------

    dynamicConstraint (uint): dynamicConstraintの選択の優先順位を設定します。

    -----------------------------------------

    edge (uint): メッシュエッジの選択の優先順位を設定します。

    -----------------------------------------

    editPoint (uint): エディットポイントの選択の優先順位を設定します。

    -----------------------------------------

    emitter (uint): エミッタの選択の優先順位を設定します。

    -----------------------------------------

    facet (uint): メッシュフェースの選択の優先順位を設定します。

    -----------------------------------------

    field (uint): フィールドの選択の優先順位を設定します。

    -----------------------------------------

    fluid (uint): 流体の選択の優先順位を設定します。

    -----------------------------------------

    follicle (uint): 毛根の選択の優先順位を設定します。

    -----------------------------------------

    hairSystem (uint): hairSystemの選択の優先順位を設定します。

    -----------------------------------------

    handle (uint): オブジェクトハンドルの選択の優先順位を設定します。

    -----------------------------------------

    hull (uint): ハルの選択の優先順位を設定します。

    -----------------------------------------

    ikEndEffector (uint): IKエンドエフェクタの選択の優先順位を設定します。

    -----------------------------------------

    ikHandle (uint): IKハンドルの選択の優先順位を設定します。

    -----------------------------------------

    imagePlane (uint): イメージプレーンのセレクションマスクの優先順位を設定します。

    -----------------------------------------

    implicitGeometry (uint): 暗黙のジオメトリの選択の優先順位を設定します。

    -----------------------------------------

    isoparm (uint): サーフェスのアイソパラムの選択の優先順位を設定します。

    -----------------------------------------

    joint (uint): IKハンドルの選択の優先順位を設定します。

    -----------------------------------------

    jointPivot (uint): ジョイントピボットの選択の優先順位を設定します。

    -----------------------------------------

    lattice (uint): ラティスの選択の優先順位を設定します。

    -----------------------------------------

    latticePoint (uint): ラティスポイントの選択の優先順位を設定します。

    -----------------------------------------

    light (uint): ライトの選択の優先順位を設定します。

    -----------------------------------------

    localRotationAxis (uint): ローカル回転軸の選択の優先順位を設定します。

    -----------------------------------------

    locator (uint): ロケータ(すべてのタイプ)の選択の優先順位を設定します。

    -----------------------------------------

    locatorUV (uint): UVロケータの選択の優先順位を設定します。

    -----------------------------------------

    locatorXYZ (uint): XYZロケータの選択の優先順位を設定します。

    -----------------------------------------

    meshUVShell (uint): UVシェルのコンポーネントマスクのオン/オフを設定します。

    -----------------------------------------

    motionTrailPoint (uint): モーションポイントの選択の優先順位を設定します。

    -----------------------------------------

    motionTrailTangent (uint): モーションポイントの接線の優先順位を設定します。

    -----------------------------------------

    nCloth (uint): nClothの選択の優先順位を設定します。

    -----------------------------------------

    nParticle (uint): nParticleポイントの選択の優先順位を設定します。

    -----------------------------------------

    nParticleShape (uint): nParticleシェイプの選択の優先順位を設定します。

    -----------------------------------------

    nRigid (uint): nRigidの選択の優先順位を設定します。

    -----------------------------------------

    nonlinear (uint): ノンリニアの選択の優先順位を設定します。

    -----------------------------------------

    nurbsCurve (uint): NURBSカーブの選択の優先順位を設定します。

    -----------------------------------------

    nurbsSurface (uint): NURBSサーフェスの選択の優先順位を設定します。

    -----------------------------------------

    orientationLocator (uint): 方向ロケータの選択の優先順位を設定します。

    -----------------------------------------

    particle (uint): パーティクルポイントの選択の優先順位を設定します。

    -----------------------------------------

    particleShape (uint): パーティクルシェイプの選択の優先順位を設定します。

    -----------------------------------------

    plane (uint): スケッチプレーンの選択の優先順位を設定します。

    -----------------------------------------

    polymesh (uint): ポリゴンメッシュの選択の優先順位を設定します。

    -----------------------------------------

    polymeshEdge (uint): ポリゴンメッシュのエッジの選択の優先順位を設定します。

    -----------------------------------------

    polymeshFace (uint): ポリゴンメッシュのフェースの選択の優先順位を設定します。

    -----------------------------------------

    polymeshFreeEdge (uint): ポリゴンメッシュのフリーエッジの選択の優先順位を設定します。

    -----------------------------------------

    polymeshUV (uint): ポリゴンメッシュのUVポイントの選択の優先順位を設定します。

    -----------------------------------------

    polymeshVertex (uint): ポリゴンメッシュの頂点の選択の優先順位を設定します。

    -----------------------------------------

    polymeshVtxFace (uint): ポリゴンメッシュのvtxFaceの選択の優先順位を設定します。

    -----------------------------------------

    queryByName (string): 指定のユーザ定義の選択タイプに対する選択項目の優先順位を照会します。照会モードでは、このフラグに値が必要になります。

    -----------------------------------------

    rigidBody (uint): リジッドボディの選択の優先順位を設定します。

    -----------------------------------------

    rigidConstraint (uint): リジッドコンストレイントの選択の優先順位を設定します。

    -----------------------------------------

    rotatePivot (uint): 回転ピボットの選択の優先順位を設定します。

    -----------------------------------------

    scalePivot (uint): スケールピボットの選択の優先順位を設定します。

    -----------------------------------------

    sculpt (uint): スカルプトの選択の優先順位を設定します。

    -----------------------------------------

    selectHandle (uint): 選択ハンドルの選択の優先順位を設定します。

    -----------------------------------------

    spring (uint): スプリングシェイプの選択の優先順位を設定します。

    -----------------------------------------

    springComponent (uint): 個々のスプリングの選択の優先順位を設定します。

    -----------------------------------------

    stroke (uint): ストロークの選択の優先順位を設定します。

    -----------------------------------------

    subdiv (uint): サブディビジョンサーフェスの選択の優先順位を設定します。

    -----------------------------------------

    subdivMeshEdge (uint): サブディビジョンサーフェスのメッシュエッジの選択の優先順位を設定します。

    -----------------------------------------

    subdivMeshFace (uint): サブディビジョンサーフェスのメッシュフェースの選択の優先順位を設定します。

    -----------------------------------------

    subdivMeshPoint (uint): サブディビジョンサーフェスのメッシュ頂点の選択の優先順位を設定します。

    -----------------------------------------

    subdivMeshUV (uint): サブディビジョンサーフェスのメッシュUVマップの選択の優先順位を設定します。

    -----------------------------------------

    surfaceEdge (uint): サーフェスエッジの選択の優先順位を設定します。

    -----------------------------------------

    surfaceFace (uint): サーフェスフェースの選択の優先順位を設定します。

    -----------------------------------------

    surfaceKnot (uint): サーフェスノットの選択の優先順位を設定します。

    -----------------------------------------

    surfaceParameterPoint (uint): サーフェスのパラメータポイントの選択の優先順位を設定します。

    -----------------------------------------

    surfaceRange (uint): サーフェスレンジの選択の優先順位を設定します。

    -----------------------------------------

    texture (uint): テクスチャの選択の優先順位を設定します。

    -----------------------------------------

    vertex (uint): メッシュ頂点の選択の優先順位を設定します。

    -----------------------------------------

    Return Value:
    None: int照会操作の場合照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def selectType(allComponents: bool = False,allObjects: bool = False,animBreakdown: bool = False,animCurve: bool = False,animInTangent: bool = False,animKeyframe: bool = False,animOutTangent: bool = False,byName: Tuple[str, bool] = tuple("", False),camera: bool = False,cluster: bool = False,collisionModel: bool = False,controlVertex: bool = False,curve: bool = False,curveKnot: bool = False,curveOnSurface: bool = False,curveParameterPoint: bool = False,dimension: bool = False,dynamicConstraint: bool = False,edge: bool = False,editPoint: bool = False,emitter: bool = False,facet: bool = False,field: bool = False,fluid: bool = False,follicle: bool = False,hairSystem: bool = False,handle: bool = False,hull: bool = False,ikEndEffector: bool = False,ikHandle: bool = False,imagePlane: bool = False,implicitGeometry: bool = False,isoparm: bool = False,joint: bool = False,jointPivot: bool = False,lattice: bool = False,latticePoint: bool = False,light: bool = False,localRotationAxis: bool = False,locator: bool = False,locatorUV: bool = False,locatorXYZ: bool = False,meshUVShell: bool = False,motionTrailPoint: bool = False,motionTrailTangent: bool = False,nCloth: bool = False,nParticle: bool = False,nParticleShape: bool = False,nRigid: bool = False,nonlinear: bool = False,nurbsCurve: bool = False,nurbsSurface: bool = False,objectComponent: bool = False,orientationLocator: bool = False,particle: bool = False,particleShape: bool = False,plane: bool = False,polymesh: bool = False,polymeshEdge: bool = False,polymeshFace: bool = False,polymeshFreeEdge: bool = False,polymeshUV: bool = False,polymeshVertex: bool = False,polymeshVtxFace: bool = False,queryByName: str = "",rigidBody: bool = False,rigidConstraint: bool = False,rotatePivot: bool = False,scalePivot: bool = False,sculpt: bool = False,selectHandle: bool = False,spring: bool = False,springComponent: bool = False,stroke: bool = False,subdiv: bool = False,subdivMeshEdge: bool = False,subdivMeshFace: bool = False,subdivMeshPoint: bool = False,subdivMeshUV: bool = False,surfaceEdge: bool = False,surfaceFace: bool = False,surfaceKnot: bool = False,surfaceParameterPoint: bool = False,surfaceRange: bool = False,surfaceUV: bool = False,texture: bool = False,vertex: bool = False) -> None:
    """
    selectType コマンドは、選択ツールの使用時に選択できる各タイプのオブジェクトのセットを変更するために使用します。このコマンドは、フラグ以外に引数を受け取りません。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    allComponents (boolean): すべてのコンポーネントのセレクションマスクのオン/オフを設定します。

    -----------------------------------------

    allObjects (boolean): すべてのオブジェクトのセレクションマスクのオン/オフを。

    -----------------------------------------

    animBreakdown (boolean): アニメーションのブレイクダウンのセレクションマスクのオン/オフを設定します。

    -----------------------------------------

    animCurve (boolean): アニメーションカーブのセレクションマスクのオン/オフを設定します。

    -----------------------------------------

    animInTangent (boolean): アニメーションのイン接線のセレクションマスクのオン/オフを設定します。

    -----------------------------------------

    animKeyframe (boolean): アニメーションのキーフレームのセレクションマスクのオン/オフを設定します。

    -----------------------------------------

    animOutTangent (boolean): アニメーションのアウト接線のセレクションマスクのオン/オフを設定します。

    -----------------------------------------

    byName ([string, boolean]): 指定のユーザー定義のセレクションマスクのオンとオフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    camera (boolean): カメラのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    cluster (boolean): クラスタのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    collisionModel (boolean): 衝突モデルのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    controlVertex (boolean): コントロール頂点(CV)のセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    curve (boolean): カーブのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    curveKnot (boolean): カーブノットのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    curveOnSurface (boolean): カーブオンサーフェスのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    curveParameterPoint (boolean): カーブのパラメータポイントのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    dimension (boolean): ディメンションシェイプのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    dynamicConstraint (boolean): dynamicConstraintのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    edge (boolean): メッシュエッジのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    editPoint (boolean): エディットポイントのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    emitter (boolean): エミッタのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    facet (boolean): メッシュフェースのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    field (boolean): フィールドのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    fluid (boolean): 流体のセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    follicle (boolean): 毛根のセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    hairSystem (boolean): hairSystemのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    handle (boolean): オブジェクトハンドルのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    hull (boolean): ハルのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    ikEndEffector (boolean): IKエンドエフェクタのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    ikHandle (boolean): IKハンドルのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    imagePlane (boolean): イメージプレーンのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    implicitGeometry (boolean): 暗黙ジオメトリのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    isoparm (boolean): サーフェスのアイソパラムのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    joint (boolean): IKハンドルのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    jointPivot (boolean): ジョイントピボットのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    lattice (boolean): ラティスのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    latticePoint (boolean): ラティスポイントのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    light (boolean): ライトのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    localRotationAxis (boolean): ローカル回転軸のセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    locator (boolean): ロケータ(すべてのタイプ)のセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    locatorUV (boolean): UVロケータのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    locatorXYZ (boolean): XYZロケータのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    meshUVShell (boolean): UVシェルのコンポーネントマスクのオン/オフを設定します。

    -----------------------------------------

    motionTrailPoint (boolean): モーションポイントのセレクションマスクのオン/オフを設定します。

    -----------------------------------------

    motionTrailTangent (boolean): モーションポイントの接線マスクのオン/オフを設定します。

    -----------------------------------------

    nCloth (boolean): nClothのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    nParticle (boolean): nParticleポイントのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    nParticleShape (boolean): nParticleシェイプのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    nRigid (boolean): nRigidのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    nonlinear (boolean): ノンリニアのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    nurbsCurve (boolean): NURBSカーブのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    nurbsSurface (boolean): NURBSサーフェスのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    objectComponent (boolean): コンポーネントフラグがオブジェクトモードに適用されます。

    -----------------------------------------

    orientationLocator (boolean): 方向ロケータのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    particle (boolean): パーティクルポイントのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    particleShape (boolean): パーティクルシェイプのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    plane (boolean): スケッチプレーンのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    polymesh (boolean): ポリゴンメッシュのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    polymeshEdge (boolean): ポリゴンメッシュのエッジのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    polymeshFace (boolean): ポリゴンメッシュのフェースのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    polymeshFreeEdge (boolean): ポリゴンメッシュのフリーエッジのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    polymeshUV (boolean): ポリゴンメッシュのUVポイントのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    polymeshVertex (boolean): ポリゴンメッシュの頂点のセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    polymeshVtxFace (boolean): ポリゴンメッシュの頂点フェースのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    queryByName (string): 指定のユーザー定義のセレクションマスクを照会します(オブジェクトフラグ)。照会モードでは、このフラグに値が必要になります。

    -----------------------------------------

    rigidBody (boolean): リジッドボディのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    rigidConstraint (boolean): リジッドコンストレイントのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    rotatePivot (boolean): 回転ピボットのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    scalePivot (boolean): スケールピボットのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    sculpt (boolean): スカルプトのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    selectHandle (boolean): セレクションハンドルのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    spring (boolean): スプリングシェイプのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    springComponent (boolean): 個々のスプリングのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    stroke (boolean): ペイントエフェクト(PaintEffects)のストロークのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    subdiv (boolean): サブディビジョンサーフェスのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    subdivMeshEdge (boolean): サブディビジョンサーフェスのメッシュエッジのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    subdivMeshFace (boolean): サブディビジョンサーフェスのメッシュフェースのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    subdivMeshPoint (boolean): サブディビジョンサーフェスのメッシュポイントのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    subdivMeshUV (boolean): サブディビジョンサーフェスのメッシュUVマップのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    surfaceEdge (boolean): サーフェスエッジのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    surfaceFace (boolean): サーフェスフェースのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    surfaceKnot (boolean): サーフェスノットのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    surfaceParameterPoint (boolean): サーフェスのパラメータポイントのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    surfaceRange (boolean): サーフェスレンジのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    surfaceUV (boolean): サーフェスUVのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    texture (boolean): テクスチャのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    vertex (boolean): メッシュ頂点のセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    Return Value:
    None: boolean照会操作の場合照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def softSelect(compressUndo: int = 1,enableFalseColor: int = 1,softSelectColorCurve: str = "",softSelectCurve: str = "",softSelectDistance: float = 1.0,softSelectEnabled: int = 1,softSelectFalloff: int = 1,softSelectReset: bool = False,softSelectUVDistance: float = 1.0) -> None:
    """
    このコマンドを使うと、ソフト モデリング オプションを変更できます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    compressUndo (int): 元に戻したときのソフトセレクション設定の動作を制御します。0はすべての変更をそれぞれ元に戻します1はすべての連続した変更をグループとして元に戻します2はインタラクティブ変更のみをグループとして元に戻します照会すると、現在の元に戻す動作を示す整数を返します。

    -----------------------------------------

    enableFalseColor (int): ソフト選択カラーフィードバックをオンまたはオフに設定します。照会すると、カラーフィードバックが現在有効化されているかどうかを示す整数を返します。

    -----------------------------------------

    softSelectColorCurve (string): ビューポイント内のソフト選択されたコンポーネントに対する擬似カラーフィードバックを表示するために使用されるカラーランプを設定します。カラーカーブは、減衰カーブCVを示す、カンマでくぎられた浮動小数点値の文字列としてエンコードされます。各CVは、3つのRGB値(使用するカラー)、入力値(セレクションウェイト)、カーブの補間タイプという5つの連続する値で示されます。照会すると、現在のカラーフィードバックのエンコードされたCVを含む文字列を返します。

    -----------------------------------------

    softSelectCurve (string): 減衰範囲のコンポーネントに対するセレクションウェイトの計算に使用される減衰カーブを設定します。カーブは、減衰カーブCVを示す、カンマで区切られた浮動小数点値の文字列としてエンコードされます。各CVは、出力値(このポイントのセレクションウェイト)、入力値(正規化された減衰範囲)、カーブの補間タイプという3つの連続する値で示されます。照会すると、現在の減衰カーブのエンコードされたCVを含む文字列を返します。

    -----------------------------------------

    softSelectDistance (float): ワールドとオブジェクト空間ソフトセレクションで使用される減衰範囲(半径)を設定します。照会すると、現在の減衰範囲を示す浮動小数点値を返します。

    -----------------------------------------

    softSelectEnabled (int): ソフトセレクションベースのモデリングをオンまたはオフに設定します。照会すると、オプションの現在の状態を示す整数を返します。

    -----------------------------------------

    softSelectFalloff (int): 減衰モードを設定します。0はボリュームベースの減衰1はサーフェスベースの減衰2はグローバル減衰照会すると、減衰モードを示す整数を返します。

    -----------------------------------------

    softSelectReset (boolean): ソフトセレクションを既定の設定にリセットします。

    -----------------------------------------

    softSelectUVDistance (float): UV空間ソフトセレクションで使用される減衰範囲(半径)を設定します。照会すると、現在の減衰範囲を示す浮動小数点値を返します。

    -----------------------------------------

    Return Value:
    None: なし照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def symmetricModelling(about: str = "",allowPartial: bool = False,axis: str = "",preserveSeam: int = 1,reset: bool = False,seamFalloffCurve: str = "",seamTolerance: float = 1.0,symmetry: int = 1,tolerance: float = 1.0,topoSymmetry: bool = False) -> None:
    """
    このコマンドを使うと、対称モデリング オプションを変更できます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    about (string): 対称を計算する空間(オブジェクトまたはワールドまたはトポロジ)を設定します。照会すると、現在使用しているスペースを表す文字列を返します。

    -----------------------------------------

    allowPartial (boolean): トポロジシンメトリを有効にしたときに、部分的なシンメトリが許可されるかどうかを指定します。

    -----------------------------------------

    axis (string): 対称変換に使用する現在の軸を設定します。照会すると、現在の軸を示す文字列を返します。

    -----------------------------------------

    preserveSeam (int): 選択と対称のどちらが対称プレーンで優先されるかを制御します。照会すると、このオプションに対する整数値を返します。

    -----------------------------------------

    reset (boolean): 開始する前にやり直しの情報をリセットします。

    -----------------------------------------

    seamFalloffCurve (string): 継ぎ目の減衰カーブを設定します。このカーブは継ぎ目の許容値内で継ぎ目の強度をコントロールするために使用されます。この文字列は、各カーブポイントに対応する3つの値セットをカンマで区切って並べたものです。照会すると、現在使用しているスペースを表す文字列を返します。

    -----------------------------------------

    seamTolerance (float): 対称で使用される継ぎ目の許容値を設定します。preserveSeamが有効の場合、この許容値は強制的な継ぎ目の幅をコントロールします。照会すると、seamToleranceをfloatで返します。

    -----------------------------------------

    symmetry (int): 対称オプションをオンまたはオフに設定します。照会すると、このオプションに対する整数値を返します。

    -----------------------------------------

    tolerance (float): 対称変換の許容値を設定します。照会すると、許容値をfloatで返します。

    -----------------------------------------

    topoSymmetry (boolean): トポロジシンメトリの有効と無効を切り替えます。有効な場合、指定されたコンポーネントとアクティブなリストを使用して、トポロジの対称継ぎ目を定義します。照会するときに、アクティブなトポロジシンメトリのオブジェクトの名前を返します。

    -----------------------------------------

    Return Value:
    None: なし照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def alignCtx(align: bool = False,anchorFirstObject: bool = False,distribute: bool = False,exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",name: str = "",showAlignTouch: bool = False) -> None:
    """
    alignCtx コマンドでは、オブジェクトの位置合わせと配分を行うツールが作成されます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    align (boolean): オブジェクトを位置合わせます。

    -----------------------------------------

    anchorFirstObject (boolean): 選択した先頭オブジェクトか最終オブジェクトをアンカーします。既定はfalseです。オブジェクトを位置合わせる場合にのみ適用されます。

    -----------------------------------------

    distribute (boolean): オブジェクトを配分します。

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    showAlignTouch (boolean): 位置合わせハンドルの表示と非表示を切り替えます。既定はtrueです。オブジェクトを位置合わせる場合にのみ適用されます。

    -----------------------------------------

    Return Value:
    None: string(新しいコンテキストの名前)照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def arcLenDimContext(exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",name: str = "") -> None:
    """
    arcLenDimCtx ツールを登録するために使うコマンド。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    Return Value:
    None: string: 作成されたコンテキストの名前照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def art3dPaintCtx(accopacity: bool = False,afterStrokeCmd: str = "",alphablendmode: str = "",assigntxt: bool = False,attrnames: str = "",beforeStrokeCmd: str = "",brushalignment: bool = False,brushdepth: float = 1.0,brushfeedback: bool = False,brushtype: str = "",clear: bool = False,commonattr: str = "",dragSlider: str = "",dynclonemode: bool = False,exists: bool = False,expandfilename: bool = False,exportaspectratio: float = 1.0,exportfilemode: str = "",exportfilesave: str = "",exportfilesizex: int = 1,exportfilesizey: int = 1,exportfiletype: str = "",extendFillColor: bool = False,fileformat: str = "",filetxtaspectratio: float = 1.0,filetxtsizex: int = 1,filetxtsizey: int = 1,floodOpacity: float = 1.0,floodall: bool = False,floodselect: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",importfileload: str = "",importfilemode: str = "",importreassign: bool = False,keepaspectratio: bool = False,lastRecorderCmd: str = "",lastStampName: str = "",lowerradius: float = 1.0,makeStroke: int = 1,mappressure: str = "",name: str = "",opacity: float = 1.0,outline: bool = False,outwhilepaint: bool = False,paintmode: str = "",paintoperationtype: str = "",painttxtattr: str = "",painttxtattrname: str = "",pfxScale: float = 1.0,pfxWidth: float = 1.0,pickColor: bool = False,pickValue: bool = False,playbackCursor: Tuple[float, float] = tuple(1.0, 1.0),playbackPressure: float = 1.0,preserveclonesource: bool = False,pressureMapping1: int = 1,pressureMapping2: int = 1,pressureMapping3: int = 1,pressureMax1: float = 1.0,pressureMax2: float = 1.0,pressureMax3: float = 1.0,pressureMin1: float = 1.0,pressureMin2: float = 1.0,pressureMin3: float = 1.0,profileShapeFile: str = "",projective: bool = False,radius: float = 1.0,record: bool = False,reflection: bool = False,reflectionaboutorigin: bool = False,reflectionaxis: str = "",reloadtexfile: bool = False,resizeratio: float = 1.0,resizetxt: bool = False,rgbcolor: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),rgbflood: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),saveTextureOnStroke: bool = False,saveonstroke: bool = False,savetexture: bool = False,screenRadius: float = 1.0,selectclonesource: bool = False,shadernames: str = "",shapeattr: bool = False,shapenames: str = "",showactive: bool = False,soloAsDiffuse: bool = False,stampDepth: float = 1.0,stampProfile: str = "",stampSpacing: float = 1.0,strokesmooth: str = "",surfaceConformedBrushVertices: bool = False,tablet: bool = False,tangentOutline: bool = False,textureFilenames: bool = False,updateEraseTex: bool = False,usepressure: bool = False,worldRadius: float = 1.0) -> None:
    """
    3D Paint Tool 用のツール コンテキスト コマンドです。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    accopacity (boolean): 不透明度の塗り重ねをオンまたはオフに設定します。C:既定はfalseです(既定がtrueのスカルプトツールを除く)。Q:照会するとbooleanを返します。

    -----------------------------------------

    afterStrokeCmd (string): 渡された文字列はストロークの終了直前にMELコマンドとして実行されます。C:既定は、コマンドなしです。Q:照会すると現在のコマンドを返します。

    -----------------------------------------

    alphablendmode (string): RGBチャネルのペイント時に使用するブレンドモードを指定します。現在、次のブレンドモードをサポートしています:「Default」、「Lighten」、「Darken」、「Difference」、「Exclusion」、「HardLight」、「SoftLight」、「Multiply」、「Screen」、「Overlay」、「Constant」。既定は「Default」です。

    -----------------------------------------

    assigntxt (boolean): 選択したシェーダの指定したアトリビュートに、ファイルテクスチャを割り当て、配置する要求をツールに送ります。

    -----------------------------------------

    attrnames (string): アトリビュートの名前です。

    -----------------------------------------

    beforeStrokeCmd (string): 渡された文字列はストロークの開始直前にMELコマンドとして実行されます。C:既定は、コマンドなしです。Q:照会すると現在のコマンドを返します。

    -----------------------------------------

    brushalignment (boolean): パスブラシの位置合わせを指定します。trueの場合はストロークパスに位置合わせ、falseの場合はアップベクトルに位置合わせます。C:既定はtrueです。Q:照会するとbooleanを返します。

    -----------------------------------------

    brushdepth (float): ブラシの深さです。

    -----------------------------------------

    brushfeedback (boolean): ブラシの追加のフィードバックを描画するかどうかを指定します。C:既定はtrueです。Q:照会するとbooleanを返します。

    -----------------------------------------

    brushtype (string): ブラシタイプの名前です。

    -----------------------------------------

    clear (boolean): CV/頂点のすべてを現在値に塗り潰します。

    -----------------------------------------

    commonattr (string): ペイントテクスチャツール(PaintTextureTool)でサポートされていて、すべてのシェーダのペイント可能なアトリビュートに共通な名前を持つ文字列を返します。

    -----------------------------------------

    dragSlider (string): (既定のホットキーの'b'と'm'のように)ブラシをサイズ変更したりオフセットしたりするため、現在のブラシのドラッグ状態を設定します。文字列引数は次のいずれかです。「radius」、「lowradius」、「opacity」、「value」、「depth」、「displacement」、「uvvector」、または「none」。C:既定は「none」です。

    -----------------------------------------

    dynclonemode (boolean): ダイナミッククローンモードを有効または無効にします。

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    expandfilename (boolean): trueの場合、書き出しファイルの名前を拡張し、サーフェス名と連結します。falseの場合、名前をそのまま受け取ります。C:既定はtrueです。

    -----------------------------------------

    exportaspectratio (float): 書き出し用のアスペクト比の値です。

    -----------------------------------------

    exportfilemode (string): 書き出しチャネルを指定します。有効なエントリは以下のとおりです:「alpha」、「luminance」、「rgb」、「rgba」。C:既定は「luminance/rgb」です。Q:照会するとstringを返します。

    -----------------------------------------

    exportfilesave (string): アトリビュートマップを書き出し、指定したファイルに保存します。

    -----------------------------------------

    exportfilesizex (int): 書き出すアトリビュートマップの幅を指定します。C:既定幅は256です。Q:照会するとintegerを返します。

    -----------------------------------------

    exportfilesizey (int): 書き出すアトリビュートマップの幅を指定します。C:既定幅は256です。Q:照会するとintegerを返します。

    -----------------------------------------

    exportfiletype (string): イメージファイルフォーマットを指定します。次のいずれかを指定できます:「iff」、「tiff」、「jpeg」、「alias」、「rgb」、「fit」、「postScriptEPS」、「softimage」、「wavefrontRLA」、「wavefrontEXP」。C:既定は「tiff」です。Q:照会するとstringを返します。

    -----------------------------------------

    extendFillColor (boolean): 各ストロークでペイントされたテクスチャを自動的に後処理し、バックグラウンドカラーで塗りつぶすかどうかを指定します。既定はtrueです。

    -----------------------------------------

    fileformat (string): ファイル形式の名前です。

    -----------------------------------------

    filetxtaspectratio (float): テクスチャ幅と高さのアスペクト比を指定します。既定は1です。

    -----------------------------------------

    filetxtsizex (int): テクスチャの幅を指定します。既定は256を返します。

    -----------------------------------------

    filetxtsizey (int): テクスチャの高さを指定します。既定は256を返します。

    -----------------------------------------

    floodOpacity (float): 塗り潰しの不透明度値です。

    -----------------------------------------

    floodall (boolean): すべての塗り潰しをオンにします。

    -----------------------------------------

    floodselect (boolean): 選択された領域を塗り潰しますか?

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    importfileload (string): 指定したファイルのアトリビュートマップをロードします。

    -----------------------------------------

    importfilemode (string): 読み込むチャネルを指定します。有効なエントリは以下のとおりです:「alpha」、「luminance」、「red」、「green」、「blue」、「rgb」C:既定は「alpha」です。Q:照会するとstringを返します。

    -----------------------------------------

    importreassign (boolean): 読み込む時に複数のアトリビュートマップを再割り当てするかどうかを指定します。再割り当てできるマップは、以前にアーティザン(Artisan)から書き出されたマップだけです。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    keepaspectratio (boolean): ファイルテクスチャサイズのアスペクト比を一定にするかどうかを指定します。既定はtrueです。ブーリアン。

    -----------------------------------------

    lastRecorderCmd (string): 最後に記録されたコマンドの値です。

    -----------------------------------------

    lastStampName (string): 最後のスタンプ名の値です。

    -----------------------------------------

    lowerradius (float): ブラシの下限サイズを設定します(タブレットにのみ適用されます)。

    -----------------------------------------

    makeStroke (uint): ストロークポイントの値です。

    -----------------------------------------

    mappressure (string): タブレットを使用するときのタブレット圧力のマッピングを設定します。次の4つの選択肢があります:「none」-圧力に影響がない、「opacity」-圧力が不透明度にマップされる、「radius」-圧力がブラシ半径を修正するようマップされる、「both」-圧力が不透明度と半径の両方を修正する。C:既定は「none」です。Q:照会するとstringを返します。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    opacity (float): ブラシの不透明度を設定します。C:既定は1.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    outline (boolean): ブラシを描画するかどうかを指定します。C:既定はtrueです。Q:照会するとbooleanを返します。

    -----------------------------------------

    outwhilepaint (boolean): ペイント時にブラシの輪郭を描画するかどうかを指定します。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    paintmode (string): ペイントモードを指定します。次の2つの選択肢があります:「screen」または「tangent」。C:既定は「screen」です。Q:照会するとstringを返します。

    -----------------------------------------

    paintoperationtype (string): ペイントツールの操作タイプを指定します。現在、次のペイントモードをサポートしています:「Paint」、「Smear」、「Blur」、「Erase」、「Clone」。既定は「Paint」です。

    -----------------------------------------

    painttxtattr (string): ユーザがペイントするシェーダのアトリビュートを指定します。現在は、「Color」、「Transparency」、「Ambient」、「Incandescence」、「BumpMap」、「Diffuse」、「Translucence」、「Eccentricity」、「SpecularColor」、「Reflectivity」、「ReflectedColor」、およびユーザ定義のfloat、float3、double、double3アトリビュートをサポートします。既定は「Color」です。

    -----------------------------------------

    painttxtattrname (string): ペイントテクスチャツール(PaintTextureTool)でサポートされているすべてのペイント可能なアトリビュートの名前を持つ文字列を返します。

    -----------------------------------------

    pfxScale (float): ペイントエフェクト(PaintEffect)ブラシのスケールを指定します。

    -----------------------------------------

    pfxWidth (float): ペイントエフェクト(PaintEffect)ブラシの幅を指定します。

    -----------------------------------------

    pickColor (boolean): カラーの選択モードのオン/オフを切り替えます。

    -----------------------------------------

    pickValue (boolean): 選択の切り替え

    -----------------------------------------

    playbackCursor ([float, float]): 再生カーソルの値です。

    -----------------------------------------

    playbackPressure (float): 再生圧力の値です。

    -----------------------------------------

    preserveclonesource (boolean): クローンソースを保持するかどうかを指定します。

    -----------------------------------------

    pressureMapping1 (int): 1番目の圧力マッピング値

    -----------------------------------------

    pressureMapping2 (int): 2番目の圧力マッピング値

    -----------------------------------------

    pressureMapping3 (int): 3番目の圧力マッピング値

    -----------------------------------------

    pressureMax1 (float): 1番目の圧力最大値

    -----------------------------------------

    pressureMax2 (float): 2番目の圧力最大値

    -----------------------------------------

    pressureMax3 (float): 3番目の圧力最大値

    -----------------------------------------

    pressureMin1 (float): 1番目の圧力最小値

    -----------------------------------------

    pressureMin2 (float): 2番目の圧力最小値

    -----------------------------------------

    pressureMin3 (float): 3番目の圧力最小値

    -----------------------------------------

    profileShapeFile (string): スタンプシェイプのプロファイルにイメージファイルの名前を渡します。

    -----------------------------------------

    projective (boolean): 投影ペイントモードを指定します。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    radius (float): ブラシのサイズを設定します。C:既定は1.0cmです。Q:照会するとfloatを返します。

    -----------------------------------------

    record (boolean): 記録をオンに切り替えます。

    -----------------------------------------

    reflection (boolean): 反射モードを指定します。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    reflectionaboutorigin (boolean): 原点を中心として反射されるようにオンに切り替えます。

    -----------------------------------------

    reflectionaxis (string): 反射軸を指定します。次の3つの選択肢があります:「x」、「y」、「z」。C:既定は「x」です。Q:照会するとstringを返します。

    -----------------------------------------

    reloadtexfile (boolean): ディスクからテクスチャをリロードする要求をツールに送ります。

    -----------------------------------------

    resizeratio (float): 現在のテクスチャのサイズを変更するスケールを指定します。

    -----------------------------------------

    resizetxt (boolean): 現在使用中のすべてのテクスチャのサイズ変更要求をツールに送ります。

    -----------------------------------------

    rgbcolor ([float, float, float]): カラー値です。

    -----------------------------------------

    rgbflood ([float, float, float]): 塗り潰しのカラーです。

    -----------------------------------------

    saveTextureOnStroke (boolean): 各ストロークでオリジナルのテクスチャを自動的に保存するかどうかを指定します。既定はfalseです。

    -----------------------------------------

    saveonstroke (boolean): 各ストロークで一時的なテクスチャを自動的に保存するかどうかを指定します。既定はfalseです。

    -----------------------------------------

    savetexture (boolean): ディスクにテクスチャを保存する要求をツールに送ります。

    -----------------------------------------

    screenRadius (float): スクリーン上のブラシ半径です。

    -----------------------------------------

    selectclonesource (boolean): クローンソースの選択の切り替えをオンにします。

    -----------------------------------------

    shadernames (string): 選択したサーフェスに割り当てられているすべてのシェーダの名前を持つ文字列を返します。

    -----------------------------------------

    shapeattr (boolean): ペイントするアトリビュートがシェーダではなくシェイプのアトリビュートであるかどうかを指定します。既定はfalseです。

    -----------------------------------------

    shapenames (string): 現在ペイント中のすべてのサーフェスの名前を持つ文字列を返します。

    -----------------------------------------

    showactive (boolean): サーフェスアイソパラムの表示をオンまたはオフに設定します。C:既定はtrueです。Q:照会するとbooleanを返します。

    -----------------------------------------

    soloAsDiffuse (boolean): 現在ペイント可能なテクスチャをビューポートで拡散テクスチャとしてレンダーするかどうかを指定します。既定はfalseです。

    -----------------------------------------

    stampDepth (float): スタンプの深さです。

    -----------------------------------------

    stampProfile (string): 現在のスタンプのブラシプロファイルを設定します。現在、次のプロファイルがサポートされています。「gaussian」、「soft」、「solid」または「square」。C:既定は「gaussian」です。Q:照会するとstringを返します。

    -----------------------------------------

    stampSpacing (float): スタンプ間隔を指定します。既定は1.0です。

    -----------------------------------------

    strokesmooth (string): ストロークのスムージングタイプ名です。

    -----------------------------------------

    surfaceConformedBrushVertices (boolean): 影響を受ける頂点として、有効なブラシ領域の表示を有効化/無効化します。

    -----------------------------------------

    tablet (boolean): タブレットデバイスが存在する場合はtrueを、存在しない場合はfalseを返します。

    -----------------------------------------

    tangentOutline (boolean): サーフェスへのブラシ円接線の表示を有効化/無効化します。

    -----------------------------------------

    textureFilenames (boolean): ペイントされたすべてのファイルテクスチャの名前を含む文字列配列を返します。

    -----------------------------------------

    updateEraseTex (boolean): 消去テクスチャを更新する必要がありますか?

    -----------------------------------------

    usepressure (boolean): タブレット圧力をオンまたはオフに設定します。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    worldRadius (float): ワールド空間内の半径です。

    -----------------------------------------

    Return Value:
    None: なし照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def artAttrCtx(accopacity: bool = False,activeListChangedProc: str = "",afterStrokeCmd: str = "",alphaclamp: str = "",alphaclamplower: float = 1.0,alphaclampupper: float = 1.0,attrSelected: str = "",beforeStrokeCmd: str = "",brushalignment: bool = False,brushfeedback: bool = False,clamp: str = "",clamplower: float = 1.0,clampupper: float = 1.0,clear: bool = False,colorAlphaValue: float = 1.0,colorRGBAValue: Tuple[float, float, float, float] = tuple(1.0, 1.0, 1.0, 1.0),colorRGBValue: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),colorRamp: str = "",colorfeedback: bool = False,colorfeedbackOverride: bool = False,colorrangelower: float = 1.0,colorrangeupper: float = 1.0,dataTypeIndex: int = 1,disablelighting: bool = False,dragSlider: str = "",duringStrokeCmd: str = "",dynclonemode: bool = False,exists: bool = False,expandfilename: bool = False,exportaspectratio: float = 1.0,exportfilemode: str = "",exportfilesave: str = "",exportfilesizex: int = 1,exportfilesizey: int = 1,exportfiletype: str = "",filterNodes: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",importfileload: str = "",importfilemode: str = "",importreassign: bool = False,interactiveUpdate: bool = False,lastRecorderCmd: str = "",lastStampName: str = "",lowerradius: float = 1.0,makeStroke: int = 1,mappressure: str = "",maxvalue: float = 1.0,minvalue: float = 1.0,name: str = "",objattrArray: str = "",opacity: float = 1.0,outline: bool = False,outwhilepaint: bool = False,paintNodeArray: str = "",paintattrselected: str = "",paintmode: str = "",paintoperationtype: str = "",pickColor: bool = False,pickValue: bool = False,playbackCursor: Tuple[float, float] = tuple(1.0, 1.0),playbackPressure: float = 1.0,preserveclonesource: bool = False,profileShapeFile: str = "",projective: bool = False,radius: float = 1.0,rampMaxColor: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),rampMinColor: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),record: bool = False,reflection: bool = False,reflectionaboutorigin: bool = False,reflectionaxis: str = "",screenRadius: float = 1.0,selectclonesource: bool = False,selectedattroper: str = "",showactive: bool = False,stampDepth: float = 1.0,stampProfile: str = "",stampSpacing: float = 1.0,strokesmooth: str = "",surfaceConformedBrushVertices: bool = False,tablet: bool = False,tangentOutline: bool = False,toolOffProc: str = "",toolOnProc: str = "",useColorRamp: bool = False,useMaxMinColor: bool = False,usepressure: bool = False,value: float = 1.0,whichTool: str = "",worldRadius: float = 1.0) -> None:
    """
    これは、アトリビュート ペイント操作のベース コンテキストである artAttrContext にフラグを設定するためのコンテキスト コマンドです。すべてのコマンドは、最後の引数としてコンテキスト名を必要とします。これは作成、編集、または照会されるコンテキストの名前を表します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    accopacity (boolean): 不透明度の塗り重ねをオンまたはオフに設定します。C:既定はfalseです(既定がtrueのスカルプトツールを除く)。Q:照会するとbooleanを返します。

    -----------------------------------------

    activeListChangedProc (string): アクティブリストが変更されたときに必ず起動されるMELコマンドを含む文字列を取ります。シーンでオブジェクトを選択または選択解除したときに、たとえば、UIを更新する必要があるなど、いくつかの状況が考えられます。照会モードでは、現在登録されているMELコマンドの名前が返されます。何も定義されていない場合は空の文字列になります。

    -----------------------------------------

    afterStrokeCmd (string): 渡された文字列はストロークの終了直前にMELコマンドとして実行されます。C:既定は、コマンドなしです。Q:照会すると現在のコマンドを返します。

    -----------------------------------------

    alphaclamp (string): ウェイト値を上限、下限にアルファクランプするかどうかを指定します。次の4つの選択肢があります。「none」-クランプをまったく実行しません。「lower」-下限にのみ合わせてクランプします。「upper」-上限にのみ合わせてクランプします。「both」-上限、下限両方に合わせてクランプします。C:既定は「none」です。Q:照会するとstringを返します。

    -----------------------------------------

    alphaclamplower (float): アルファ値の下限を指定します。C:既定は0.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    alphaclampupper (float): アルファ値の上限を指定します。C:既定は1.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    attrSelected (string): 現在選択されているアトリビュートの名前を返します。Q:照会するとstringを返します。

    -----------------------------------------

    beforeStrokeCmd (string): 渡された文字列はストロークの開始直前にMELコマンドとして実行されます。C:既定は、コマンドなしです。Q:照会すると現在のコマンドを返します。

    -----------------------------------------

    brushalignment (boolean): パスブラシの位置合わせを指定します。trueの場合はストロークパスに位置合わせ、falseの場合はアップベクトルに位置合わせます。C:既定はtrueです。Q:照会するとbooleanを返します。

    -----------------------------------------

    brushfeedback (boolean): ブラシの追加のフィードバックを描画するかどうかを指定します。C:既定はtrueです。Q:照会するとbooleanを返します。

    -----------------------------------------

    clamp (string): ウェイト値に上限、下限を設定するかどうかを指定します。次の4つの選択肢があります。「none」-クランプをまったく実行しません。「lower」-下限にのみ合わせてクランプします。「upper」-上限にのみ合わせてクランプします。「both」-上限、下限両方に合わせてクランプします。C:既定は「none」です。Q:照会するとstringを返します。

    -----------------------------------------

    clamplower (float): 値の下限を指定します。C:既定は0.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    clampupper (float): 値の上限を指定します。C:既定は1.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    clear (boolean): CV/頂点のすべてを現在値に塗り潰します。

    -----------------------------------------

    colorAlphaValue (float): カラーのアルファ値。

    -----------------------------------------

    colorRGBAValue ([float, float, float, float]): カラーのRGBA値。

    -----------------------------------------

    colorRGBValue ([float, float, float]): カラーのRGB値。

    -----------------------------------------

    colorRamp (string): ユーザ定義のカラーランプを使用した、値のカラーへのマッピングを許可します。

    -----------------------------------------

    colorfeedback (boolean): カラーフィードバックの表示をオンまたはオフに設定します。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    colorfeedbackOverride (boolean): カラーフィードバックのオーバーライドをオンまたはオフに設定します。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    colorrangelower (float): カラーフィードバックモードがオンのときに黒にマップする値を指定します。C:既定は0.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    colorrangeupper (float): カラーフィードバックモードがオンのときに最大カラーにマップする値を指定します。C:既定は1.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    dataTypeIndex (int): 選択したペイント可能なアトリビュートがvectorArrayのときに、ペイントするフィールドを指定します。

    -----------------------------------------

    disablelighting (boolean): カラーフィードバックがオンの場合、このフラグによって、影響を受けるサーフェスのライティングを無効にするかどうかが決まります。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    dragSlider (string): (既定のホットキーの'b'と'm'のように)ブラシをサイズ変更したりオフセットしたりするため、現在のブラシのドラッグ状態を設定します。文字列引数は次のいずれかです。「radius」、「lowradius」、「opacity」、「value」、「depth」、「displacement」、「uvvector」、または「none」。C:既定は「none」です。

    -----------------------------------------

    duringStrokeCmd (string): マウスでドラッグする度に、渡された文字列はストローク時にMELコマンドとして実行されます。C:既定は、コマンドなしです。Q:照会すると現在のコマンドを返します。

    -----------------------------------------

    dynclonemode (boolean): ダイナミッククローンモードを有効または無効にします。

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    expandfilename (boolean): trueの場合、書き出しファイルの名前を拡張し、サーフェス名と連結します。falseの場合、名前をそのまま受け取ります。C:既定はtrueです。

    -----------------------------------------

    exportaspectratio (float): 書き出し用のアスペクト比の値です。

    -----------------------------------------

    exportfilemode (string): 書き出しチャネルを指定します。有効なエントリは以下のとおりです:「alpha」、「luminance」、「rgb」、「rgba」。C:既定は「luminance/rgb」です。Q:照会するとstringを返します。

    -----------------------------------------

    exportfilesave (string): アトリビュートマップを書き出し、指定したファイルに保存します。

    -----------------------------------------

    exportfilesizex (int): 書き出すアトリビュートマップの幅を指定します。C:既定幅は256です。Q:照会するとintegerを返します。

    -----------------------------------------

    exportfilesizey (int): 書き出すアトリビュートマップの幅を指定します。C:既定幅は256です。Q:照会するとintegerを返します。

    -----------------------------------------

    exportfiletype (string): イメージファイルフォーマットを指定します。次のいずれかを指定できます:「iff」、「tiff」、「jpeg」、「alias」、「rgb」、「fit」、「postScriptEPS」、「softimage」、「wavefrontRLA」、「wavefrontEXP」。C:既定は「tiff」です。Q:照会するとstringを返します。

    -----------------------------------------

    filterNodes (boolean): ノードフィルタを設定します。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    importfileload (string): 指定したファイルのアトリビュートマップをロードします。

    -----------------------------------------

    importfilemode (string): 読み込むチャネルを指定します。有効なエントリは以下のとおりです:「alpha」、「luminance」、「red」、「green」、「blue」、「rgb」C:既定は「alpha」です。Q:照会するとstringを返します。

    -----------------------------------------

    importreassign (boolean): 読み込む時に複数のアトリビュートマップを再割り当てするかどうかを指定します。再割り当てできるマップは、以前にアーティザン(Artisan)から書き出されたマップだけです。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    interactiveUpdate (boolean): ペイントされた値をアトリビュートに転送する頻度を指定します。TRUE:「継続的」に(1つのストロークにつき何度も)転送します。FALSE:ストロークの最後(マウスボタンが放されたとき)にのみ転送します。C:既定はtrueです。Q:照会するとbooleanを返します。

    -----------------------------------------

    lastRecorderCmd (string): 最後に記録されたコマンドの値です。

    -----------------------------------------

    lastStampName (string): 最後のスタンプ名の値です。

    -----------------------------------------

    lowerradius (float): ブラシの下限サイズを設定します(タブレットにのみ適用されます)。

    -----------------------------------------

    makeStroke (uint): ストロークポイントの値です。

    -----------------------------------------

    mappressure (string): タブレットを使用するときのタブレット圧力のマッピングを設定します。次の4つの選択肢があります:「none」-圧力に影響がない、「opacity」-圧力が不透明度にマップされる、「radius」-圧力がブラシ半径を修正するようマップされる、「both」-圧力が不透明度と半径の両方を修正する。C:既定は「none」です。Q:照会するとstringを返します。

    -----------------------------------------

    maxvalue (float): 各アトリビュートの最大値を指定します。C:既定は1.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    minvalue (float): 各アトリビュートの最小値を指定します。C:既定は0.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    objattrArray (string): ペイント可能なすべてのアトリビュートの配列です。配列の各要素は、次の情報を含む文字列です:NodeType.NodeName.AttributeName.MenuType。*MenuType:メニュー項目（UI）のタイプ（レベル）です。Q:照会するとstringを返します。

    -----------------------------------------

    opacity (float): ブラシの不透明度を設定します。C:既定は1.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    outline (boolean): ブラシを描画するかどうかを指定します。C:既定はtrueです。Q:照会するとbooleanを返します。

    -----------------------------------------

    outwhilepaint (boolean): ペイント時にブラシの輪郭を描画するかどうかを指定します。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    paintNodeArray (string): ペイント可能なノードの配列です。Q:照会するとstringを返します。

    -----------------------------------------

    paintattrselected (string): 選択したペイント可能なアトリビュートの配列です。配列の各要素は、次の情報を含む文字列です。NodeType.NodeName.AttributeName。

    -----------------------------------------

    paintmode (string): ペイントモードを指定します。次の2つの選択肢があります:「screen」または「tangent」。C:既定は「screen」です。Q:照会するとstringを返します。

    -----------------------------------------

    paintoperationtype (string): ペイントツールの操作タイプを指定します。現在、次のペイントモードをサポートしています:「Paint」、「Smear」、「Blur」、「Erase」、「Clone」。既定は「Paint」です。

    -----------------------------------------

    pickColor (boolean): カラーの選択モードのオン/オフを切り替えます。

    -----------------------------------------

    pickValue (boolean): 選択の切り替え

    -----------------------------------------

    playbackCursor ([float, float]): 再生カーソルの値です。

    -----------------------------------------

    playbackPressure (float): 再生圧力の値です。

    -----------------------------------------

    preserveclonesource (boolean): クローンソースを保持するかどうかを指定します。

    -----------------------------------------

    profileShapeFile (string): スタンプシェイプのプロファイルにイメージファイルの名前を渡します。

    -----------------------------------------

    projective (boolean): 投影ペイントモードを指定します。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    radius (float): ブラシのサイズを設定します。C:既定は1.0cmです。Q:照会するとfloatを返します。

    -----------------------------------------

    rampMaxColor ([float, float, float]): 値が最大値以上の場合に、特別のカラーを使用するように定義します。

    -----------------------------------------

    rampMinColor ([float, float, float]): 値が最小値以下の場合に、特別のカラーを使用するように定義します。

    -----------------------------------------

    record (boolean): 記録をオンに切り替えます。

    -----------------------------------------

    reflection (boolean): 反射モードを指定します。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    reflectionaboutorigin (boolean): 原点を中心として反射されるようにオンに切り替えます。

    -----------------------------------------

    reflectionaxis (string): 反射軸を指定します。次の3つの選択肢があります:「x」、「y」、「z」。C:既定は「x」です。Q:照会するとstringを返します。

    -----------------------------------------

    screenRadius (float): スクリーン上のブラシ半径です。

    -----------------------------------------

    selectclonesource (boolean): クローンソースの選択の切り替えをオンにします。

    -----------------------------------------

    selectedattroper (string): ウェイト編集操作を設定します。次の4つのウェイト編集操作があります:「absolute」の場合、ウェイト値は現在のウェイトで置き換えられます。「additive」の場合、現在のウェイトにウェイト値が足されます。「scale」の場合、ウェイト値に現在のウェイトが掛けられます。「smooth」の場合、ウェイト値は現在のウェイトで割られます。C:既定は「absolute」です。Q:照会するとstringを返します。

    -----------------------------------------

    showactive (boolean): サーフェスアイソパラムの表示をオンまたはオフに設定します。C:既定はtrueです。Q:照会するとbooleanを返します。

    -----------------------------------------

    stampDepth (float): スタンプの深さです。

    -----------------------------------------

    stampProfile (string): 現在のスタンプのブラシプロファイルを設定します。現在、次のプロファイルがサポートされています。「gaussian」、「soft」、「solid」または「square」。C:既定は「gaussian」です。Q:照会するとstringを返します。

    -----------------------------------------

    stampSpacing (float): スタンプ間隔を指定します。既定は1.0です。

    -----------------------------------------

    strokesmooth (string): ストロークのスムージングタイプ名です。

    -----------------------------------------

    surfaceConformedBrushVertices (boolean): 影響を受ける頂点として、有効なブラシ領域の表示を有効化/無効化します。

    -----------------------------------------

    tablet (boolean): タブレットデバイスが存在する場合はtrueを、存在しない場合はfalseを返します。

    -----------------------------------------

    tangentOutline (boolean): サーフェスへのブラシ円接線の表示を有効化/無効化します。

    -----------------------------------------

    toolOffProc (string): このツールがオフになったときに必ず起動されるMELプロシージャの名前を表す文字列を取ります。たとえば、クロスペイントツールがオンになったとき、クロスは「clothPaintToolOff」を起動します。ツールが非アクティブになったときに特別な機能が必要となる場合はこのコールバックを定義します。toolOffProcを実装した場合はtoolOnProcも実装したくなるでしょう(-toolOnProcフラグを参照)。照会モードでは、現在登録されているMELコマンドの名前が返されます。何も定義されていない場合は空の文字列になります。

    -----------------------------------------

    toolOnProc (string): このツールがオンになったときに必ず起動されるMELプロシージャの名前を表す文字列を取ります。たとえば、クロスペイントツールがオンになったとき、クロスは「clothPaintToolOn」を起動します。ツールがアクティブになったときに特別な機能が必要となる場合はこのコールバックを定義します。toolOnProcを実装した場合はtoolOffProcも実装したくなるでしょう(-toolOffProcフラグを参照)。照会モードでは、現在登録されているMELコマンドの名前が返されます。何も定義されていない場合は空の文字列になります。

    -----------------------------------------

    useColorRamp (boolean): ユーザ定義のカラーランプを使用して値をカラーにマッピングするかどうかを指定します。これがオフの場合、既定のグレースケールフィードバックを使用します。

    -----------------------------------------

    useMaxMinColor (boolean): 範囲外のカラーを使用するべきかどうかを指定します。詳細については、rampMinColor、rampMaxColorフラグを参照してください。

    -----------------------------------------

    usepressure (boolean): タブレット圧力をオンまたはオフに設定します。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    value (float): 各アトリビュートの値を指定します。C:既定は0.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    whichTool (string): この文字列は、アーティザンコンテキストで使用されるツールの名前を定義します。たとえば、「artClothPaint」のように指定します。照会モードでは、指定したコンテキストのツール名が返されます。注:MELの動作方法の理由から、引数を取るフラグを指定するときには、必ず、-queryフラグを最後に指定してください。

    -----------------------------------------

    worldRadius (float): ワールド空間内の半径です。

    -----------------------------------------

    Return Value:
    None: string作成されたコンテキストの名前照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def artAttrPaintVertexCtx(accopacity: bool = False,activeListChangedProc: str = "",afterStrokeCmd: str = "",alphaclamp: str = "",alphaclamplower: float = 1.0,alphaclampupper: float = 1.0,attrSelected: str = "",beforeStrokeCmd: str = "",brushalignment: bool = False,brushfeedback: bool = False,clamp: str = "",clamplower: float = 1.0,clampupper: float = 1.0,clear: bool = False,colorAlphaValue: float = 1.0,colorRGBAValue: Tuple[float, float, float, float] = tuple(1.0, 1.0, 1.0, 1.0),colorRGBValue: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),colorRamp: str = "",colorfeedback: bool = False,colorfeedbackOverride: bool = False,colorrangelower: float = 1.0,colorrangeupper: float = 1.0,dataTypeIndex: int = 1,disablelighting: bool = False,dragSlider: str = "",duringStrokeCmd: str = "",dynclonemode: bool = False,exists: bool = False,expandfilename: bool = False,exportaspectratio: float = 1.0,exportfilemode: str = "",exportfilesave: str = "",exportfilesizex: int = 1,exportfilesizey: int = 1,exportfiletype: str = "",filterNodes: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",importfileload: str = "",importfilemode: str = "",importreassign: bool = False,interactiveUpdate: bool = False,lastRecorderCmd: str = "",lastStampName: str = "",lowerradius: float = 1.0,makeStroke: int = 1,mappressure: str = "",maxvalue: float = 1.0,minvalue: float = 1.0,name: str = "",objattrArray: str = "",opacity: float = 1.0,outline: bool = False,outwhilepaint: bool = False,paintComponent: int = 1,paintNodeArray: str = "",paintNumChannels: int = 1,paintRGBA: bool = False,paintVertexFace: bool = False,paintattrselected: str = "",paintmode: str = "",paintoperationtype: str = "",pickColor: bool = False,pickValue: bool = False,playbackCursor: Tuple[float, float] = tuple(1.0, 1.0),playbackPressure: float = 1.0,preserveclonesource: bool = False,profileShapeFile: str = "",projective: bool = False,radius: float = 1.0,rampMaxColor: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),rampMinColor: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),record: bool = False,reflection: bool = False,reflectionaboutorigin: bool = False,reflectionaxis: str = "",screenRadius: float = 1.0,selectclonesource: bool = False,selectedattroper: str = "",showactive: bool = False,stampDepth: float = 1.0,stampProfile: str = "",stampSpacing: float = 1.0,strokesmooth: str = "",surfaceConformedBrushVertices: bool = False,tablet: bool = False,tangentOutline: bool = False,toolOffProc: str = "",toolOnProc: str = "",useColorRamp: bool = False,useMaxMinColor: bool = False,usepressure: bool = False,value: float = 1.0,vertexColorRange: bool = False,vertexColorRangeLower: float = 1.0,vertexColorRangeUpper: float = 1.0,whichTool: str = "",worldRadius: float = 1.0) -> None:
    """
    これは、アトリビュート ペイント操作のベース コンテキストである artAttrContext にフラグを設定するためのコンテキスト コマンドです。すべてのコマンドは、最後の引数としてコンテキスト名を必要とします。これは作成、編集、または照会されるコンテキストの名前を表します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    accopacity (boolean): 不透明度の塗り重ねをオンまたはオフに設定します。C:既定はfalseです(既定がtrueのスカルプトツールを除く)。Q:照会するとbooleanを返します。

    -----------------------------------------

    activeListChangedProc (string): アクティブリストが変更されたときに必ず起動されるMELコマンドを含む文字列を取ります。シーンでオブジェクトを選択または選択解除したときに、たとえば、UIを更新する必要があるなど、いくつかの状況が考えられます。照会モードでは、現在登録されているMELコマンドの名前が返されます。何も定義されていない場合は空の文字列になります。

    -----------------------------------------

    afterStrokeCmd (string): 渡された文字列はストロークの終了直前にMELコマンドとして実行されます。C:既定は、コマンドなしです。Q:照会すると現在のコマンドを返します。

    -----------------------------------------

    alphaclamp (string): ウェイト値を上限、下限にアルファクランプするかどうかを指定します。次の4つの選択肢があります。「none」-クランプをまったく実行しません。「lower」-下限にのみ合わせてクランプします。「upper」-上限にのみ合わせてクランプします。「both」-上限、下限両方に合わせてクランプします。C:既定は「none」です。Q:照会するとstringを返します。

    -----------------------------------------

    alphaclamplower (float): アルファ値の下限を指定します。C:既定は0.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    alphaclampupper (float): アルファ値の上限を指定します。C:既定は1.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    attrSelected (string): 現在選択されているアトリビュートの名前を返します。Q:照会するとstringを返します。

    -----------------------------------------

    beforeStrokeCmd (string): 渡された文字列はストロークの開始直前にMELコマンドとして実行されます。C:既定は、コマンドなしです。Q:照会すると現在のコマンドを返します。

    -----------------------------------------

    brushalignment (boolean): パスブラシの位置合わせを指定します。trueの場合はストロークパスに位置合わせ、falseの場合はアップベクトルに位置合わせます。C:既定はtrueです。Q:照会するとbooleanを返します。

    -----------------------------------------

    brushfeedback (boolean): ブラシの追加のフィードバックを描画するかどうかを指定します。C:既定はtrueです。Q:照会するとbooleanを返します。

    -----------------------------------------

    clamp (string): ウェイト値に上限、下限を設定するかどうかを指定します。次の4つの選択肢があります。「none」-クランプをまったく実行しません。「lower」-下限にのみ合わせてクランプします。「upper」-上限にのみ合わせてクランプします。「both」-上限、下限両方に合わせてクランプします。C:既定は「none」です。Q:照会するとstringを返します。

    -----------------------------------------

    clamplower (float): 値の下限を指定します。C:既定は0.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    clampupper (float): 値の上限を指定します。C:既定は1.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    clear (boolean): CV/頂点のすべてを現在値に塗り潰します。

    -----------------------------------------

    colorAlphaValue (float): カラーのアルファ値。

    -----------------------------------------

    colorRGBAValue ([float, float, float, float]): カラーのRGBA値。

    -----------------------------------------

    colorRGBValue ([float, float, float]): カラーのRGB値。

    -----------------------------------------

    colorRamp (string): ユーザ定義のカラーランプを使用した、値のカラーへのマッピングを許可します。

    -----------------------------------------

    colorfeedback (boolean): カラーフィードバックの表示をオンまたはオフに設定します。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    colorfeedbackOverride (boolean): カラーフィードバックのオーバーライドをオンまたはオフに設定します。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    colorrangelower (float): カラーフィードバックモードがオンのときに黒にマップする値を指定します。C:既定は0.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    colorrangeupper (float): カラーフィードバックモードがオンのときに最大カラーにマップする値を指定します。C:既定は1.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    dataTypeIndex (int): 選択したペイント可能なアトリビュートがvectorArrayのときに、ペイントするフィールドを指定します。

    -----------------------------------------

    disablelighting (boolean): カラーフィードバックがオンの場合、このフラグによって、影響を受けるサーフェスのライティングを無効にするかどうかが決まります。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    dragSlider (string): (既定のホットキーの'b'と'm'のように)ブラシをサイズ変更したりオフセットしたりするため、現在のブラシのドラッグ状態を設定します。文字列引数は次のいずれかです。「radius」、「lowradius」、「opacity」、「value」、「depth」、「displacement」、「uvvector」、または「none」。C:既定は「none」です。

    -----------------------------------------

    duringStrokeCmd (string): マウスでドラッグする度に、渡された文字列はストローク時にMELコマンドとして実行されます。C:既定は、コマンドなしです。Q:照会すると現在のコマンドを返します。

    -----------------------------------------

    dynclonemode (boolean): ダイナミッククローンモードを有効または無効にします。

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    expandfilename (boolean): trueの場合、書き出しファイルの名前を拡張し、サーフェス名と連結します。falseの場合、名前をそのまま受け取ります。C:既定はtrueです。

    -----------------------------------------

    exportaspectratio (float): 書き出し用のアスペクト比の値です。

    -----------------------------------------

    exportfilemode (string): 書き出しチャネルを指定します。有効なエントリは以下のとおりです:「alpha」、「luminance」、「rgb」、「rgba」。C:既定は「luminance/rgb」です。Q:照会するとstringを返します。

    -----------------------------------------

    exportfilesave (string): アトリビュートマップを書き出し、指定したファイルに保存します。

    -----------------------------------------

    exportfilesizex (int): 書き出すアトリビュートマップの幅を指定します。C:既定幅は256です。Q:照会するとintegerを返します。

    -----------------------------------------

    exportfilesizey (int): 書き出すアトリビュートマップの幅を指定します。C:既定幅は256です。Q:照会するとintegerを返します。

    -----------------------------------------

    exportfiletype (string): イメージファイルフォーマットを指定します。次のいずれかを指定できます:「iff」、「tiff」、「jpeg」、「alias」、「rgb」、「fit」、「postScriptEPS」、「softimage」、「wavefrontRLA」、「wavefrontEXP」。C:既定は「tiff」です。Q:照会するとstringを返します。

    -----------------------------------------

    filterNodes (boolean): ノードフィルタを設定します。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    importfileload (string): 指定したファイルのアトリビュートマップをロードします。

    -----------------------------------------

    importfilemode (string): 読み込むチャネルを指定します。有効なエントリは以下のとおりです:「alpha」、「luminance」、「red」、「green」、「blue」、「rgb」C:既定は「alpha」です。Q:照会するとstringを返します。

    -----------------------------------------

    importreassign (boolean): 読み込む時に複数のアトリビュートマップを再割り当てするかどうかを指定します。再割り当てできるマップは、以前にアーティザン(Artisan)から書き出されたマップだけです。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    interactiveUpdate (boolean): ペイントされた値をアトリビュートに転送する頻度を指定します。TRUE:「継続的」に(1つのストロークにつき何度も)転送します。FALSE:ストロークの最後(マウスボタンが放されたとき)にのみ転送します。C:既定はtrueです。Q:照会するとbooleanを返します。

    -----------------------------------------

    lastRecorderCmd (string): 最後に記録されたコマンドの値です。

    -----------------------------------------

    lastStampName (string): 最後のスタンプ名の値です。

    -----------------------------------------

    lowerradius (float): ブラシの下限サイズを設定します(タブレットにのみ適用されます)。

    -----------------------------------------

    makeStroke (uint): ストロークポイントの値です。

    -----------------------------------------

    mappressure (string): タブレットを使用するときのタブレット圧力のマッピングを設定します。次の4つの選択肢があります:「none」-圧力に影響がない、「opacity」-圧力が不透明度にマップされる、「radius」-圧力がブラシ半径を修正するようマップされる、「both」-圧力が不透明度と半径の両方を修正する。C:既定は「none」です。Q:照会するとstringを返します。

    -----------------------------------------

    maxvalue (float): 各アトリビュートの最大値を指定します。C:既定は1.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    minvalue (float): 各アトリビュートの最小値を指定します。C:既定は0.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    objattrArray (string): ペイント可能なすべてのアトリビュートの配列です。配列の各要素は、次の情報を含む文字列です:NodeType.NodeName.AttributeName.MenuType。*MenuType:メニュー項目（UI）のタイプ（レベル）です。Q:照会するとstringを返します。

    -----------------------------------------

    opacity (float): ブラシの不透明度を設定します。C:既定は1.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    outline (boolean): ブラシを描画するかどうかを指定します。C:既定はtrueです。Q:照会するとbooleanを返します。

    -----------------------------------------

    outwhilepaint (boolean): ペイント時にブラシの輪郭を描画するかどうかを指定します。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    paintComponent (int): フェース、頂点または頂点フェースをペイントするかどうかを指定します。1-Vertex2-VertexFace3-FaceC:既定はVertexです。Q:照会するとintegerを返します。

    -----------------------------------------

    paintNodeArray (string): ペイント可能なノードの配列です。Q:照会するとstringを返します。

    -----------------------------------------

    paintNumChannels (int): ペイントするチャネル数-1(アルファ)、3(RGB)、4(RGBA)

    -----------------------------------------

    paintRGBA (boolean): RGBチャネルをペイントするか、RGBAチャネルをペイントするかを指定します。TRUE:RGBAチャネル。FALSE:RGBチャネル。アルファチャネルは、影響されません。C:既定はFALSE(RGBチャネルのペイント)です。Q:照会するとintegerを返します。

    -----------------------------------------

    paintVertexFace (boolean): 頂点フェースをペイントするかどうかを指定します。TRUE:頂点フェースがペイントされます。頂点に接続されたそれぞれのフェースがペイントされます。FALSE:頂点がペイントされます。接続されているすべてのフェースが影響されます。C:既定はfalseです。Q:照会するとintegerを返します。

    -----------------------------------------

    paintattrselected (string): 選択したペイント可能なアトリビュートの配列です。配列の各要素は、次の情報を含む文字列です。NodeType.NodeName.AttributeName。

    -----------------------------------------

    paintmode (string): ペイントモードを指定します。次の2つの選択肢があります:「screen」または「tangent」。C:既定は「screen」です。Q:照会するとstringを返します。

    -----------------------------------------

    paintoperationtype (string): ペイントツールの操作タイプを指定します。現在、次のペイントモードをサポートしています:「Paint」、「Smear」、「Blur」、「Erase」、「Clone」。既定は「Paint」です。

    -----------------------------------------

    pickColor (boolean): カラーの選択モードのオン/オフを切り替えます。

    -----------------------------------------

    pickValue (boolean): 選択の切り替え

    -----------------------------------------

    playbackCursor ([float, float]): 再生カーソルの値です。

    -----------------------------------------

    playbackPressure (float): 再生圧力の値です。

    -----------------------------------------

    preserveclonesource (boolean): クローンソースを保持するかどうかを指定します。

    -----------------------------------------

    profileShapeFile (string): スタンプシェイプのプロファイルにイメージファイルの名前を渡します。

    -----------------------------------------

    projective (boolean): 投影ペイントモードを指定します。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    radius (float): ブラシのサイズを設定します。C:既定は1.0cmです。Q:照会するとfloatを返します。

    -----------------------------------------

    rampMaxColor ([float, float, float]): 値が最大値以上の場合に、特別のカラーを使用するように定義します。

    -----------------------------------------

    rampMinColor ([float, float, float]): 値が最小値以下の場合に、特別のカラーを使用するように定義します。

    -----------------------------------------

    record (boolean): 記録をオンに切り替えます。

    -----------------------------------------

    reflection (boolean): 反射モードを指定します。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    reflectionaboutorigin (boolean): 原点を中心として反射されるようにオンに切り替えます。

    -----------------------------------------

    reflectionaxis (string): 反射軸を指定します。次の3つの選択肢があります:「x」、「y」、「z」。C:既定は「x」です。Q:照会するとstringを返します。

    -----------------------------------------

    screenRadius (float): スクリーン上のブラシ半径です。

    -----------------------------------------

    selectclonesource (boolean): クローンソースの選択の切り替えをオンにします。

    -----------------------------------------

    selectedattroper (string): ウェイト編集操作を設定します。次の4つのウェイト編集操作があります:「absolute」の場合、ウェイト値は現在のウェイトで置き換えられます。「additive」の場合、現在のウェイトにウェイト値が足されます。「scale」の場合、ウェイト値に現在のウェイトが掛けられます。「smooth」の場合、ウェイト値は現在のウェイトで割られます。C:既定は「absolute」です。Q:照会するとstringを返します。

    -----------------------------------------

    showactive (boolean): サーフェスアイソパラムの表示をオンまたはオフに設定します。C:既定はtrueです。Q:照会するとbooleanを返します。

    -----------------------------------------

    stampDepth (float): スタンプの深さです。

    -----------------------------------------

    stampProfile (string): 現在のスタンプのブラシプロファイルを設定します。現在、次のプロファイルがサポートされています。「gaussian」、「soft」、「solid」または「square」。C:既定は「gaussian」です。Q:照会するとstringを返します。

    -----------------------------------------

    stampSpacing (float): スタンプ間隔を指定します。既定は1.0です。

    -----------------------------------------

    strokesmooth (string): ストロークのスムージングタイプ名です。

    -----------------------------------------

    surfaceConformedBrushVertices (boolean): 影響を受ける頂点として、有効なブラシ領域の表示を有効化/無効化します。

    -----------------------------------------

    tablet (boolean): タブレットデバイスが存在する場合はtrueを、存在しない場合はfalseを返します。

    -----------------------------------------

    tangentOutline (boolean): サーフェスへのブラシ円接線の表示を有効化/無効化します。

    -----------------------------------------

    toolOffProc (string): このツールがオフになったときに必ず起動されるMELプロシージャの名前を表す文字列を取ります。たとえば、クロスペイントツールがオンになったとき、クロスは「clothPaintToolOff」を起動します。ツールが非アクティブになったときに特別な機能が必要となる場合はこのコールバックを定義します。toolOffProcを実装した場合はtoolOnProcも実装したくなるでしょう(-toolOnProcフラグを参照)。照会モードでは、現在登録されているMELコマンドの名前が返されます。何も定義されていない場合は空の文字列になります。

    -----------------------------------------

    toolOnProc (string): このツールがオンになったときに必ず起動されるMELプロシージャの名前を表す文字列を取ります。たとえば、クロスペイントツールがオンになったとき、クロスは「clothPaintToolOn」を起動します。ツールがアクティブになったときに特別な機能が必要となる場合はこのコールバックを定義します。toolOnProcを実装した場合はtoolOffProcも実装したくなるでしょう(-toolOffProcフラグを参照)。照会モードでは、現在登録されているMELコマンドの名前が返されます。何も定義されていない場合は空の文字列になります。

    -----------------------------------------

    useColorRamp (boolean): ユーザ定義のカラーランプを使用して値をカラーにマッピングするかどうかを指定します。これがオフの場合、既定のグレースケールフィードバックを使用します。

    -----------------------------------------

    useMaxMinColor (boolean): 範囲外のカラーを使用するべきかどうかを指定します。詳細については、rampMinColor、rampMaxColorフラグを参照してください。

    -----------------------------------------

    usepressure (boolean): タブレット圧力をオンまたはオフに設定します。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    value (float): 各アトリビュートの値を指定します。C:既定は0.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    vertexColorRange (boolean): 現在選択しているオブジェクトに、頂点カラー範囲を適用するかどうかを指定します。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    vertexColorRangeLower (float): 頂点カラー範囲の最小値を指定します。C:既定は0.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    vertexColorRangeUpper (float): 頂点カラー範囲の最大値を指定します。C:既定は1.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    whichTool (string): この文字列は、アーティザンコンテキストで使用されるツールの名前を定義します。たとえば、「artClothPaint」のように指定します。照会モードでは、指定したコンテキストのツール名が返されます。注:MELの動作方法の理由から、引数を取るフラグを指定するときには、必ず、-queryフラグを最後に指定してください。

    -----------------------------------------

    worldRadius (float): ワールド空間内の半径です。

    -----------------------------------------

    Return Value:
    None: なし照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def artAttrSkinPaintCtx(accopacity: bool = False,activeListChangedProc: str = "",afterStrokeCmd: str = "",alphaclamp: str = "",alphaclamplower: float = 1.0,alphaclampupper: float = 1.0,attrSelected: str = "",beforeStrokeCmd: str = "",brushalignment: bool = False,brushfeedback: bool = False,clamp: str = "",clamplower: float = 1.0,clampupper: float = 1.0,clear: bool = False,colorAlphaValue: float = 1.0,colorRGBAValue: Tuple[float, float, float, float] = tuple(1.0, 1.0, 1.0, 1.0),colorRGBValue: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),colorRamp: str = "",colorfeedback: bool = False,colorfeedbackOverride: bool = False,colorrangelower: float = 1.0,colorrangeupper: float = 1.0,dataTypeIndex: int = 1,disablelighting: bool = False,dragSlider: str = "",duringStrokeCmd: str = "",dynclonemode: bool = False,exists: bool = False,expandfilename: bool = False,exportaspectratio: float = 1.0,exportfilemode: str = "",exportfilesave: str = "",exportfilesizex: int = 1,exportfilesizey: int = 1,exportfiletype: str = "",filterNodes: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",importfileload: str = "",importfilemode: str = "",importreassign: bool = False,influence: str = "",interactiveUpdate: bool = False,lastRecorderCmd: str = "",lastStampName: str = "",lowerradius: float = 1.0,makeStroke: int = 1,mappressure: str = "",maxvalue: float = 1.0,minvalue: float = 1.0,name: str = "",objattrArray: str = "",opacity: float = 1.0,outline: bool = False,outwhilepaint: bool = False,paintNodeArray: str = "",paintSelectMode: int = 1,paintattrselected: str = "",paintmode: str = "",paintoperationtype: str = "",pickColor: bool = False,pickValue: bool = False,playbackCursor: Tuple[float, float] = tuple(1.0, 1.0),playbackPressure: float = 1.0,preserveclonesource: bool = False,profileShapeFile: str = "",projective: bool = False,radius: float = 1.0,rampMaxColor: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),rampMinColor: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),record: bool = False,reflection: bool = False,reflectionaboutorigin: bool = False,reflectionaxis: str = "",screenRadius: float = 1.0,selectclonesource: bool = False,selectedattroper: str = "",showactive: bool = False,skinPaintMode: int = 1,stampDepth: float = 1.0,stampProfile: str = "",stampSpacing: float = 1.0,strokesmooth: str = "",surfaceConformedBrushVertices: bool = False,tablet: bool = False,tangentOutline: bool = False,toolOffProc: str = "",toolOnProc: str = "",useColorRamp: bool = False,useMaxMinColor: bool = False,usepressure: bool = False,value: float = 1.0,whichTool: str = "",worldRadius: float = 1.0,xrayJoints: bool = False) -> None:
    """
    これは、アトリビュート ペイント操作のベース コンテキストである artAttrContext にフラグを設定するためのコンテキスト コマンドです。すべてのコマンドは、最後の引数としてコンテキスト名を必要とします。これは作成、編集、または照会されるコンテキストの名前を表します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    accopacity (boolean): 不透明度の塗り重ねをオンまたはオフに設定します。C:既定はfalseです(既定がtrueのスカルプトツールを除く)。Q:照会するとbooleanを返します。

    -----------------------------------------

    activeListChangedProc (string): アクティブリストが変更されたときに必ず起動されるMELコマンドを含む文字列を取ります。シーンでオブジェクトを選択または選択解除したときに、たとえば、UIを更新する必要があるなど、いくつかの状況が考えられます。照会モードでは、現在登録されているMELコマンドの名前が返されます。何も定義されていない場合は空の文字列になります。

    -----------------------------------------

    afterStrokeCmd (string): 渡された文字列はストロークの終了直前にMELコマンドとして実行されます。C:既定は、コマンドなしです。Q:照会すると現在のコマンドを返します。

    -----------------------------------------

    alphaclamp (string): ウェイト値を上限、下限にアルファクランプするかどうかを指定します。次の4つの選択肢があります。「none」-クランプをまったく実行しません。「lower」-下限にのみ合わせてクランプします。「upper」-上限にのみ合わせてクランプします。「both」-上限、下限両方に合わせてクランプします。C:既定は「none」です。Q:照会するとstringを返します。

    -----------------------------------------

    alphaclamplower (float): アルファ値の下限を指定します。C:既定は0.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    alphaclampupper (float): アルファ値の上限を指定します。C:既定は1.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    attrSelected (string): 現在選択されているアトリビュートの名前を返します。Q:照会するとstringを返します。

    -----------------------------------------

    beforeStrokeCmd (string): 渡された文字列はストロークの開始直前にMELコマンドとして実行されます。C:既定は、コマンドなしです。Q:照会すると現在のコマンドを返します。

    -----------------------------------------

    brushalignment (boolean): パスブラシの位置合わせを指定します。trueの場合はストロークパスに位置合わせ、falseの場合はアップベクトルに位置合わせます。C:既定はtrueです。Q:照会するとbooleanを返します。

    -----------------------------------------

    brushfeedback (boolean): ブラシの追加のフィードバックを描画するかどうかを指定します。C:既定はtrueです。Q:照会するとbooleanを返します。

    -----------------------------------------

    clamp (string): ウェイト値に上限、下限を設定するかどうかを指定します。次の4つの選択肢があります。「none」-クランプをまったく実行しません。「lower」-下限にのみ合わせてクランプします。「upper」-上限にのみ合わせてクランプします。「both」-上限、下限両方に合わせてクランプします。C:既定は「none」です。Q:照会するとstringを返します。

    -----------------------------------------

    clamplower (float): 値の下限を指定します。C:既定は0.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    clampupper (float): 値の上限を指定します。C:既定は1.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    clear (boolean): CV/頂点のすべてを現在値に塗り潰します。

    -----------------------------------------

    colorAlphaValue (float): カラーのアルファ値。

    -----------------------------------------

    colorRGBAValue ([float, float, float, float]): カラーのRGBA値。

    -----------------------------------------

    colorRGBValue ([float, float, float]): カラーのRGB値。

    -----------------------------------------

    colorRamp (string): ユーザ定義のカラーランプを使用した、値のカラーへのマッピングを許可します。

    -----------------------------------------

    colorfeedback (boolean): カラーフィードバックの表示をオンまたはオフに設定します。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    colorfeedbackOverride (boolean): カラーフィードバックのオーバーライドをオンまたはオフに設定します。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    colorrangelower (float): カラーフィードバックモードがオンのときに黒にマップする値を指定します。C:既定は0.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    colorrangeupper (float): カラーフィードバックモードがオンのときに最大カラーにマップする値を指定します。C:既定は1.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    dataTypeIndex (int): 選択したペイント可能なアトリビュートがvectorArrayのときに、ペイントするフィールドを指定します。

    -----------------------------------------

    disablelighting (boolean): カラーフィードバックがオンの場合、このフラグによって、影響を受けるサーフェスのライティングを無効にするかどうかが決まります。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    dragSlider (string): (既定のホットキーの'b'と'm'のように)ブラシをサイズ変更したりオフセットしたりするため、現在のブラシのドラッグ状態を設定します。文字列引数は次のいずれかです。「radius」、「lowradius」、「opacity」、「value」、「depth」、「displacement」、「uvvector」、または「none」。C:既定は「none」です。

    -----------------------------------------

    duringStrokeCmd (string): マウスでドラッグする度に、渡された文字列はストローク時にMELコマンドとして実行されます。C:既定は、コマンドなしです。Q:照会すると現在のコマンドを返します。

    -----------------------------------------

    dynclonemode (boolean): ダイナミッククローンモードを有効または無効にします。

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    expandfilename (boolean): trueの場合、書き出しファイルの名前を拡張し、サーフェス名と連結します。falseの場合、名前をそのまま受け取ります。C:既定はtrueです。

    -----------------------------------------

    exportaspectratio (float): 書き出し用のアスペクト比の値です。

    -----------------------------------------

    exportfilemode (string): 書き出しチャネルを指定します。有効なエントリは以下のとおりです:「alpha」、「luminance」、「rgb」、「rgba」。C:既定は「luminance/rgb」です。Q:照会するとstringを返します。

    -----------------------------------------

    exportfilesave (string): アトリビュートマップを書き出し、指定したファイルに保存します。

    -----------------------------------------

    exportfilesizex (int): 書き出すアトリビュートマップの幅を指定します。C:既定幅は256です。Q:照会するとintegerを返します。

    -----------------------------------------

    exportfilesizey (int): 書き出すアトリビュートマップの幅を指定します。C:既定幅は256です。Q:照会するとintegerを返します。

    -----------------------------------------

    exportfiletype (string): イメージファイルフォーマットを指定します。次のいずれかを指定できます:「iff」、「tiff」、「jpeg」、「alias」、「rgb」、「fit」、「postScriptEPS」、「softimage」、「wavefrontRLA」、「wavefrontEXP」。C:既定は「tiff」です。Q:照会するとstringを返します。

    -----------------------------------------

    filterNodes (boolean): ノードフィルタを設定します。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    importfileload (string): 指定したファイルのアトリビュートマップをロードします。

    -----------------------------------------

    importfilemode (string): 読み込むチャネルを指定します。有効なエントリは以下のとおりです:「alpha」、「luminance」、「red」、「green」、「blue」、「rgb」C:既定は「alpha」です。Q:照会するとstringを返します。

    -----------------------------------------

    importreassign (boolean): 読み込む時に複数のアトリビュートマップを再割り当てするかどうかを指定します。再割り当てできるマップは、以前にアーティザン(Artisan)から書き出されたマップだけです。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    influence (string): ペイント時に選択されるジョイントを指定します。Q:照会するとstringを返します。

    -----------------------------------------

    interactiveUpdate (boolean): ペイントされた値をアトリビュートに転送する頻度を指定します。TRUE:「継続的」に(1つのストロークにつき何度も)転送します。FALSE:ストロークの最後(マウスボタンが放されたとき)にのみ転送します。C:既定はtrueです。Q:照会するとbooleanを返します。

    -----------------------------------------

    lastRecorderCmd (string): 最後に記録されたコマンドの値です。

    -----------------------------------------

    lastStampName (string): 最後のスタンプ名の値です。

    -----------------------------------------

    lowerradius (float): ブラシの下限サイズを設定します(タブレットにのみ適用されます)。

    -----------------------------------------

    makeStroke (uint): ストロークポイントの値です。

    -----------------------------------------

    mappressure (string): タブレットを使用するときのタブレット圧力のマッピングを設定します。次の4つの選択肢があります:「none」-圧力に影響がない、「opacity」-圧力が不透明度にマップされる、「radius」-圧力がブラシ半径を修正するようマップされる、「both」-圧力が不透明度と半径の両方を修正する。C:既定は「none」です。Q:照会するとstringを返します。

    -----------------------------------------

    maxvalue (float): 各アトリビュートの最大値を指定します。C:既定は1.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    minvalue (float): 各アトリビュートの最小値を指定します。C:既定は0.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    objattrArray (string): ペイント可能なすべてのアトリビュートの配列です。配列の各要素は、次の情報を含む文字列です:NodeType.NodeName.AttributeName.MenuType。*MenuType:メニュー項目（UI）のタイプ（レベル）です。Q:照会するとstringを返します。

    -----------------------------------------

    opacity (float): ブラシの不透明度を設定します。C:既定は1.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    outline (boolean): ブラシを描画するかどうかを指定します。C:既定はtrueです。Q:照会するとbooleanを返します。

    -----------------------------------------

    outwhilepaint (boolean): ペイント時にブラシの輪郭を描画するかどうかを指定します。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    paintNodeArray (string): ペイント可能なノードの配列です。Q:照会するとstringを返します。

    -----------------------------------------

    paintSelectMode (int): 選択範囲ペイントツールの動作(選択範囲に追加(1)、選択範囲から除去(2)、選択範囲の切り替え(3))を指定します。Q:照会すると、上記定義の整数を返します。

    -----------------------------------------

    paintattrselected (string): 選択したペイント可能なアトリビュートの配列です。配列の各要素は、次の情報を含む文字列です。NodeType.NodeName.AttributeName。

    -----------------------------------------

    paintmode (string): ペイントモードを指定します。次の2つの選択肢があります:「screen」または「tangent」。C:既定は「screen」です。Q:照会するとstringを返します。

    -----------------------------------------

    paintoperationtype (string): ペイントツールの操作タイプを指定します。現在、次のペイントモードをサポートしています:「Paint」、「Smear」、「Blur」、「Erase」、「Clone」。既定は「Paint」です。

    -----------------------------------------

    pickColor (boolean): カラーの選択モードのオン/オフを切り替えます。

    -----------------------------------------

    pickValue (boolean): 選択の切り替え

    -----------------------------------------

    playbackCursor ([float, float]): 再生カーソルの値です。

    -----------------------------------------

    playbackPressure (float): 再生圧力の値です。

    -----------------------------------------

    preserveclonesource (boolean): クローンソースを保持するかどうかを指定します。

    -----------------------------------------

    profileShapeFile (string): スタンプシェイプのプロファイルにイメージファイルの名前を渡します。

    -----------------------------------------

    projective (boolean): 投影ペイントモードを指定します。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    radius (float): ブラシのサイズを設定します。C:既定は1.0cmです。Q:照会するとfloatを返します。

    -----------------------------------------

    rampMaxColor ([float, float, float]): 値が最大値以上の場合に、特別のカラーを使用するように定義します。

    -----------------------------------------

    rampMinColor ([float, float, float]): 値が最小値以下の場合に、特別のカラーを使用するように定義します。

    -----------------------------------------

    record (boolean): 記録をオンに切り替えます。

    -----------------------------------------

    reflection (boolean): 反射モードを指定します。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    reflectionaboutorigin (boolean): 原点を中心として反射されるようにオンに切り替えます。

    -----------------------------------------

    reflectionaxis (string): 反射軸を指定します。次の3つの選択肢があります:「x」、「y」、「z」。C:既定は「x」です。Q:照会するとstringを返します。

    -----------------------------------------

    screenRadius (float): スクリーン上のブラシ半径です。

    -----------------------------------------

    selectclonesource (boolean): クローンソースの選択の切り替えをオンにします。

    -----------------------------------------

    selectedattroper (string): ウェイト編集操作を設定します。次の4つのウェイト編集操作があります:「absolute」の場合、ウェイト値は現在のウェイトで置き換えられます。「additive」の場合、現在のウェイトにウェイト値が足されます。「scale」の場合、ウェイト値に現在のウェイトが掛けられます。「smooth」の場合、ウェイト値は現在のウェイトで割られます。C:既定は「absolute」です。Q:照会するとstringを返します。

    -----------------------------------------

    showactive (boolean): サーフェスアイソパラムの表示をオンまたはオフに設定します。C:既定はtrueです。Q:照会するとbooleanを返します。

    -----------------------------------------

    skinPaintMode (int): スキンウェイトペイントツールのモード(スキンウェイトペイントモード(1)、セレクションボックスモード(0)、選択範囲ペイントモード(2))を指定します。Q:照会すると、上記定義の整数を返します。

    -----------------------------------------

    stampDepth (float): スタンプの深さです。

    -----------------------------------------

    stampProfile (string): 現在のスタンプのブラシプロファイルを設定します。現在、次のプロファイルがサポートされています。「gaussian」、「soft」、「solid」または「square」。C:既定は「gaussian」です。Q:照会するとstringを返します。

    -----------------------------------------

    stampSpacing (float): スタンプ間隔を指定します。既定は1.0です。

    -----------------------------------------

    strokesmooth (string): ストロークのスムージングタイプ名です。

    -----------------------------------------

    surfaceConformedBrushVertices (boolean): 影響を受ける頂点として、有効なブラシ領域の表示を有効化/無効化します。

    -----------------------------------------

    tablet (boolean): タブレットデバイスが存在する場合はtrueを、存在しない場合はfalseを返します。

    -----------------------------------------

    tangentOutline (boolean): サーフェスへのブラシ円接線の表示を有効化/無効化します。

    -----------------------------------------

    toolOffProc (string): このツールがオフになったときに必ず起動されるMELプロシージャの名前を表す文字列を取ります。たとえば、クロスペイントツールがオンになったとき、クロスは「clothPaintToolOff」を起動します。ツールが非アクティブになったときに特別な機能が必要となる場合はこのコールバックを定義します。toolOffProcを実装した場合はtoolOnProcも実装したくなるでしょう(-toolOnProcフラグを参照)。照会モードでは、現在登録されているMELコマンドの名前が返されます。何も定義されていない場合は空の文字列になります。

    -----------------------------------------

    toolOnProc (string): このツールがオンになったときに必ず起動されるMELプロシージャの名前を表す文字列を取ります。たとえば、クロスペイントツールがオンになったとき、クロスは「clothPaintToolOn」を起動します。ツールがアクティブになったときに特別な機能が必要となる場合はこのコールバックを定義します。toolOnProcを実装した場合はtoolOffProcも実装したくなるでしょう(-toolOffProcフラグを参照)。照会モードでは、現在登録されているMELコマンドの名前が返されます。何も定義されていない場合は空の文字列になります。

    -----------------------------------------

    useColorRamp (boolean): ユーザ定義のカラーランプを使用して値をカラーにマッピングするかどうかを指定します。これがオフの場合、既定のグレースケールフィードバックを使用します。

    -----------------------------------------

    useMaxMinColor (boolean): 範囲外のカラーを使用するべきかどうかを指定します。詳細については、rampMinColor、rampMaxColorフラグを参照してください。

    -----------------------------------------

    usepressure (boolean): タブレット圧力をオンまたはオフに設定します。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    value (float): 各アトリビュートの値を指定します。C:既定は0.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    whichTool (string): この文字列は、アーティザンコンテキストで使用されるツールの名前を定義します。たとえば、「artClothPaint」のように指定します。照会モードでは、指定したコンテキストのツール名が返されます。注:MELの動作方法の理由から、引数を取るフラグを指定するときには、必ず、-queryフラグを最後に指定してください。

    -----------------------------------------

    worldRadius (float): ワールド空間内の半径です。

    -----------------------------------------

    xrayJoints (boolean): ペイント中にジョイントをxrayモードで表示するかどうかを指定します。Q:照会するとbooleanを返します。

    -----------------------------------------

    Return Value:
    None: なし照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def artAttrTool(add: str = "",exists: str = "",remove: str = "") -> None:
    """
    artAttrTool コマンドは、アトリビュート ペイントに使用するツール タイプのリストを管理します。このコマンドは、リスト内容の照会や新規ツールのリストへの追加をサポートします。ビルトインのツール セットを使用できることに注目してください。ビルトインのリストを照会するには、Maya を起動して「artAttrTool -q」を実行します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    add (string): 指定したツールをツールの内部リストに追加します。

    -----------------------------------------

    exists (string): 指定したツールが存在するかどうかをチェックし、見つかった場合はtrueを返し、見つからなければfalseを返します。

    -----------------------------------------

    remove (string): 指定したツールをツールの内部リストから除去します。

    -----------------------------------------

    Return Value:
    None: なし照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def artPuttyCtx(accopacity: bool = False,activeListChangedProc: str = "",afterStrokeCmd: str = "",alphaclamp: str = "",alphaclamplower: float = 1.0,alphaclampupper: float = 1.0,attrSelected: str = "",autosmooth: bool = False,beforeStrokeCmd: str = "",brushStrength: float = 1.0,brushalignment: bool = False,brushfeedback: bool = False,clamp: str = "",clamplower: float = 1.0,clampupper: float = 1.0,clear: bool = False,collapsecvtol: float = 1.0,colorAlphaValue: float = 1.0,colorRGBAValue: Tuple[float, float, float, float] = tuple(1.0, 1.0, 1.0, 1.0),colorRGBValue: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),colorRamp: str = "",colorfeedback: bool = False,colorfeedbackOverride: bool = False,colorrangelower: float = 1.0,colorrangeupper: float = 1.0,dataTypeIndex: int = 1,disablelighting: bool = False,dispdecr: bool = False,dispincr: bool = False,dragSlider: str = "",duringStrokeCmd: str = "",dynclonemode: bool = False,erasesrfupd: bool = False,exists: bool = False,expandfilename: bool = False,exportaspectratio: float = 1.0,exportfilemode: str = "",exportfilesave: str = "",exportfilesizex: int = 1,exportfilesizey: int = 1,exportfiletype: str = "",filterNodes: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",importfileload: str = "",importfilemode: str = "",importreassign: bool = False,interactiveUpdate: bool = False,invertrefvector: bool = False,lastRecorderCmd: str = "",lastStampName: str = "",lowerradius: float = 1.0,makeStroke: int = 1,mappressure: str = "",maxdisp: float = 1.0,maxvalue: float = 1.0,minvalue: float = 1.0,mouldtypehead: str = "",mouldtypemouse: str = "",mouldtypetail: str = "",name: str = "",objattrArray: str = "",opacity: float = 1.0,outline: bool = False,outwhilepaint: bool = False,paintNodeArray: str = "",paintattrselected: str = "",paintmode: str = "",paintoperationtype: str = "",pickColor: bool = False,pickValue: bool = False,playbackCursor: Tuple[float, float] = tuple(1.0, 1.0),playbackPressure: float = 1.0,polecv: bool = False,preserveclonesource: bool = False,profileShapeFile: str = "",projective: bool = False,radius: float = 1.0,rampMaxColor: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),rampMinColor: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),record: bool = False,reflection: bool = False,reflectionaboutorigin: bool = False,reflectionaxis: str = "",refsurface: bool = False,refvector: str = "",refvectoru: float = 1.0,refvectorv: float = 1.0,screenRadius: float = 1.0,selectclonesource: bool = False,selectedattroper: str = "",showactive: bool = False,smoothiters: int = 1,stampDepth: float = 1.0,stampProfile: str = "",stampSpacing: float = 1.0,stitchcorner: bool = False,stitchedgeflood: bool = False,stitchtype: str = "",strokesmooth: str = "",surfaceConformedBrushVertices: bool = False,tablet: bool = False,tangentOutline: bool = False,toolOffProc: str = "",toolOnProc: str = "",updateerasesrf: bool = False,updaterefsrf: bool = False,useColorRamp: bool = False,useMaxMinColor: bool = False,usepressure: bool = False,value: float = 1.0,whichTool: str = "",worldRadius: float = 1.0) -> None:
    """
    これは、アトリビュート ペイント操作のベース コンテキストである artAttrContext にフラグを設定するためのコンテキスト コマンドです。すべてのコマンドは、最後の引数としてコンテキスト名を必要とします。これは作成、編集、または照会されるコンテキストの名前を表します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    accopacity (boolean): 不透明度の塗り重ねをオンまたはオフに設定します。C:既定はfalseです(既定がtrueのスカルプトツールを除く)。Q:照会するとbooleanを返します。

    -----------------------------------------

    activeListChangedProc (string): アクティブリストが変更されたときに必ず起動されるMELコマンドを含む文字列を取ります。シーンでオブジェクトを選択または選択解除したときに、たとえば、UIを更新する必要があるなど、いくつかの状況が考えられます。照会モードでは、現在登録されているMELコマンドの名前が返されます。何も定義されていない場合は空の文字列になります。

    -----------------------------------------

    afterStrokeCmd (string): 渡された文字列はストロークの終了直前にMELコマンドとして実行されます。C:既定は、コマンドなしです。Q:照会すると現在のコマンドを返します。

    -----------------------------------------

    alphaclamp (string): ウェイト値を上限、下限にアルファクランプするかどうかを指定します。次の4つの選択肢があります。「none」-クランプをまったく実行しません。「lower」-下限にのみ合わせてクランプします。「upper」-上限にのみ合わせてクランプします。「both」-上限、下限両方に合わせてクランプします。C:既定は「none」です。Q:照会するとstringを返します。

    -----------------------------------------

    alphaclamplower (float): アルファ値の下限を指定します。C:既定は0.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    alphaclampupper (float): アルファ値の上限を指定します。C:既定は1.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    attrSelected (string): 現在選択されているアトリビュートの名前を返します。Q:照会するとstringを返します。

    -----------------------------------------

    autosmooth (boolean): 自動スムーズオプションを設定します。ブラシがスムーズモードの場合、強さを調整するとサーフェスをスムーズする速度が調整されます。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    beforeStrokeCmd (string): 渡された文字列はストロークの開始直前にMELコマンドとして実行されます。C:既定は、コマンドなしです。Q:照会すると現在のコマンドを返します。

    -----------------------------------------

    brushStrength (float): ブラシの強度を設定します。ブラシの強度はピンチとスライドのブラシによってサポートされています。ピンチモードの場合、強度を調整すると、サーフェスがブラシの中央で収束する速度が調整されます。スライドモードの場合、強度によってブラシのモーションがスケールされます。C:既定は1.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    brushalignment (boolean): パスブラシの位置合わせを指定します。trueの場合はストロークパスに位置合わせ、falseの場合はアップベクトルに位置合わせます。C:既定はtrueです。Q:照会するとbooleanを返します。

    -----------------------------------------

    brushfeedback (boolean): ブラシの追加のフィードバックを描画するかどうかを指定します。C:既定はtrueです。Q:照会するとbooleanを返します。

    -----------------------------------------

    clamp (string): ウェイト値に上限、下限を設定するかどうかを指定します。次の4つの選択肢があります。「none」-クランプをまったく実行しません。「lower」-下限にのみ合わせてクランプします。「upper」-上限にのみ合わせてクランプします。「both」-上限、下限両方に合わせてクランプします。C:既定は「none」です。Q:照会するとstringを返します。

    -----------------------------------------

    clamplower (float): 値の下限を指定します。C:既定は0.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    clampupper (float): 値の上限を指定します。C:既定は1.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    clear (boolean): CV/頂点のすべてを現在値に塗り潰します。

    -----------------------------------------

    collapsecvtol (float): コラプスCV検出のしきい値の許容値を指定します。C:既定は0.005cmです。Q:照会するとfloatを返します。

    -----------------------------------------

    colorAlphaValue (float): カラーのアルファ値。

    -----------------------------------------

    colorRGBAValue ([float, float, float, float]): カラーのRGBA値。

    -----------------------------------------

    colorRGBValue ([float, float, float]): カラーのRGB値。

    -----------------------------------------

    colorRamp (string): ユーザ定義のカラーランプを使用した、値のカラーへのマッピングを許可します。

    -----------------------------------------

    colorfeedback (boolean): カラーフィードバックの表示をオンまたはオフに設定します。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    colorfeedbackOverride (boolean): カラーフィードバックのオーバーライドをオンまたはオフに設定します。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    colorrangelower (float): カラーフィードバックモードがオンのときに黒にマップする値を指定します。C:既定は0.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    colorrangeupper (float): カラーフィードバックモードがオンのときに最大カラーにマップする値を指定します。C:既定は1.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    dataTypeIndex (int): 選択したペイント可能なアトリビュートがvectorArrayのときに、ペイントするフィールドを指定します。

    -----------------------------------------

    disablelighting (boolean): カラーフィードバックがオンの場合、このフラグによって、影響を受けるサーフェスのライティングを無効にするかどうかが決まります。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    dispdecr (boolean): 最大ディスプレイスメントを10%減少させます。

    -----------------------------------------

    dispincr (boolean): 最大ディスプレイスメントを10%増加させます。

    -----------------------------------------

    dragSlider (string): (既定のホットキーの'b'と'm'のように)ブラシをサイズ変更したりオフセットしたりするため、現在のブラシのドラッグ状態を設定します。文字列引数は次のいずれかです。「radius」、「lowradius」、「opacity」、「value」、「depth」、「displacement」、「uvvector」、または「none」。C:既定は「none」です。

    -----------------------------------------

    duringStrokeCmd (string): マウスでドラッグする度に、渡された文字列はストローク時にMELコマンドとして実行されます。C:既定は、コマンドなしです。Q:照会すると現在のコマンドを返します。

    -----------------------------------------

    dynclonemode (boolean): ダイナミッククローンモードを有効または無効にします。

    -----------------------------------------

    erasesrfupd (boolean): 消去サーフェスの更新を切り替えます。

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    expandfilename (boolean): trueの場合、書き出しファイルの名前を拡張し、サーフェス名と連結します。falseの場合、名前をそのまま受け取ります。C:既定はtrueです。

    -----------------------------------------

    exportaspectratio (float): 書き出し用のアスペクト比の値です。

    -----------------------------------------

    exportfilemode (string): 書き出しチャネルを指定します。有効なエントリは以下のとおりです:「alpha」、「luminance」、「rgb」、「rgba」。C:既定は「luminance/rgb」です。Q:照会するとstringを返します。

    -----------------------------------------

    exportfilesave (string): アトリビュートマップを書き出し、指定したファイルに保存します。

    -----------------------------------------

    exportfilesizex (int): 書き出すアトリビュートマップの幅を指定します。C:既定幅は256です。Q:照会するとintegerを返します。

    -----------------------------------------

    exportfilesizey (int): 書き出すアトリビュートマップの幅を指定します。C:既定幅は256です。Q:照会するとintegerを返します。

    -----------------------------------------

    exportfiletype (string): イメージファイルフォーマットを指定します。次のいずれかを指定できます:「iff」、「tiff」、「jpeg」、「alias」、「rgb」、「fit」、「postScriptEPS」、「softimage」、「wavefrontRLA」、「wavefrontEXP」。C:既定は「tiff」です。Q:照会するとstringを返します。

    -----------------------------------------

    filterNodes (boolean): ノードフィルタを設定します。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    importfileload (string): 指定したファイルのアトリビュートマップをロードします。

    -----------------------------------------

    importfilemode (string): 読み込むチャネルを指定します。有効なエントリは以下のとおりです:「alpha」、「luminance」、「red」、「green」、「blue」、「rgb」C:既定は「alpha」です。Q:照会するとstringを返します。

    -----------------------------------------

    importreassign (boolean): 読み込む時に複数のアトリビュートマップを再割り当てするかどうかを指定します。再割り当てできるマップは、以前にアーティザン(Artisan)から書き出されたマップだけです。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    interactiveUpdate (boolean): ペイントされた値をアトリビュートに転送する頻度を指定します。TRUE:「継続的」に(1つのストロークにつき何度も)転送します。FALSE:ストロークの最後(マウスボタンが放されたとき)にのみ転送します。C:既定はtrueです。Q:照会するとbooleanを返します。

    -----------------------------------------

    invertrefvector (boolean): 反射がオンのときに基準ベクトルオプションを反転するように設定します。trueの場合、反映されたストローク用のリファレンスベクトルは、元のベクトルに関してネゲートされます。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    lastRecorderCmd (string): 最後に記録されたコマンドの値です。

    -----------------------------------------

    lastStampName (string): 最後のスタンプ名の値です。

    -----------------------------------------

    lowerradius (float): ブラシの下限サイズを設定します(タブレットにのみ適用されます)。

    -----------------------------------------

    makeStroke (uint): ストロークポイントの値です。

    -----------------------------------------

    mappressure (string): タブレットを使用するときのタブレット圧力のマッピングを設定します。次の4つの選択肢があります:「none」-圧力に影響がない、「opacity」-圧力が不透明度にマップされる、「radius」-圧力がブラシ半径を修正するようマップされる、「both」-圧力が不透明度と半径の両方を修正する。C:既定は「none」です。Q:照会するとstringを返します。

    -----------------------------------------

    maxdisp (float): 最大ディスプレイスメントを定義します(maxDispは[0.0..5.0])。C:既定は1.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    maxvalue (float): 各アトリビュートの最大値を指定します。C:既定は1.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    minvalue (float): 各アトリビュートの最小値を指定します。C:既定は0.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    mouldtypehead (string): 使用するタイプ金型のタイプです。

    -----------------------------------------

    mouldtypemouse (string): パテ操作またはモードを指定します(「push」:複数のCVを指定した方向に押す(refvectorフラグを参照)、「pull」:複数のCVを指定した方向に引く、「smooth」:スカルプトをスムーズする、「erase」:ペイントを消去する)。C:既定は「push」です。Q:照会するとstringを返します。

    -----------------------------------------

    mouldtypetail (string): 使用する消去金型のタイプです。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    objattrArray (string): ペイント可能なすべてのアトリビュートの配列です。配列の各要素は、次の情報を含む文字列です:NodeType.NodeName.AttributeName.MenuType。*MenuType:メニュー項目（UI）のタイプ（レベル）です。Q:照会するとstringを返します。

    -----------------------------------------

    opacity (float): ブラシの不透明度を設定します。C:既定は1.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    outline (boolean): ブラシを描画するかどうかを指定します。C:既定はtrueです。Q:照会するとbooleanを返します。

    -----------------------------------------

    outwhilepaint (boolean): ペイント時にブラシの輪郭を描画するかどうかを指定します。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    paintNodeArray (string): ペイント可能なノードの配列です。Q:照会するとstringを返します。

    -----------------------------------------

    paintattrselected (string): 選択したペイント可能なアトリビュートの配列です。配列の各要素は、次の情報を含む文字列です。NodeType.NodeName.AttributeName。

    -----------------------------------------

    paintmode (string): ペイントモードを指定します。次の2つの選択肢があります:「screen」または「tangent」。C:既定は「screen」です。Q:照会するとstringを返します。

    -----------------------------------------

    paintoperationtype (string): ペイントツールの操作タイプを指定します。現在、次のペイントモードをサポートしています:「Paint」、「Smear」、「Blur」、「Erase」、「Clone」。既定は「Paint」です。

    -----------------------------------------

    pickColor (boolean): カラーの選択モードのオン/オフを切り替えます。

    -----------------------------------------

    pickValue (boolean): 選択の切り替え

    -----------------------------------------

    playbackCursor ([float, float]): 再生カーソルの値です。

    -----------------------------------------

    playbackPressure (float): 再生圧力の値です。

    -----------------------------------------

    polecv (boolean): 極のCVをすべて同じ位置に引き寄せます。

    -----------------------------------------

    preserveclonesource (boolean): クローンソースを保持するかどうかを指定します。

    -----------------------------------------

    profileShapeFile (string): スタンプシェイプのプロファイルにイメージファイルの名前を渡します。

    -----------------------------------------

    projective (boolean): 投影ペイントモードを指定します。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    radius (float): ブラシのサイズを設定します。C:既定は1.0cmです。Q:照会するとfloatを返します。

    -----------------------------------------

    rampMaxColor ([float, float, float]): 値が最大値以上の場合に、特別のカラーを使用するように定義します。

    -----------------------------------------

    rampMinColor ([float, float, float]): 値が最小値以下の場合に、特別のカラーを使用するように定義します。

    -----------------------------------------

    record (boolean): 記録をオンに切り替えます。

    -----------------------------------------

    reflection (boolean): 反射モードを指定します。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    reflectionaboutorigin (boolean): 原点を中心として反射されるようにオンに切り替えます。

    -----------------------------------------

    reflectionaxis (string): 反射軸を指定します。次の3つの選択肢があります:「x」、「y」、「z」。C:既定は「x」です。Q:照会するとstringを返します。

    -----------------------------------------

    refsurface (boolean): リファレンスサーフェスの更新のオン/オフを設定します。trueにすると、ストローク毎にリファレンスサーフェスは自動的に更新されます。false　にすると、更新ボタンを押してリファレンスサーフェスを明示的に更新する必要があります(updaterefsrfを参照)。C:既定はtrueです。Q:照会するとbooleanを返します。

    -----------------------------------------

    refvector (string): 押し込み/引き出し操作の方向を指定します(「normal」-法線に沿ってスカルプト、「firstnormal」-ストロークの1番目の法線に沿ってスカルプト、「view」-ビューの方向に沿ってスカルプト、「xaxis」、「yaxis」、「zaxis」-指定した軸方向にスカルプト、「uisoparm」、「visoparm」-UまたはVアイソパラメトリックラインに沿ってスカルプト、「uvvector」-UVスペースの任意のベクトルに沿ってスカルプト)。C:既定は「normal」です。Q:照会するとstringを返します。

    -----------------------------------------

    refvectoru (float): -refVectorが「uvvector」に設定されてたときに使用されるUVベクトルのU成分を指定します。

    -----------------------------------------

    refvectorv (float): -refVectorが「uvvector」に設定されたときに使用されるUVベクトルのV成分を指定します。

    -----------------------------------------

    screenRadius (float): スクリーン上のブラシ半径です。

    -----------------------------------------

    selectclonesource (boolean): クローンソースの選択の切り替えをオンにします。

    -----------------------------------------

    selectedattroper (string): ウェイト編集操作を設定します。次の4つのウェイト編集操作があります:「absolute」の場合、ウェイト値は現在のウェイトで置き換えられます。「additive」の場合、現在のウェイトにウェイト値が足されます。「scale」の場合、ウェイト値に現在のウェイトが掛けられます。「smooth」の場合、ウェイト値は現在のウェイトで割られます。C:既定は「absolute」です。Q:照会するとstringを返します。

    -----------------------------------------

    showactive (boolean): サーフェスアイソパラムの表示をオンまたはオフに設定します。C:既定はtrueです。Q:照会するとbooleanを返します。

    -----------------------------------------

    smoothiters (int): スムージング操作の精度(繰り返しの回数)を設定します。C:既定は3です。Q:照会するとintを返します。

    -----------------------------------------

    stampDepth (float): スタンプの深さです。

    -----------------------------------------

    stampProfile (string): 現在のスタンプのブラシプロファイルを設定します。現在、次のプロファイルがサポートされています。「gaussian」、「soft」、「solid」または「square」。C:既定は「gaussian」です。Q:照会するとstringを返します。

    -----------------------------------------

    stampSpacing (float): スタンプ間隔を指定します。既定は1.0です。

    -----------------------------------------

    stitchcorner (boolean): ステッチングコーナーモードのオン/オフを設定します。C:既定はオフです。Q:照会するとbooleanを返します。

    -----------------------------------------

    stitchedgeflood (boolean): ポストプロセスのステッチングエッジ処理をトリガします。

    -----------------------------------------

    stitchtype (string): ステッチングモードのオン/オフを設定します(「off」:ステッチングをオフ、「position」:接線連続性C0に関係なくポジションステッチングを行う、「tan」:C1の連続性を保持する)。C:既定は「position」です。Q:照会するとstringを返します。

    -----------------------------------------

    strokesmooth (string): ストロークのスムージングタイプ名です。

    -----------------------------------------

    surfaceConformedBrushVertices (boolean): 影響を受ける頂点として、有効なブラシ領域の表示を有効化/無効化します。

    -----------------------------------------

    tablet (boolean): タブレットデバイスが存在する場合はtrueを、存在しない場合はfalseを返します。

    -----------------------------------------

    tangentOutline (boolean): サーフェスへのブラシ円接線の表示を有効化/無効化します。

    -----------------------------------------

    toolOffProc (string): このツールがオフになったときに必ず起動されるMELプロシージャの名前を表す文字列を取ります。たとえば、クロスペイントツールがオンになったとき、クロスは「clothPaintToolOff」を起動します。ツールが非アクティブになったときに特別な機能が必要となる場合はこのコールバックを定義します。toolOffProcを実装した場合はtoolOnProcも実装したくなるでしょう(-toolOnProcフラグを参照)。照会モードでは、現在登録されているMELコマンドの名前が返されます。何も定義されていない場合は空の文字列になります。

    -----------------------------------------

    toolOnProc (string): このツールがオンになったときに必ず起動されるMELプロシージャの名前を表す文字列を取ります。たとえば、クロスペイントツールがオンになったとき、クロスは「clothPaintToolOn」を起動します。ツールがアクティブになったときに特別な機能が必要となる場合はこのコールバックを定義します。toolOnProcを実装した場合はtoolOffProcも実装したくなるでしょう(-toolOffProcフラグを参照)。照会モードでは、現在登録されているMELコマンドの名前が返されます。何も定義されていない場合は空の文字列になります。

    -----------------------------------------

    updateerasesrf (boolean): 消去サーフェスを更新します。

    -----------------------------------------

    updaterefsrf (boolean): リファレンスサーフェスを更新します。

    -----------------------------------------

    useColorRamp (boolean): ユーザ定義のカラーランプを使用して値をカラーにマッピングするかどうかを指定します。これがオフの場合、既定のグレースケールフィードバックを使用します。

    -----------------------------------------

    useMaxMinColor (boolean): 範囲外のカラーを使用するべきかどうかを指定します。詳細については、rampMinColor、rampMaxColorフラグを参照してください。

    -----------------------------------------

    usepressure (boolean): タブレット圧力をオンまたはオフに設定します。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    value (float): 各アトリビュートの値を指定します。C:既定は0.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    whichTool (string): この文字列は、アーティザンコンテキストで使用されるツールの名前を定義します。たとえば、「artClothPaint」のように指定します。照会モードでは、指定したコンテキストのツール名が返されます。注:MELの動作方法の理由から、引数を取るフラグを指定するときには、必ず、-queryフラグを最後に指定してください。

    -----------------------------------------

    worldRadius (float): ワールド空間内の半径です。

    -----------------------------------------

    Return Value:
    None: なし照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def artSelectCtx(accopacity: bool = False,addselection: bool = False,afterStrokeCmd: str = "",beforeStrokeCmd: str = "",brushalignment: bool = False,brushfeedback: bool = False,clear: bool = False,dragSlider: str = "",dynclonemode: bool = False,exists: bool = False,expandfilename: bool = False,exportaspectratio: float = 1.0,exportfilemode: str = "",exportfilesave: str = "",exportfilesizex: int = 1,exportfilesizey: int = 1,exportfiletype: str = "",history: bool = False,image1: str = "",image2: str = "",image3: str = "",importfileload: str = "",importfilemode: str = "",importreassign: bool = False,importthreshold: float = 1.0,lastRecorderCmd: str = "",lastStampName: str = "",lowerradius: float = 1.0,makeStroke: int = 1,mappressure: str = "",name: str = "",opacity: float = 1.0,outline: bool = False,outwhilepaint: bool = False,paintmode: str = "",paintoperationtype: str = "",pickColor: bool = False,pickValue: bool = False,playbackCursor: Tuple[float, float] = tuple(1.0, 1.0),playbackPressure: float = 1.0,preserveclonesource: bool = False,profileShapeFile: str = "",projective: bool = False,radius: float = 1.0,record: bool = False,reflection: bool = False,reflectionaboutorigin: bool = False,reflectionaxis: str = "",screenRadius: float = 1.0,selectall: bool = False,selectclonesource: bool = False,selectop: str = "",showactive: bool = False,stampDepth: float = 1.0,stampProfile: str = "",stampSpacing: float = 1.0,strokesmooth: str = "",surfaceConformedBrushVertices: bool = False,tablet: bool = False,tangentOutline: bool = False,toggleall: bool = False,unselectall: bool = False,usepressure: bool = False,worldRadius: float = 1.0) -> None:
    """
    このコマンドは、ブラシ インタフェース(Maya Artisan)を使って、選択したサーフェス上のコンポーネントを選択/選択解除/切り替えるために使用します。このコマンドはサーフェスのコンポーネントを選択するため、該当するコンポーネント モードでしか作動しません。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    accopacity (boolean): 不透明度の塗り重ねをオンまたはオフに設定します。C:既定はfalseです(既定がtrueのスカルプトツールを除く)。Q:照会するとbooleanを返します。

    -----------------------------------------

    addselection (boolean): trueの場合、新しいストロークのたびにCVがアクティブリストに追加されます。falseの場合、ストロークのたびに前の選択項目を置き換えます。C:既定はtrueです。Q:照会するとbooleanを返します。

    -----------------------------------------

    afterStrokeCmd (string): 渡された文字列はストロークの終了直前にMELコマンドとして実行されます。C:既定は、コマンドなしです。Q:照会すると現在のコマンドを返します。

    -----------------------------------------

    beforeStrokeCmd (string): 渡された文字列はストロークの開始直前にMELコマンドとして実行されます。C:既定は、コマンドなしです。Q:照会すると現在のコマンドを返します。

    -----------------------------------------

    brushalignment (boolean): パスブラシの位置合わせを指定します。trueの場合はストロークパスに位置合わせ、falseの場合はアップベクトルに位置合わせます。C:既定はtrueです。Q:照会するとbooleanを返します。

    -----------------------------------------

    brushfeedback (boolean): ブラシの追加のフィードバックを描画するかどうかを指定します。C:既定はtrueです。Q:照会するとbooleanを返します。

    -----------------------------------------

    clear (boolean): CV/頂点のすべてを現在値に塗り潰します。

    -----------------------------------------

    dragSlider (string): (既定のホットキーの'b'と'm'のように)ブラシをサイズ変更したりオフセットしたりするため、現在のブラシのドラッグ状態を設定します。文字列引数は次のいずれかです。「radius」、「lowradius」、「opacity」、「value」、「depth」、「displacement」、「uvvector」、または「none」。C:既定は「none」です。

    -----------------------------------------

    dynclonemode (boolean): ダイナミッククローンモードを有効または無効にします。

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    expandfilename (boolean): trueの場合、書き出しファイルの名前を拡張し、サーフェス名と連結します。falseの場合、名前をそのまま受け取ります。C:既定はtrueです。

    -----------------------------------------

    exportaspectratio (float): 書き出し用のアスペクト比の値です。

    -----------------------------------------

    exportfilemode (string): 書き出しチャネルを指定します。有効なエントリは以下のとおりです:「alpha」、「luminance」、「rgb」、「rgba」。C:既定は「luminance/rgb」です。Q:照会するとstringを返します。

    -----------------------------------------

    exportfilesave (string): アトリビュートマップを書き出し、指定したファイルに保存します。

    -----------------------------------------

    exportfilesizex (int): 書き出すアトリビュートマップの幅を指定します。C:既定幅は256です。Q:照会するとintegerを返します。

    -----------------------------------------

    exportfilesizey (int): 書き出すアトリビュートマップの幅を指定します。C:既定幅は256です。Q:照会するとintegerを返します。

    -----------------------------------------

    exportfiletype (string): イメージファイルフォーマットを指定します。次のいずれかを指定できます:「iff」、「tiff」、「jpeg」、「alias」、「rgb」、「fit」、「postScriptEPS」、「softimage」、「wavefrontRLA」、「wavefrontEXP」。C:既定は「tiff」です。Q:照会するとstringを返します。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    importfileload (string): 指定したファイルのアトリビュートマップをロードします。

    -----------------------------------------

    importfilemode (string): 読み込むチャネルを指定します。有効なエントリは以下のとおりです:「alpha」、「luminance」、「red」、「green」、「blue」、「rgb」C:既定は「alpha」です。Q:照会するとstringを返します。

    -----------------------------------------

    importreassign (boolean): 読み込む時に複数のアトリビュートマップを再割り当てするかどうかを指定します。再割り当てできるマップは、以前にアーティザン(Artisan)から書き出されたマップだけです。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    importthreshold (float): アトリビュートマップの読み込みのしきい値を指定します。C:既定は0.5です。Q:照会するとfloatを返します。

    -----------------------------------------

    lastRecorderCmd (string): 最後に記録されたコマンドの値です。

    -----------------------------------------

    lastStampName (string): 最後のスタンプ名の値です。

    -----------------------------------------

    lowerradius (float): ブラシの下限サイズを設定します(タブレットにのみ適用されます)。

    -----------------------------------------

    makeStroke (uint): ストロークポイントの値です。

    -----------------------------------------

    mappressure (string): タブレットを使用するときのタブレット圧力のマッピングを設定します。次の4つの選択肢があります:「none」-圧力に影響がない、「opacity」-圧力が不透明度にマップされる、「radius」-圧力がブラシ半径を修正するようマップされる、「both」-圧力が不透明度と半径の両方を修正する。C:既定は「none」です。Q:照会するとstringを返します。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    opacity (float): ブラシの不透明度を設定します。C:既定は1.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    outline (boolean): ブラシを描画するかどうかを指定します。C:既定はtrueです。Q:照会するとbooleanを返します。

    -----------------------------------------

    outwhilepaint (boolean): ペイント時にブラシの輪郭を描画するかどうかを指定します。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    paintmode (string): ペイントモードを指定します。次の2つの選択肢があります:「screen」または「tangent」。C:既定は「screen」です。Q:照会するとstringを返します。

    -----------------------------------------

    paintoperationtype (string): ペイントツールの操作タイプを指定します。現在、次のペイントモードをサポートしています:「Paint」、「Smear」、「Blur」、「Erase」、「Clone」。既定は「Paint」です。

    -----------------------------------------

    pickColor (boolean): カラーの選択モードのオン/オフを切り替えます。

    -----------------------------------------

    pickValue (boolean): 選択の切り替え

    -----------------------------------------

    playbackCursor ([float, float]): 再生カーソルの値です。

    -----------------------------------------

    playbackPressure (float): 再生圧力の値です。

    -----------------------------------------

    preserveclonesource (boolean): クローンソースを保持するかどうかを指定します。

    -----------------------------------------

    profileShapeFile (string): スタンプシェイプのプロファイルにイメージファイルの名前を渡します。

    -----------------------------------------

    projective (boolean): 投影ペイントモードを指定します。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    radius (float): ブラシのサイズを設定します。C:既定は1.0cmです。Q:照会するとfloatを返します。

    -----------------------------------------

    record (boolean): 記録をオンに切り替えます。

    -----------------------------------------

    reflection (boolean): 反射モードを指定します。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    reflectionaboutorigin (boolean): 原点を中心として反射されるようにオンに切り替えます。

    -----------------------------------------

    reflectionaxis (string): 反射軸を指定します。次の3つの選択肢があります:「x」、「y」、「z」。C:既定は「x」です。Q:照会するとstringを返します。

    -----------------------------------------

    screenRadius (float): スクリーン上のブラシ半径です。

    -----------------------------------------

    selectall (boolean): すべての頂点/エッジ/フェース/UVを選択します。

    -----------------------------------------

    selectclonesource (boolean): クローンソースの選択の切り替えをオンにします。

    -----------------------------------------

    selectop (string): 選択操作を指定します(「select」、「unselect」、「toggle」)。C:既定は「select」です。Q:照会するとstringを返します。

    -----------------------------------------

    showactive (boolean): サーフェスアイソパラムの表示をオンまたはオフに設定します。C:既定はtrueです。Q:照会するとbooleanを返します。

    -----------------------------------------

    stampDepth (float): スタンプの深さです。

    -----------------------------------------

    stampProfile (string): 現在のスタンプのブラシプロファイルを設定します。現在、次のプロファイルがサポートされています。「gaussian」、「soft」、「solid」または「square」。C:既定は「gaussian」です。Q:照会するとstringを返します。

    -----------------------------------------

    stampSpacing (float): スタンプ間隔を指定します。既定は1.0です。

    -----------------------------------------

    strokesmooth (string): ストロークのスムージングタイプ名です。

    -----------------------------------------

    surfaceConformedBrushVertices (boolean): 影響を受ける頂点として、有効なブラシ領域の表示を有効化/無効化します。

    -----------------------------------------

    tablet (boolean): タブレットデバイスが存在する場合はtrueを、存在しない場合はfalseを返します。

    -----------------------------------------

    tangentOutline (boolean): サーフェスへのブラシ円接線の表示を有効化/無効化します。

    -----------------------------------------

    toggleall (boolean): すべての頂点/エッジ/フェース/UVを切り替えます。

    -----------------------------------------

    unselectall (boolean): すべての頂点/エッジ/フェース/UVを選択解除します。

    -----------------------------------------

    usepressure (boolean): タブレット圧力をオンまたはオフに設定します。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    worldRadius (float): ワールド空間内の半径です。

    -----------------------------------------

    Return Value:
    None: なし照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def artSetPaintCtx(accopacity: bool = False,afterStrokeCmd: str = "",beforeStrokeCmd: str = "",brushalignment: bool = False,brushfeedback: bool = False,clear: bool = False,dragSlider: str = "",dynclonemode: bool = False,exists: bool = False,expandfilename: bool = False,exportaspectratio: float = 1.0,exportfilemode: str = "",exportfilesave: str = "",exportfilesizex: int = 1,exportfilesizey: int = 1,exportfiletype: str = "",history: bool = False,image1: str = "",image2: str = "",image3: str = "",importfileload: str = "",importfilemode: str = "",importreassign: bool = False,lastRecorderCmd: str = "",lastStampName: str = "",lowerradius: float = 1.0,makeStroke: int = 1,mappressure: str = "",name: str = "",objectsetnames: str = "",opacity: float = 1.0,outline: bool = False,outwhilepaint: bool = False,paintmode: str = "",paintoperationtype: str = "",pickColor: bool = False,pickValue: bool = False,playbackCursor: Tuple[float, float] = tuple(1.0, 1.0),playbackPressure: float = 1.0,preserveclonesource: bool = False,profileShapeFile: str = "",projective: bool = False,radius: float = 1.0,record: bool = False,reflection: bool = False,reflectionaboutorigin: bool = False,reflectionaxis: str = "",screenRadius: float = 1.0,selectclonesource: bool = False,setcolorfeedback: bool = False,setdisplaycvs: bool = False,setopertype: str = "",settomodify: str = "",showactive: bool = False,stampDepth: float = 1.0,stampProfile: str = "",stampSpacing: float = 1.0,strokesmooth: str = "",surfaceConformedBrushVertices: bool = False,tablet: bool = False,tangentOutline: bool = False,usepressure: bool = False,worldRadius: float = 1.0) -> None:
    """
    このツールを使用すると、Maya Artisan のインタフェースを使用して、NURBS サーフェス上のセット メンバーシップを修正(複数の CV を追加、転送、除去)することができます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    accopacity (boolean): 不透明度の塗り重ねをオンまたはオフに設定します。C:既定はfalseです(既定がtrueのスカルプトツールを除く)。Q:照会するとbooleanを返します。

    -----------------------------------------

    afterStrokeCmd (string): 渡された文字列はストロークの終了直前にMELコマンドとして実行されます。C:既定は、コマンドなしです。Q:照会すると現在のコマンドを返します。

    -----------------------------------------

    beforeStrokeCmd (string): 渡された文字列はストロークの開始直前にMELコマンドとして実行されます。C:既定は、コマンドなしです。Q:照会すると現在のコマンドを返します。

    -----------------------------------------

    brushalignment (boolean): パスブラシの位置合わせを指定します。trueの場合はストロークパスに位置合わせ、falseの場合はアップベクトルに位置合わせます。C:既定はtrueです。Q:照会するとbooleanを返します。

    -----------------------------------------

    brushfeedback (boolean): ブラシの追加のフィードバックを描画するかどうかを指定します。C:既定はtrueです。Q:照会するとbooleanを返します。

    -----------------------------------------

    clear (boolean): CV/頂点のすべてを現在値に塗り潰します。

    -----------------------------------------

    dragSlider (string): (既定のホットキーの'b'と'm'のように)ブラシをサイズ変更したりオフセットしたりするため、現在のブラシのドラッグ状態を設定します。文字列引数は次のいずれかです。「radius」、「lowradius」、「opacity」、「value」、「depth」、「displacement」、「uvvector」、または「none」。C:既定は「none」です。

    -----------------------------------------

    dynclonemode (boolean): ダイナミッククローンモードを有効または無効にします。

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    expandfilename (boolean): trueの場合、書き出しファイルの名前を拡張し、サーフェス名と連結します。falseの場合、名前をそのまま受け取ります。C:既定はtrueです。

    -----------------------------------------

    exportaspectratio (float): 書き出し用のアスペクト比の値です。

    -----------------------------------------

    exportfilemode (string): 書き出しチャネルを指定します。有効なエントリは以下のとおりです:「alpha」、「luminance」、「rgb」、「rgba」。C:既定は「luminance/rgb」です。Q:照会するとstringを返します。

    -----------------------------------------

    exportfilesave (string): アトリビュートマップを書き出し、指定したファイルに保存します。

    -----------------------------------------

    exportfilesizex (int): 書き出すアトリビュートマップの幅を指定します。C:既定幅は256です。Q:照会するとintegerを返します。

    -----------------------------------------

    exportfilesizey (int): 書き出すアトリビュートマップの幅を指定します。C:既定幅は256です。Q:照会するとintegerを返します。

    -----------------------------------------

    exportfiletype (string): イメージファイルフォーマットを指定します。次のいずれかを指定できます:「iff」、「tiff」、「jpeg」、「alias」、「rgb」、「fit」、「postScriptEPS」、「softimage」、「wavefrontRLA」、「wavefrontEXP」。C:既定は「tiff」です。Q:照会するとstringを返します。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    importfileload (string): 指定したファイルのアトリビュートマップをロードします。

    -----------------------------------------

    importfilemode (string): 読み込むチャネルを指定します。有効なエントリは以下のとおりです:「alpha」、「luminance」、「red」、「green」、「blue」、「rgb」C:既定は「alpha」です。Q:照会するとstringを返します。

    -----------------------------------------

    importreassign (boolean): 読み込む時に複数のアトリビュートマップを再割り当てするかどうかを指定します。再割り当てできるマップは、以前にアーティザン(Artisan)から書き出されたマップだけです。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    lastRecorderCmd (string): 最後に記録されたコマンドの値です。

    -----------------------------------------

    lastStampName (string): 最後のスタンプ名の値です。

    -----------------------------------------

    lowerradius (float): ブラシの下限サイズを設定します(タブレットにのみ適用されます)。

    -----------------------------------------

    makeStroke (uint): ストロークポイントの値です。

    -----------------------------------------

    mappressure (string): タブレットを使用するときのタブレット圧力のマッピングを設定します。次の4つの選択肢があります:「none」-圧力に影響がない、「opacity」-圧力が不透明度にマップされる、「radius」-圧力がブラシ半径を修正するようマップされる、「both」-圧力が不透明度と半径の両方を修正する。C:既定は「none」です。Q:照会するとstringを返します。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    objectsetnames (string): オブジェクトセットの既定の名前です。

    -----------------------------------------

    opacity (float): ブラシの不透明度を設定します。C:既定は1.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    outline (boolean): ブラシを描画するかどうかを指定します。C:既定はtrueです。Q:照会するとbooleanを返します。

    -----------------------------------------

    outwhilepaint (boolean): ペイント時にブラシの輪郭を描画するかどうかを指定します。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    paintmode (string): ペイントモードを指定します。次の2つの選択肢があります:「screen」または「tangent」。C:既定は「screen」です。Q:照会するとstringを返します。

    -----------------------------------------

    paintoperationtype (string): ペイントツールの操作タイプを指定します。現在、次のペイントモードをサポートしています:「Paint」、「Smear」、「Blur」、「Erase」、「Clone」。既定は「Paint」です。

    -----------------------------------------

    pickColor (boolean): カラーの選択モードのオン/オフを切り替えます。

    -----------------------------------------

    pickValue (boolean): 選択の切り替え

    -----------------------------------------

    playbackCursor ([float, float]): 再生カーソルの値です。

    -----------------------------------------

    playbackPressure (float): 再生圧力の値です。

    -----------------------------------------

    preserveclonesource (boolean): クローンソースを保持するかどうかを指定します。

    -----------------------------------------

    profileShapeFile (string): スタンプシェイプのプロファイルにイメージファイルの名前を渡します。

    -----------------------------------------

    projective (boolean): 投影ペイントモードを指定します。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    radius (float): ブラシのサイズを設定します。C:既定は1.0cmです。Q:照会するとfloatを返します。

    -----------------------------------------

    record (boolean): 記録をオンに切り替えます。

    -----------------------------------------

    reflection (boolean): 反射モードを指定します。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    reflectionaboutorigin (boolean): 原点を中心として反射されるようにオンに切り替えます。

    -----------------------------------------

    reflectionaxis (string): 反射軸を指定します。次の3つの選択肢があります:「x」、「y」、「z」。C:既定は「x」です。Q:照会するとstringを返します。

    -----------------------------------------

    screenRadius (float): スクリーン上のブラシ半径です。

    -----------------------------------------

    selectclonesource (boolean): クローンソースの選択の切り替えをオンにします。

    -----------------------------------------

    setcolorfeedback (boolean): カラーフィードバックをオンまたはオフにするかを指定します。C:既定はオンです。Q:照会するとbooleanを返します。

    -----------------------------------------

    setdisplaycvs (boolean): アクティブなCVを表示するかどうかを指定します。C:既定はオンです。Q:照会するとbooleanを返します。

    -----------------------------------------

    setopertype (string): setEdit操作(「add」、「transfer」、「remove」)を指定します。C:既定は「add」です。Q:照会するとstringを返します。

    -----------------------------------------

    settomodify (string): 修正するセットの名前を指定します。Q:照会するとstringを返します。

    -----------------------------------------

    showactive (boolean): サーフェスアイソパラムの表示をオンまたはオフに設定します。C:既定はtrueです。Q:照会するとbooleanを返します。

    -----------------------------------------

    stampDepth (float): スタンプの深さです。

    -----------------------------------------

    stampProfile (string): 現在のスタンプのブラシプロファイルを設定します。現在、次のプロファイルがサポートされています。「gaussian」、「soft」、「solid」または「square」。C:既定は「gaussian」です。Q:照会するとstringを返します。

    -----------------------------------------

    stampSpacing (float): スタンプ間隔を指定します。既定は1.0です。

    -----------------------------------------

    strokesmooth (string): ストロークのスムージングタイプ名です。

    -----------------------------------------

    surfaceConformedBrushVertices (boolean): 影響を受ける頂点として、有効なブラシ領域の表示を有効化/無効化します。

    -----------------------------------------

    tablet (boolean): タブレットデバイスが存在する場合はtrueを、存在しない場合はfalseを返します。

    -----------------------------------------

    tangentOutline (boolean): サーフェスへのブラシ円接線の表示を有効化/無効化します。

    -----------------------------------------

    usepressure (boolean): タブレット圧力をオンまたはオフに設定します。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    worldRadius (float): ワールド空間内の半径です。

    -----------------------------------------

    Return Value:
    None: なし照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def artUserPaintCtx(accopacity: bool = False,activeListChangedProc: str = "",afterStrokeCmd: str = "",alphaclamp: str = "",alphaclamplower: float = 1.0,alphaclampupper: float = 1.0,attrSelected: str = "",beforeStrokeCmd: str = "",brushalignment: bool = False,brushfeedback: bool = False,chunkCommand: str = "",clamp: str = "",clamplower: float = 1.0,clampupper: float = 1.0,clear: bool = False,colorAlphaValue: float = 1.0,colorRGBAValue: Tuple[float, float, float, float] = tuple(1.0, 1.0, 1.0, 1.0),colorRGBValue: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),colorRamp: str = "",colorfeedback: bool = False,colorfeedbackOverride: bool = False,colorrangelower: float = 1.0,colorrangeupper: float = 1.0,dataTypeIndex: int = 1,disablelighting: bool = False,dragSlider: str = "",duringStrokeCmd: str = "",dynclonemode: bool = False,exists: bool = False,expandfilename: bool = False,exportaspectratio: float = 1.0,exportfilemode: str = "",exportfilesave: str = "",exportfilesizex: int = 1,exportfilesizey: int = 1,exportfiletype: str = "",filterNodes: bool = False,finalizeCmd: str = "",fullpaths: bool = False,getArrayAttrCommand: str = "",getSurfaceCommand: str = "",getValueCommand: str = "",history: bool = False,image1: str = "",image2: str = "",image3: str = "",importfileload: str = "",importfilemode: str = "",importreassign: bool = False,initializeCmd: str = "",interactiveUpdate: bool = False,lastRecorderCmd: str = "",lastStampName: str = "",lowerradius: float = 1.0,makeStroke: int = 1,mappressure: str = "",maxvalue: float = 1.0,minvalue: float = 1.0,name: str = "",objattrArray: str = "",opacity: float = 1.0,outline: bool = False,outwhilepaint: bool = False,paintNodeArray: str = "",paintattrselected: str = "",paintmode: str = "",paintoperationtype: str = "",pickColor: bool = False,pickValue: bool = False,playbackCursor: Tuple[float, float] = tuple(1.0, 1.0),playbackPressure: float = 1.0,preserveclonesource: bool = False,profileShapeFile: str = "",projective: bool = False,radius: float = 1.0,rampMaxColor: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),rampMinColor: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),record: bool = False,reflection: bool = False,reflectionaboutorigin: bool = False,reflectionaxis: str = "",screenRadius: float = 1.0,selectclonesource: bool = False,selectedattroper: str = "",setArrayValueCommand: str = "",setValueCommand: str = "",showactive: bool = False,stampDepth: float = 1.0,stampProfile: str = "",stampSpacing: float = 1.0,strokesmooth: str = "",surfaceConformedBrushVertices: bool = False,tablet: bool = False,tangentOutline: bool = False,toolCleanupCmd: str = "",toolOffProc: str = "",toolOnProc: str = "",toolSetupCmd: str = "",useColorRamp: bool = False,useMaxMinColor: bool = False,usepressure: bool = False,value: float = 1.0,whichTool: str = "",worldRadius: float = 1.0) -> None:
    """
    これは、アトリビュート ペイント操作のベース コンテキストである artAttrContext にフラグを設定するためのコンテキスト コマンドです。すべてのコマンドは、最後の引数としてコンテキスト名を必要とします。これは作成、編集、または照会されるコンテキストの名前を表します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    accopacity (boolean): 不透明度の塗り重ねをオンまたはオフに設定します。C:既定はfalseです(既定がtrueのスカルプトツールを除く)。Q:照会するとbooleanを返します。

    -----------------------------------------

    activeListChangedProc (string): アクティブリストが変更されたときに必ず起動されるMELコマンドを含む文字列を取ります。シーンでオブジェクトを選択または選択解除したときに、たとえば、UIを更新する必要があるなど、いくつかの状況が考えられます。照会モードでは、現在登録されているMELコマンドの名前が返されます。何も定義されていない場合は空の文字列になります。

    -----------------------------------------

    afterStrokeCmd (string): 渡された文字列はストロークの終了直前にMELコマンドとして実行されます。C:既定は、コマンドなしです。Q:照会すると現在のコマンドを返します。

    -----------------------------------------

    alphaclamp (string): ウェイト値を上限、下限にアルファクランプするかどうかを指定します。次の4つの選択肢があります。「none」-クランプをまったく実行しません。「lower」-下限にのみ合わせてクランプします。「upper」-上限にのみ合わせてクランプします。「both」-上限、下限両方に合わせてクランプします。C:既定は「none」です。Q:照会するとstringを返します。

    -----------------------------------------

    alphaclamplower (float): アルファ値の下限を指定します。C:既定は0.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    alphaclampupper (float): アルファ値の上限を指定します。C:既定は1.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    attrSelected (string): 現在選択されているアトリビュートの名前を返します。Q:照会するとstringを返します。

    -----------------------------------------

    beforeStrokeCmd (string): 渡された文字列はストロークの開始直前にMELコマンドとして実行されます。C:既定は、コマンドなしです。Q:照会すると現在のコマンドを返します。

    -----------------------------------------

    brushalignment (boolean): パスブラシの位置合わせを指定します。trueの場合はストロークパスに位置合わせ、falseの場合はアップベクトルに位置合わせます。C:既定はtrueです。Q:照会するとbooleanを返します。

    -----------------------------------------

    brushfeedback (boolean): ブラシの追加のフィードバックを描画するかどうかを指定します。C:既定はtrueです。Q:照会するとbooleanを返します。

    -----------------------------------------

    chunkCommand (string): 選択した各サーフェスでチャンクを受け取ったときに1回ずつコールされるMelスクリプト/プロシージャの名前を指定します。Q:照会するとstringを返します。

    -----------------------------------------

    clamp (string): ウェイト値に上限、下限を設定するかどうかを指定します。次の4つの選択肢があります。「none」-クランプをまったく実行しません。「lower」-下限にのみ合わせてクランプします。「upper」-上限にのみ合わせてクランプします。「both」-上限、下限両方に合わせてクランプします。C:既定は「none」です。Q:照会するとstringを返します。

    -----------------------------------------

    clamplower (float): 値の下限を指定します。C:既定は0.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    clampupper (float): 値の上限を指定します。C:既定は1.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    clear (boolean): CV/頂点のすべてを現在値に塗り潰します。

    -----------------------------------------

    colorAlphaValue (float): カラーのアルファ値。

    -----------------------------------------

    colorRGBAValue ([float, float, float, float]): カラーのRGBA値。

    -----------------------------------------

    colorRGBValue ([float, float, float]): カラーのRGB値。

    -----------------------------------------

    colorRamp (string): ユーザ定義のカラーランプを使用した、値のカラーへのマッピングを許可します。

    -----------------------------------------

    colorfeedback (boolean): カラーフィードバックの表示をオンまたはオフに設定します。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    colorfeedbackOverride (boolean): カラーフィードバックのオーバーライドをオンまたはオフに設定します。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    colorrangelower (float): カラーフィードバックモードがオンのときに黒にマップする値を指定します。C:既定は0.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    colorrangeupper (float): カラーフィードバックモードがオンのときに最大カラーにマップする値を指定します。C:既定は1.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    dataTypeIndex (int): 選択したペイント可能なアトリビュートがvectorArrayのときに、ペイントするフィールドを指定します。

    -----------------------------------------

    disablelighting (boolean): カラーフィードバックがオンの場合、このフラグによって、影響を受けるサーフェスのライティングを無効にするかどうかが決まります。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    dragSlider (string): (既定のホットキーの'b'と'm'のように)ブラシをサイズ変更したりオフセットしたりするため、現在のブラシのドラッグ状態を設定します。文字列引数は次のいずれかです。「radius」、「lowradius」、「opacity」、「value」、「depth」、「displacement」、「uvvector」、または「none」。C:既定は「none」です。

    -----------------------------------------

    duringStrokeCmd (string): マウスでドラッグする度に、渡された文字列はストローク時にMELコマンドとして実行されます。C:既定は、コマンドなしです。Q:照会すると現在のコマンドを返します。

    -----------------------------------------

    dynclonemode (boolean): ダイナミッククローンモードを有効または無効にします。

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    expandfilename (boolean): trueの場合、書き出しファイルの名前を拡張し、サーフェス名と連結します。falseの場合、名前をそのまま受け取ります。C:既定はtrueです。

    -----------------------------------------

    exportaspectratio (float): 書き出し用のアスペクト比の値です。

    -----------------------------------------

    exportfilemode (string): 書き出しチャネルを指定します。有効なエントリは以下のとおりです:「alpha」、「luminance」、「rgb」、「rgba」。C:既定は「luminance/rgb」です。Q:照会するとstringを返します。

    -----------------------------------------

    exportfilesave (string): アトリビュートマップを書き出し、指定したファイルに保存します。

    -----------------------------------------

    exportfilesizex (int): 書き出すアトリビュートマップの幅を指定します。C:既定幅は256です。Q:照会するとintegerを返します。

    -----------------------------------------

    exportfilesizey (int): 書き出すアトリビュートマップの幅を指定します。C:既定幅は256です。Q:照会するとintegerを返します。

    -----------------------------------------

    exportfiletype (string): イメージファイルフォーマットを指定します。次のいずれかを指定できます:「iff」、「tiff」、「jpeg」、「alias」、「rgb」、「fit」、「postScriptEPS」、「softimage」、「wavefrontRLA」、「wavefrontEXP」。C:既定は「tiff」です。Q:照会するとstringを返します。

    -----------------------------------------

    filterNodes (boolean): ノードフィルタを設定します。

    -----------------------------------------

    finalizeCmd (string): 各ストロークの最後にコールされるMELスクリプト/プロシージャの名前を指定します。Q:照会するとstringを返します。

    -----------------------------------------

    fullpaths (boolean): スクリプトにサーフェス名を渡すときにフルパス名を使用するかどうかを指定します。falseの場合、サーフェス名だけが渡されます。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    getArrayAttrCommand (string): ペイントするために選択されているサーフェスごとに1回ずつコールされるMELスクリプト/プロシージャの名前を指定します。このプロシージャでは、一部のディペンデンシーノードの二重配列アトリビュートを参照する名前のリストとして解釈される文字列が返されます。Q:照会するとstringを返します。

    -----------------------------------------

    getSurfaceCommand (string): アーティザンがセレクションリストを処理するたびに、セレクションリストのディペンデンシーノードごとに1回ずつコールされるMELスクリプト/プロシージャの名前を指定します。ペイントするサーフェスの名前が返されます。Q:照会するとstringを返します。

    -----------------------------------------

    getValueCommand (string): スクリプト可能なペイントツールによってサーフェス上の値が必要とされるたびにコールされるMELスクリプト/プロシージャの名前を指定します。Q:照会するとstringを返します。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    importfileload (string): 指定したファイルのアトリビュートマップをロードします。

    -----------------------------------------

    importfilemode (string): 読み込むチャネルを指定します。有効なエントリは以下のとおりです:「alpha」、「luminance」、「red」、「green」、「blue」、「rgb」C:既定は「alpha」です。Q:照会するとstringを返します。

    -----------------------------------------

    importreassign (boolean): 読み込む時に複数のアトリビュートマップを再割り当てするかどうかを指定します。再割り当てできるマップは、以前にアーティザン(Artisan)から書き出されたマップだけです。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    initializeCmd (string): 各ストロークの最初にコールされるMELスクリプト/プロシージャの名前を指定します。Q:照会するとstringを返します。

    -----------------------------------------

    interactiveUpdate (boolean): ペイントされた値をアトリビュートに転送する頻度を指定します。TRUE:「継続的」に(1つのストロークにつき何度も)転送します。FALSE:ストロークの最後(マウスボタンが放されたとき)にのみ転送します。C:既定はtrueです。Q:照会するとbooleanを返します。

    -----------------------------------------

    lastRecorderCmd (string): 最後に記録されたコマンドの値です。

    -----------------------------------------

    lastStampName (string): 最後のスタンプ名の値です。

    -----------------------------------------

    lowerradius (float): ブラシの下限サイズを設定します(タブレットにのみ適用されます)。

    -----------------------------------------

    makeStroke (uint): ストロークポイントの値です。

    -----------------------------------------

    mappressure (string): タブレットを使用するときのタブレット圧力のマッピングを設定します。次の4つの選択肢があります:「none」-圧力に影響がない、「opacity」-圧力が不透明度にマップされる、「radius」-圧力がブラシ半径を修正するようマップされる、「both」-圧力が不透明度と半径の両方を修正する。C:既定は「none」です。Q:照会するとstringを返します。

    -----------------------------------------

    maxvalue (float): 各アトリビュートの最大値を指定します。C:既定は1.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    minvalue (float): 各アトリビュートの最小値を指定します。C:既定は0.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    objattrArray (string): ペイント可能なすべてのアトリビュートの配列です。配列の各要素は、次の情報を含む文字列です:NodeType.NodeName.AttributeName.MenuType。*MenuType:メニュー項目（UI）のタイプ（レベル）です。Q:照会するとstringを返します。

    -----------------------------------------

    opacity (float): ブラシの不透明度を設定します。C:既定は1.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    outline (boolean): ブラシを描画するかどうかを指定します。C:既定はtrueです。Q:照会するとbooleanを返します。

    -----------------------------------------

    outwhilepaint (boolean): ペイント時にブラシの輪郭を描画するかどうかを指定します。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    paintNodeArray (string): ペイント可能なノードの配列です。Q:照会するとstringを返します。

    -----------------------------------------

    paintattrselected (string): 選択したペイント可能なアトリビュートの配列です。配列の各要素は、次の情報を含む文字列です。NodeType.NodeName.AttributeName。

    -----------------------------------------

    paintmode (string): ペイントモードを指定します。次の2つの選択肢があります:「screen」または「tangent」。C:既定は「screen」です。Q:照会するとstringを返します。

    -----------------------------------------

    paintoperationtype (string): ペイントツールの操作タイプを指定します。現在、次のペイントモードをサポートしています:「Paint」、「Smear」、「Blur」、「Erase」、「Clone」。既定は「Paint」です。

    -----------------------------------------

    pickColor (boolean): カラーの選択モードのオン/オフを切り替えます。

    -----------------------------------------

    pickValue (boolean): 選択の切り替え

    -----------------------------------------

    playbackCursor ([float, float]): 再生カーソルの値です。

    -----------------------------------------

    playbackPressure (float): 再生圧力の値です。

    -----------------------------------------

    preserveclonesource (boolean): クローンソースを保持するかどうかを指定します。

    -----------------------------------------

    profileShapeFile (string): スタンプシェイプのプロファイルにイメージファイルの名前を渡します。

    -----------------------------------------

    projective (boolean): 投影ペイントモードを指定します。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    radius (float): ブラシのサイズを設定します。C:既定は1.0cmです。Q:照会するとfloatを返します。

    -----------------------------------------

    rampMaxColor ([float, float, float]): 値が最大値以上の場合に、特別のカラーを使用するように定義します。

    -----------------------------------------

    rampMinColor ([float, float, float]): 値が最小値以下の場合に、特別のカラーを使用するように定義します。

    -----------------------------------------

    record (boolean): 記録をオンに切り替えます。

    -----------------------------------------

    reflection (boolean): 反射モードを指定します。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    reflectionaboutorigin (boolean): 原点を中心として反射されるようにオンに切り替えます。

    -----------------------------------------

    reflectionaxis (string): 反射軸を指定します。次の3つの選択肢があります:「x」、「y」、「z」。C:既定は「x」です。Q:照会するとstringを返します。

    -----------------------------------------

    screenRadius (float): スクリーン上のブラシ半径です。

    -----------------------------------------

    selectclonesource (boolean): クローンソースの選択の切り替えをオンにします。

    -----------------------------------------

    selectedattroper (string): ウェイト編集操作を設定します。次の4つのウェイト編集操作があります:「absolute」の場合、ウェイト値は現在のウェイトで置き換えられます。「additive」の場合、現在のウェイトにウェイト値が足されます。「scale」の場合、ウェイト値に現在のウェイトが掛けられます。「smooth」の場合、ウェイト値は現在のウェイトで割られます。C:既定は「absolute」です。Q:照会するとstringを返します。

    -----------------------------------------

    setArrayValueCommand (string): ペイントスタンプごとにコールされるMELスクリプト/プロシージャの名前を指定します。スタンプは、サーフェス上の1つまたは複数の値に影響する可能性があります。この呼び出しを行うと、スタンプのsetValueCommandに対するすべての呼び出しが、配列引数を持つ1つの呼び出しにロールアップされます。Q:照会するとstringを返します。

    -----------------------------------------

    setValueCommand (string): サーフェス上の値が変更されるたびにコールされるMELスクリプト/プロシージャの名前を指定します。Q:照会するとstringを返します。

    -----------------------------------------

    showactive (boolean): サーフェスアイソパラムの表示をオンまたはオフに設定します。C:既定はtrueです。Q:照会するとbooleanを返します。

    -----------------------------------------

    stampDepth (float): スタンプの深さです。

    -----------------------------------------

    stampProfile (string): 現在のスタンプのブラシプロファイルを設定します。現在、次のプロファイルがサポートされています。「gaussian」、「soft」、「solid」または「square」。C:既定は「gaussian」です。Q:照会するとstringを返します。

    -----------------------------------------

    stampSpacing (float): スタンプ間隔を指定します。既定は1.0です。

    -----------------------------------------

    strokesmooth (string): ストロークのスムージングタイプ名です。

    -----------------------------------------

    surfaceConformedBrushVertices (boolean): 影響を受ける頂点として、有効なブラシ領域の表示を有効化/無効化します。

    -----------------------------------------

    tablet (boolean): タブレットデバイスが存在する場合はtrueを、存在しない場合はfalseを返します。

    -----------------------------------------

    tangentOutline (boolean): サーフェスへのブラシ円接線の表示を有効化/無効化します。

    -----------------------------------------

    toolCleanupCmd (string): このツールを終了するとコールされるMELスクリプト/プロシージャの名前を指定します。Q:照会するとstringを返します。

    -----------------------------------------

    toolOffProc (string): このツールがオフになったときに必ず起動されるMELプロシージャの名前を表す文字列を取ります。たとえば、クロスペイントツールがオンになったとき、クロスは「clothPaintToolOff」を起動します。ツールが非アクティブになったときに特別な機能が必要となる場合はこのコールバックを定義します。toolOffProcを実装した場合はtoolOnProcも実装したくなるでしょう(-toolOnProcフラグを参照)。照会モードでは、現在登録されているMELコマンドの名前が返されます。何も定義されていない場合は空の文字列になります。

    -----------------------------------------

    toolOnProc (string): このツールがオンになったときに必ず起動されるMELプロシージャの名前を表す文字列を取ります。たとえば、クロスペイントツールがオンになったとき、クロスは「clothPaintToolOn」を起動します。ツールがアクティブになったときに特別な機能が必要となる場合はこのコールバックを定義します。toolOnProcを実装した場合はtoolOffProcも実装したくなるでしょう(-toolOffProcフラグを参照)。照会モードでは、現在登録されているMELコマンドの名前が返されます。何も定義されていない場合は空の文字列になります。

    -----------------------------------------

    toolSetupCmd (string): 選択した各サーフェスで最初のクリックが受け付けられたときに1回ずつコールされるMelスクリプト/プロシージャの名前を指定します。Q:照会するとstringを返します。

    -----------------------------------------

    useColorRamp (boolean): ユーザ定義のカラーランプを使用して値をカラーにマッピングするかどうかを指定します。これがオフの場合、既定のグレースケールフィードバックを使用します。

    -----------------------------------------

    useMaxMinColor (boolean): 範囲外のカラーを使用するべきかどうかを指定します。詳細については、rampMinColor、rampMaxColorフラグを参照してください。

    -----------------------------------------

    usepressure (boolean): タブレット圧力をオンまたはオフに設定します。C:既定はfalseです。Q:照会するとbooleanを返します。

    -----------------------------------------

    value (float): 各アトリビュートの値を指定します。C:既定は0.0です。Q:照会するとfloatを返します。

    -----------------------------------------

    whichTool (string): この文字列は、アーティザンコンテキストで使用されるツールの名前を定義します。たとえば、「artClothPaint」のように指定します。照会モードでは、指定したコンテキストのツール名が返されます。注:MELの動作方法の理由から、引数を取るフラグを指定するときには、必ず、-queryフラグを最後に指定してください。

    -----------------------------------------

    worldRadius (float): ワールド空間内の半径です。

    -----------------------------------------

    Return Value:
    None: string作成されたコンテキストの名前照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def boxDollyCtx(alternateContext: bool = False,exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",name: str = "",toolName: str = "") -> None:
    """
    ドリー コンテキストを作成、編集、照会するときに、このコマンドを使います。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    alternateContext (boolean): [Alt]+MMBおよび[Alt]+[Shift]+MMBでこのコンテキストを参照するように設定します。

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    toolName (string): このコマンドが参照する特定のツールの名前です。

    -----------------------------------------

    Return Value:
    None: stringコンテキストの名前照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def boxZoomCtx(exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",name: str = "",zoomScale: float = 1.0) -> None:
    """
    ボックス ズーム コンテキストを作成、編集、照会するときに、このコマンドを使います。このコンテキストがパースビュー カメラで使われる場合、ビューのフィールドと方向が変更されます。カメラが正投影の場合、正投影幅と視点が変更されます。左マウス ボタンと中マウス ボタンでビューをインタラクティブにズームできます。コントロール キーを使ってボックス ズームを使用可能にできます。左から右へのボックスではズーム インが行われ、右から左へのボックスではズーム アウトが行われます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    zoomScale (float): ズームをスケールします。

    -----------------------------------------

    Return Value:
    None: stringコンテキストの名前照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def contextInfo(c: bool = False,escapeContext: bool = False,exists: bool = False,image1: bool = False,image2: bool = False,image3: bool = False,title: bool = False) -> None:
    """
    このコマンドで、指定したコンテキストについての情報を取得できます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    c (boolean): 指定したコンテキストのクラスタイプを返します。

    -----------------------------------------

    escapeContext (boolean): 現在のツールを終了できるコマンド文字列を返します。

    -----------------------------------------

    exists (boolean): コンテキストが存在する場合はtrueを、存在しない(または内部的なもので操作できない)場合はfalseを返します。

    -----------------------------------------

    image1 (boolean): 指定したコンテキストに関連付けられたxpmの名前を返します。

    -----------------------------------------

    image2 (boolean): 指定したコンテキストに関連付けられたxpmの名前を返します。

    -----------------------------------------

    image3 (boolean): 指定したコンテキストに関連付けられたxpmの名前を返します。

    -----------------------------------------

    title (boolean): 指定したコンテキストのタイトル文字列を返します。

    -----------------------------------------

    Return Value:
    None: string要求された情報照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def ctxAbort() -> None:
    """
    このコマンドを使うと、現在のコンテキストがリセットされ、それまで実行したことが失われます。エスケープ文字コンテキストが設定されている場合、コンテキストが現在になります。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    Return Value:
    None: なし
    """
    pass

    
def ctxCompletion() -> None:
    """
    このコマンドを使うと、現在のコンテキストが実行中のことを終了し、作業しているすべてのオブジェクトが作成されます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    Return Value:
    None: なし
    """
    pass

    
def ctxEditMode(buttonDown: bool = False,buttonUp: bool = False) -> None:
    """
    このコマンドを使うと、現在のコンテキストを編集モードに切り替えることができます。 オン/オフを切り替えます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    buttonDown (boolean): 編集モードは、ホットキーを押すイベントによって起動されます。

    -----------------------------------------

    buttonUp (boolean): 編集モードは、ホットキーを放すイベントによって起動されます。

    -----------------------------------------

    Return Value:
    None: なし
    """
    pass

    
def ctxTraverse(down: bool = False,left: bool = False,right: bool = False,up: bool = False) -> None:
    """
    このコマンドを使うと、現在のコンテキストを移動できます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    down (boolean): 現在のコンテキストの定義に従って「down」に移動します。

    -----------------------------------------

    left (boolean): 現在のコンテキストの定義に従って「left」に移動します。

    -----------------------------------------

    right (boolean): 現在のコンテキストの定義に従って「right」に移動します。

    -----------------------------------------

    up (boolean): 現在のコンテキストの定義に従って「up」に移動します。

    -----------------------------------------

    Return Value:
    None: なし
    """
    pass

    
def currentCtx() -> None:
    """
    このコマンドを使うと、現在選択されているツール コンテキストが返されます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    Return Value:
    None: string: 現在選択されているツール コンテキストの名前。
    """
    pass

    
def currentTimeCtx(exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",name: str = "") -> None:
    """
    このコマンドを使うと、グラフ エディタ(Graph Editor)内の現在のタイムの変更に使用するコンテキストを作成できます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    Return Value:
    None: stringコンテキスト名照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def curveAddPtCtx(exists: bool = False,image1: str = "",image2: str = "",image3: str = "") -> None:
    """
    curveAddPtCtx コマンドを使用すると、新しいカーブの追加ポイント コンテキストを作成できます。つまり、既存のカーブにコントロール頂点(CV)やエディット ポイントを追加します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    Return Value:
    None: string(新しいコンテキストの名前)照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def curveCVCtx(bezier: bool = False,degree: int = 1,exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",multEndKnots: bool = False,name: str = "",preserveShape: bool = False,rational: bool = False,refit: bool = False,symmetry: bool = False,uniform: bool = False) -> None:
    """
    curveCVCtx コマンドを使うと、コントロール頂点(CV)を配置してカーブを作成する新しいコンテキストを作成できます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    bezier (boolean): 

    -----------------------------------------

    degree (uint): Curvedegree

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    multEndKnots (boolean): 多重エンドノットが作成されるかどうかを指定します。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    preserveShape (boolean): 操作がシェイプを保持するようにするには、このフラグを設定します。

    -----------------------------------------

    rational (boolean): カーブが非有理である必要がありますか?

    -----------------------------------------

    refit (boolean): カーブに再フィットさせるには、このフラグを設定します。

    -----------------------------------------

    symmetry (boolean): 対称を使用するかどうかを指定します。

    -----------------------------------------

    uniform (boolean): カーブに均一パラメータ配置を使用する必要がありますか?

    -----------------------------------------

    Return Value:
    None: string(新しいコンテキストの名前)照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def curveEditorCtx(direction: int = 1,exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",name: str = "",relativeTangentSize: float = 1.0,title: str = "") -> None:
    """
    curveEditorCtx コマンドを使うと、NURBS カーブや NURBS サーフェスの編集に使用する新しい NURBS エディタ コンテキストが作成されます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    direction (int): 接線コントロールの現在の方向を照会します。カーブの場合は常に0です。サーフェスの場合、法線方向は0、U方向は1、V方向は2です。

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    relativeTangentSize (float): 接線マニピュレータハンドルの相対的なサイズです。サーフェスのシェイプをそのまま残すにもかかわらず、サーフェスのパラメータ設定コントロールとして接線サイズの調整に役立ちます。既定は4です。

    -----------------------------------------

    title (string): ツールのタイトルです。

    -----------------------------------------

    Return Value:
    None: string(新しいコンテキストの名前)照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def curveEPCtx(bezier: bool = False,degree: int = 1,exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",name: str = "",preserveShape: bool = False,preserveShapeFraction: float = 1.0,refit: bool = False,uniform: bool = False) -> None:
    """
    curveEPCtx コマンドを使用すると、エディット ポイントを配置してカーブを作成する新しいコンテキストを作成できます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    bezier (boolean): ベジェカーブを使用する

    -----------------------------------------

    degree (uint): Curvedegree

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    preserveShape (boolean): 操作がシェイプを保持するようにするには、このフラグを設定します。

    -----------------------------------------

    preserveShapeFraction (float): シェイプを保持するときに使用される分数値です。

    -----------------------------------------

    refit (boolean): カーブに再フィットさせるには、このフラグを設定します。

    -----------------------------------------

    uniform (boolean): カーブに均一パラメータ配置を使用する必要がありますか?

    -----------------------------------------

    Return Value:
    None: string(新しいコンテキストの名前)照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def curveMoveEPCtx(exists: bool = False,image1: str = "",image2: str = "",image3: str = "") -> None:
    """
    curveMoveEPCtx コマンドを使うと、マニピュレータを使用してカーブのエディット ポイントを移動する新規のコンテキストを作成できます。エディット ポイントは一度に 1 つしか移動できません。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    Return Value:
    None: string(新しいコンテキストの名前)照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def curveSketchCtx(degree: int = 1,exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",name: str = "") -> None:
    """
    curveSketchCtx コマンドは新規のカーブ スケッチ コンテキストを作成し、「ペンシル コンテキスト」としても知られます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    degree (uint): 有効な値は1または3です。

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    Return Value:
    None: string(新しいカーブ スケッチ コンテキストの名前)照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def directKeyCtx(exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",name: str = "",option: str = "",selectedOnly: bool = False) -> None:
    """
    グラフ エディタ(Graph Editor)内でキーフレームを直接操作するために使用できるコンテキストが作成されます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    option (string): 有効な値は、「move」、「insert」、「over」、「segmentOver」です。キーに「move」を設定しても、そのキーは前後でほかのキーを越えては移動しません。キーを「insert」すると、(-timeChangeの値に応じて)その前後にあるキーがすべて、同等の量、移動します。キーを「over」すると、このキーは(他のキーがその場所に既に存在しない限り)いつでも移動することができます。複数のキーのセットを「segmentOver」すると(このオプションは、複数のキーを移動する場合のみ、明らかなエフェクトを生み出します)、タイムレンジを指定しない限り、(時間的に)最初のキーと、最後のキーにより、セグメントが定義されます。その後、このセグメントは他のキーの上に移動できるようになり、このセグメントのための余地を作るために、キーは移動します。

    -----------------------------------------

    selectedOnly (boolean): 選択済みカーブ/キーのみ移動できるようにするか、またはすべて移動できるようにするかを制御します。

    -----------------------------------------

    Return Value:
    None: stringコンテキスト名照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def distanceDimContext(exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",name: str = "") -> None:
    """
    distanceDimCtx ツールの登録に使用します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    Return Value:
    None: string- 作成されたコンテキストの名前照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def dollyCtx(alternateContext: bool = False,boxDollyType: str = "",centerOfInterestDolly: bool = False,dollyTowardsCenter: bool = False,exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",localDolly: bool = False,name: str = "",orthoZoom: bool = False,scale: float = 1.0,toolName: str = "") -> None:
    """
    ドリー コンテキストを作成、編集、照会するときに、このコマンドを使います。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    alternateContext (boolean): [Alt]+MMBおよび[Alt]+[Shift]+MMBでこのコンテキストを参照するように設定します。

    -----------------------------------------

    boxDollyType (string): ボックスドリー後にカメラの視野の中心を設定する動作が設定されます。サーフェスモードでは、マーキーの中心でサーフェスポイントに視野の中心がスナップされます。bboxモードでは、カメラに最も近いバウンディングボックスが使用されます。バウンディングボックスモードでは、セレクションマスクが使用されて、計算に含めるオブジェクトが判断されます。

    -----------------------------------------

    centerOfInterestDolly (boolean): カメラの視野の中心の平行移動が設定されます。視野の中心は、マウスを左にドラッグするとカメラの方に平行移動し、マウスを右にドラッグするとカメラから離れて平行移動します。視野の中心は、マウスの左ボタンを使用して選択することでオブジェクトにスナップできます。既定のセレクションマスクが使用されます。

    -----------------------------------------

    dollyTowardsCenter (boolean): tureの場合に、ビューの中央に向かってドリーされます。falseの場合は、ビューのユーザがクリックしたポイントに向かってドリーされます。

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    localDolly (boolean): カメラの視野の中心を基準にしてドリーされます。カメラは視野の中心を通過しません。ローカルドリーは、パースビューカメラのみに適用されます。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    orthoZoom (boolean): 正投影ビューをズームします(trueの場合)。それ以外は正投影カメラをドリーします。既定はtrueです。

    -----------------------------------------

    scale (float): カメラをドリーする感度。

    -----------------------------------------

    toolName (string): このコマンドが参照する特定のツールの名前です。

    -----------------------------------------

    Return Value:
    None: stringコンテキストの名前照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def dragAttrContext(connectTo: str = "",exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",name: str = "",reset: bool = False) -> None:
    """
    dragAttrContext によって、ビューポート内でバーチャル スライダを使用してオブジェクトのアトリビュートを操作できます。バーチャル スライダは、ビューポート内で中マウス ボタンを押しながらドラッグして使用します。アトリビュートが変更されるスピードのコントロールは、スピードを下げるには Ctrl キーを押したままで、スピードを上げるには Shift キーを押したままでできます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    connectTo (name): コンテキストを接続するアトリビュートを指定します。これは多目的フラグですが、使用するすべてのアトリビュートは1つのオブジェクトに属している必要があります。

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    reset (boolean): コンテキストを接続するアトリビュートのリストをリセットします。

    -----------------------------------------

    Return Value:
    None: string作成されたコンテキストの名前照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def draggerContext(anchorPoint: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),button: int = 1,currentStep: int = 1,cursor: str = "",dragCommand: str = "",dragPoint: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),drawString: str = "",exists: bool = False,finalize: str = "",helpString: str = "",history: bool = False,holdCommand: str = "",image1: str = "",image2: str = "",image3: str = "",initialize: str = "",modifier: str = "",name: str = "",plane: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),prePressCommand: str = "",pressCommand: str = "",projection: str = "",releaseCommand: str = "",snapping: bool = False,space: str = "",stepsCount: int = 1,undoMode: str = "") -> None:
    """
    draggerContext を使用すると、マウスかマウスと同等のドラッグ デバイスの動作を MEL でプログラミングできます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    anchorPoint ([float, float, float]): ドラッガが最初に押された場所を表すアンカーポイント(double配列)。

    -----------------------------------------

    button (int): 現在のマウスボタン(1、2、3)を返します。

    -----------------------------------------

    currentStep (int): ドラッガコンテキストの現在のステップ(プレス-ドラッグ-リリースシーケンス)。最初のプレスイベントの実行前に照会すると、0が返されます。

    -----------------------------------------

    cursor (string): コンテキストがアクティブな間に表示されるカーソル。有効な値は、「default」、「hand」、「crossHair」、「dolly」、「track」、「tumble」です。

    -----------------------------------------

    dragCommand (script): マウスドラッガをドラッグした場合にコールされるコマンド。

    -----------------------------------------

    dragPoint ([float, float, float]): ドラッグ中のドラッガの現在位置を表すドラッグポイント(double配列)。

    -----------------------------------------

    drawString (string): ポインタの現在位置で描画される文字列。

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    finalize (script): ツールを終了するとコールされるコマンドです。

    -----------------------------------------

    helpString (string): コンテキストのヘルプ文字列

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    holdCommand (script): マウスドラッガを押したままの状態にした場合にコールされるコマンド。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    initialize (script): ツールを入力するとコールされるコマンドです。

    -----------------------------------------

    modifier (string): 現在のモディファイアタイプ、「ctrl」、「alt」、または「none」です。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    plane ([float, float, float]): 投影プレーンの法線を指定します(詳細については、-projectionフラグを参照)。

    -----------------------------------------

    prePressCommand (script): マウスドラッガを押した場合にコールされるコマンドです。以前は、コンテキストの初期化に使用できるように、pressCommandという名前になっていました。

    -----------------------------------------

    pressCommand (script): マウスドラッガを押した場合にコールされるコマンドです。

    -----------------------------------------

    projection (string): ドラッグポイントの現在の投影が設定されます。有効なタイプは以下のとおりです。viewPlane(ビュープレーンに投影)objectViewPlane((ビュープレーンと平行な)オブジェクトプレーンに投影)objectPlane(オブジェクトの位置と法線(既定)0,1,0で定義した指定プレーンに投影)plane(原点と法線(既定)0,1,0で定義した指定プレーンに投影)sketchPlane(スケッチプレーンに投影)xAxis(X軸上の最近接ポイントに投影)yAxis(Y軸上の最近接ポイントに投影)zAxis(Z軸上の最近接ポイントに投影)boundingSphere(オブジェクト球の境界上の最近接ポイントに投影)boundingBox(オブジェクトバウンディングボックス上の最近接ポイントに投影)

    -----------------------------------------

    releaseCommand (script): マウスドラッガを放した場合にコールされるコマンド。

    -----------------------------------------

    snapping (boolean): ドラッガコンテキストのスナップを有効化/無効化します。

    -----------------------------------------

    space (string): 座標が報告される現在の空間が設定されます。タイプは以下のとおりです。worldワールド空間(グローバル)objectオブジェクト空間(ローカル)screenスクリーンのスペース

    -----------------------------------------

    stepsCount (int): ドラッガコンテキストのステップ数(プレス-ドラッグ-リリースシーケンス)。undoModeフラグと組み合わせると、複数のステップが単一の元に戻すアクションとして記録される可能性があります。

    -----------------------------------------

    undoMode (string): コンテキスト動作の元に戻す待ち行列モード。許容可能な値は、「all」-既定の動作で、ドラッガコンテキスト動作時に発生するすべてのアクションが個々の元に戻すチャンクとして記録されます。「step」-それぞれのプレスとリリースの間に行われたすべてのアクションが、単一の元に戻すチャンクに結合されます。「sequence」-最初のプレスと最後のリリースの間に行われたすべてのアクションが、単一の元に戻すチャンクに結合されます。これは、単一ステップドラッガコンテキストの「ステップ」とまったく同じように機能します。

    -----------------------------------------

    Return Value:
    None: stringコンテキストの名前照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def graphDollyCtx(exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",name: str = "") -> None:
    """
    このコマンドを使用して、グラフ エディタ(Graph Editor)のドリー コンテクストを作成することができます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    Return Value:
    None: stringコンテキスト名照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def graphSelectContext(exists: bool = False,image1: str = "",image2: str = "",image3: str = "") -> None:
    """
    このコマンドを使用して、ハイパーグラフ エディタ(Hypergraph Editor)の選択コンテクストを作成します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    Return Value:
    None: stringコマンドの結果照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def ikHandleCtx(autoPriorityH: bool = False,createCurve: bool = False,createRootAxis: bool = False,exists: bool = False,forceSolverH: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",name: str = "",numSpans: int = 1,parentCurve: bool = False,poWeightH: float = 1.0,priorityH: int = 1,rootOnCurve: bool = False,rootTwistMode: bool = False,simplifyCurve: bool = False,snapCurve: bool = False,snapHandleH: bool = False,solverTypeH: str = "",stickyH: str = "",twistType: str = "",weightH: float = 1.0) -> None:
    """
    ikHandle コンテキスト コマンド(ikHandleCtx)は、ikHandle ツールのパラメータを更新するコマンドです。ツールのオプションは、ユーザが指定したフラグに設定されます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    autoPriorityH (boolean): このハンドルの優先順位が自動的に割り当てられるように指定します。C:既定はオフです。Q:照会するとintを返します。

    -----------------------------------------

    createCurve (boolean): ikSplineHandleに対してカーブが自動的に作成されるかどうかを指定します。ikHandleCtxでは、このフラグは無視されます。C:既定はオンです。Q:照会するとintを返します。

    -----------------------------------------

    createRootAxis (boolean): ikSplineHandleに作用されるジョイントの上に、ルートトランスフォームを自動的に作成する場合に指定します。このオプションは、モーションパスでルートが単独で反転するのを防止するために使用されます。ikHandleCtxでは、このフラグは無視されます。C:既定はオフです。Q:照会するとintを返します。

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    forceSolverH (boolean): ikSolverがikHandleに対して有効である場合に指定します。C:既定はオンです。Q:照会するとintを返します。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    numSpans (int): 自動的に生成されたikSplineHandleのカーブにあるスパンの数を指定します。ikHandleCtxでは、このフラグは無視されます。C:既定は1です。Q:照会するとintを返します。

    -----------------------------------------

    parentCurve (boolean): ikSplineHandleにより影響を受ける最初のジョイントの親が、自動的にカーブの親となるかどうかを指定します。ikHandleCtxでは、このフラグは無視されます。C:既定はオンです。Q:照会するとintを返します。

    -----------------------------------------

    poWeightH (float): ikHandleの位置/方向のウェイトを指定します。C:既定は1です。Q:照会するとfloatを返します。

    -----------------------------------------

    priorityH (int): ikHandleの優先順位を指定します。C:既定は1です。Q:照会するとintを返します。

    -----------------------------------------

    rootOnCurve (boolean): ルートをikSplineHandleのカーブにロックするかどうかを指定します。ikHandleCtxでは、このフラグは無視されます。C:既定はオンです。Q:照会するとintを返します。

    -----------------------------------------

    rootTwistMode (boolean): スタートジョイントのツイストを許可するかどうかを指定します。許可しない場合、必要なツイストは残りのジョイントに分散されます。この設定は全種類のツイストに適用されます。ikHandleCtxでは、このフラグは無視されます。C:既定はオフです。Q:照会するとintを返します。

    -----------------------------------------

    simplifyCurve (boolean): ikSplineHandleカーブを単純化するかどうかを指定します。ikHandleCtxでは、このフラグは無視されます。C:既定はオンです。Q:照会するとintを返します。

    -----------------------------------------

    snapCurve (boolean): ikSplineHandleにより影響を受ける最初のジョイントに、カーブが自動的にスナップされるかどうかを指定します。ikHandleCtxでは、このフラグは無視されます。C:既定はオフです。Q:照会するとintを返します。

    -----------------------------------------

    snapHandleH (boolean): ikHandleのスナップがオンである場合に指定します。C:既定はオンです。Q:照会するとintを返します。

    -----------------------------------------

    solverTypeH (string): 使用中のikSolverをリスト表示します。ikSplineSolverが選択されていない可能性があります。ikSplineSolverを使用するには、ikSplineHandleCtxコマンドを使用します。C:既定のソルバは、ユーザプリファレンスで既定に設定されているソルバです。Q:照会するとstringを返します。

    -----------------------------------------

    stickyH (string): ikHandleがスティッキーであるかどうかを指定します。有効な文字列は「sticky」と「off」です。C:既定はオフです。Q:照会するとstringを返します。

    -----------------------------------------

    twistType (string): ikSplineHandleが使用する補間のタイプを指定します。ikHandleCtxでは、このフラグは無視されます。補間オプションには、「linear」、「easeIn」、「easeOut」、および「easeInOut」があります。C:既定は「linear」です。Q:照会するとstringを返します。

    -----------------------------------------

    weightH (float): ikHandleのウェイトを指定します。C:既定は1です。Q:照会するとfloatを返します。

    -----------------------------------------

    Return Value:
    None: stringコンテキスト名照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def ikSplineHandleCtx(autoPriorityH: bool = False,createCurve: bool = False,createRootAxis: bool = False,exists: bool = False,forceSolverH: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",name: str = "",numSpans: int = 1,parentCurve: bool = False,poWeightH: float = 1.0,priorityH: int = 1,rootOnCurve: bool = False,rootTwistMode: bool = False,simplifyCurve: bool = False,snapCurve: bool = False,snapHandleH: bool = False,solverTypeH: str = "",stickyH: str = "",twistType: str = "",weightH: float = 1.0) -> None:
    """
    ikSplineHandle コンテキスト コマンド(ikSplineHandleCtx)は、ikSplineHandle ツールのパラメータを更新するコマンドです。ツールのオプションは、指定したフラグに設定されます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    autoPriorityH (boolean): このハンドルの優先順位が自動的に割り当てられるように指定します。C:既定はオフです。Q:照会するとintを返します。

    -----------------------------------------

    createCurve (boolean): ikSplineHandleに対してカーブが自動的に作成されるかどうかを指定します。C:既定はオンです。Q:照会するとintを返します。

    -----------------------------------------

    createRootAxis (boolean): ikSplineHandleに作用されるジョイントの上に、ルートトランスフォームを自動的に作成する場合に指定します。このオプションは、モーションパスでルートが単独で反転するのを防止するために使用されます。C:既定はオフです。Q:照会するとintを返します。

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    forceSolverH (boolean): ikSolverがikHandleに対して有効である場合に指定します。C:既定はオンです。Q:照会するとintを返します。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    numSpans (int): 自動的に生成されたikSplineHandleのカーブにあるスパンの数を指定します。C:既定は1です。Q:照会するとintを返します。

    -----------------------------------------

    parentCurve (boolean): ikSplineHandleにより影響を受ける最初のジョイントの親が、自動的にカーブの親となるかどうかを指定します。C:既定はオンです。Q:照会するとintを返します。

    -----------------------------------------

    poWeightH (float): ikHandleの位置/方向のウェイトを指定します。C:既定は1です。Q:照会するとfloatを返します。

    -----------------------------------------

    priorityH (int): ikHandleの優先順位を指定します。C:既定は1です。Q:照会するとintを返します。

    -----------------------------------------

    rootOnCurve (boolean): ルートをikSplineHandleのカーブにロックするかどうかを指定します。C:既定はオンです。Q:照会するとintを返します。

    -----------------------------------------

    rootTwistMode (boolean): スタートジョイントのツイストを許可するかどうかを指定します。許可しない場合、必要なツイストは残りのジョイントに分散されます。この設定は全種類のツイストに適用されます。C:既定はオフです。Q:照会するとintを返します。

    -----------------------------------------

    simplifyCurve (boolean): ikSplineHandleカーブを単純化するかどうかを指定します。C:既定はオンです。Q:照会するとintを返します。

    -----------------------------------------

    snapCurve (boolean): ikSplineHandleにより影響を受ける最初のジョイントに、カーブが自動的にスナップされるかどうかを指定します。C:既定はオフです。Q:照会するとintを返します。

    -----------------------------------------

    snapHandleH (boolean): ikHandleのスナップがオンである場合に指定します。ikSplineSolverではこのフラグは無視されます。C:既定はオンです。Q:照会するとintを返します。

    -----------------------------------------

    solverTypeH (string): 使用中のikSolverをリスト表示します。ikSplineContextのソルバはikSplineSolverだけなので、このフラグは無視されます。C:既定のソルバはikSplineSolverです。Q:照会するとstringを返します。

    -----------------------------------------

    stickyH (string): ikHandleがスティッキーであるかどうかを指定します。有効な文字列は「sticky」と「off」です。ikSplineSolverではこのフラグは無視されます。C:既定はオフです。Q:照会するとstringを返します。

    -----------------------------------------

    twistType (string): ikSplineHandleが使用する補間のタイプを指定します。補間オプションには、「linear」、「easeIn」、「easeOut」、および「easeInOut」があります。C:既定は「linear」です。Q:照会するとstringを返します。

    -----------------------------------------

    weightH (float): ikHandleのウェイトを指定します。ikSplineHandleCtxでは、このフラグは無視されます。C:既定は1です。Q:照会するとfloatを返します。

    -----------------------------------------

    Return Value:
    None: stringコンテキストの名前照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def insertJointCtx(exists: bool = False,image1: str = "",image2: str = "",image3: str = "") -> None:
    """
    このコマンドでは、ジョイントの挿入コンテキストが作成されます。ジョイントの挿入ツールを使用して、既存のジョイントのチェーンにジョイントを挿入することができます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    Return Value:
    None: stringコンテキストの名前照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def insertKeyCtx(breakdown: bool = False,exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",name: str = "") -> None:
    """
    このコマンドでは、グラフ エディタにキーを挿入するために使用されるコンテキストが作成されます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    breakdown (boolean): ブレイクダウンキーを作成するかどうかを指定します。

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    Return Value:
    None: stringコンテキスト名照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def jointCtx(autoJointOrient: str = "",autoPriorityH: bool = False,createIKHandle: bool = False,degreeOfFreedomJ: str = "",exists: bool = False,forceSolverH: bool = False,image1: str = "",image2: str = "",image3: str = "",jointAutoLimits: bool = False,jointOrientationJ: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),largeBoneLength: float = 1.0,largeBoneRadius: float = 1.0,poWeightH: float = 1.0,priorityH: int = 1,scaleCompensateJ: bool = False,scaleJ: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),scaleOrientationJ: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),secondaryAxisOrient: str = "",smallBoneLength: float = 1.0,smallBoneRadius: float = 1.0,snapHandleH: bool = False,solverTypeH: str = "",stickyH: str = "",symmetry: bool = False,symmetryAxis: str = "",variableBoneSize: bool = False,weightH: float = 1.0) -> None:
    """
    ジョイントのコンテキスト コマンド(jointCtx)は、ジョイントツールのパラメータを更新するコマンドです。ツールのオプションは、ユーザが指定したフラグで設定されます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    autoJointOrient (string): ジョイントの方向を指定します。軸の文字列の有効な組み合わせは、「none」、「xyz」、「yzx」、「zxy」、「xzy」、「yxz」、「zyx」の7つです。最初の文字により、ボーンと位置合わせる軸が決まります。C:既定は「xyz」です。Q:照会するとstringを返します。

    -----------------------------------------

    autoPriorityH (boolean): ikHandleの優先順位を自動的に割り当てる場合に指定します。C:既定はオフです。Q:照会するとintを返します。

    -----------------------------------------

    createIKHandle (boolean): ツールが完了すると、ジョイントツールを有効にしてikHandleを作成します。C:既定はオフです。Q:照会するとintを返します。

    -----------------------------------------

    degreeOfFreedomJ (string): ツールで作成したすべてのジョイントの自由度を指定します。自由軸の有効な文字列の選択は、「x」、「y」、「z」、「xy」、「xz」、「yz」、「xyz」、および「none」の8つです。C:既定は「xyz」です。Q:照会するとstringを返します。

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    forceSolverH (boolean): ikHanldeのikSolverを有効にする場合に指定します。C:既定はオンです。Q:照会するとintを返します。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    jointAutoLimits (boolean): 作成したジョイントの種類に基づいて、ジョイント制限を自動的に計算します。C:既定はオフです。Q:照会するとintを返します。

    -----------------------------------------

    jointOrientationJ ([angle, angle, angle]): ツールで作成したジョイントの方向を設定します。autoJointOrientがオンの場合、これらの値は無視されます。C:既定は000です。Q:照会すると3つのfloatの配列を返します。

    -----------------------------------------

    largeBoneLength (float): これより長いボーンにはlargeBoneRadiusを割り当てます。

    -----------------------------------------

    largeBoneRadius (float): largeBoneLengthより長いボーンの半径を指定します。

    -----------------------------------------

    poWeightH (float): ikHandleの位置/方向のウェイトを指定します。C:既定は1です。Q:照会するとfloatを返します。

    -----------------------------------------

    priorityH (int): ikHandleの優先順位を指定します。C:既定はオンです。Q:照会するとintを返します。

    -----------------------------------------

    scaleCompensateJ (boolean): スケールの補正を有効にする場合に指定します。C:既定はオンです。Q:照会するとintを返します。

    -----------------------------------------

    scaleJ ([float, float, float]): ツールで作成したジョイントのスケールを設定します。C:既定は111です。Q:照会すると3つのfloatの配列を返します。

    -----------------------------------------

    scaleOrientationJ ([angle, angle, angle]): スケール方向の現在値を設定します。autoJointOrientがオンの場合、これらの値は無視されます。C:既定は000です。Q:照会すると3つのfloatの配列を返します。

    -----------------------------------------

    secondaryAxisOrient (string): 2番目の回転軸の方向を指定します。有効な文字列の選択は、「xup」、「xdown」、「yup」、「ydown」、「zup」、「zdown」、「none」の7つです。

    -----------------------------------------

    smallBoneLength (float): これより短いボーンにはsmallBoneRadiusを割り当てます。

    -----------------------------------------

    smallBoneRadius (float): smallBoneLengthより短いボーンの半径を指定します。

    -----------------------------------------

    snapHandleH (boolean): ikHandleのスナップを有効にする場合に指定します。C:既定はオンです。Q:照会するとintを返します。

    -----------------------------------------

    solverTypeH (string): ikHandleと一緒に使用するソルバの名前を設定します。C:既定では、ソルバはユーザプリファレンスの既定に設定されています。Q:照会するとstringを返します。

    -----------------------------------------

    stickyH (string): ikHandleがスティッキーであるかどうかを指定します。「sticky」が渡されると、ikHandleは粘着性のあるもの(スティッキー)になります。「off」を指定すると、ikHandleの粘着性はオフになります。C:既定はオフです。Q:照会するとstringを返します。

    -----------------------------------------

    symmetry (boolean): シンメトリがオンの場合、シンメトリジョイントが自動的に作成されます。C:既定はオフです。Q:照会するとintを返します。

    -----------------------------------------

    symmetryAxis (string): シンメトリジョイントが自動的に作成されます。x、y、z軸を使用して、またはそれらを組み合わせてシンメトリが実行されます。C:既定はxです。Q:照会するとstringを返します。

    -----------------------------------------

    variableBoneSize (boolean): 変更可能なボーンの長さや半径設定を使用するかどうかを指定します。

    -----------------------------------------

    weightH (float): ikHandleのウェイトを指定します。ウェイトは、シーンにある他のikHandleに対して相対的です。C:既定は1です。Q:照会するとfloatを返します。

    -----------------------------------------

    Return Value:
    None: stringコンテキストの名前照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def keyframeRegionCurrentTimeCtx(exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",name: str = "") -> None:
    """
    このコマンドは、ドープシート エディタのキーフレーム領域内で現在のタイムの変更に使用できるコンテキストを作成します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    Return Value:
    None: stringコンテキスト名照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def keyframeRegionDirectKeyCtx(exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",name: str = "",option: str = "") -> None:
    """
    このコマンドは、ドープシート エディタのキーフレーム領域内でキーフレームの直接操作に使用できるコンテキストを作成します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    option (string): 有効な値は、「move」、「insert」、「over」、「segmentOver」です。キーに「move」を設定しても、そのキーは前後でほかのキーを越えては移動しません。キーを「insert」すると、(-timeChangeの値に応じて)その前後にあるキーがすべて、同等の量、移動します。キーを「over」すると、このキーは(他のキーがその場所に既に存在しない限り)いつでも移動することができます。複数のキーのセットを「segmentOver」すると(このオプションは、複数のキーを移動する場合のみ、明らかなエフェクトを生み出します)、タイムレンジを指定しない限り、(時間的に)最初のキーと、最後のキーにより、セグメントが定義されます。その後、このセグメントは他のキーの上に移動できるようになり、このセグメントのための余地を作るために、キーは移動します。

    -----------------------------------------

    Return Value:
    None: stringコンテキスト名照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def keyframeRegionDollyCtx(exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",name: str = "") -> None:
    """
    このコマンドを使用して、ドープシート エディタのドリー コンテキストを作成できます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    Return Value:
    None: stringコンテキスト名照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def keyframeRegionInsertKeyCtx(breakdown: bool = False,exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",name: str = "") -> None:
    """
    このコマンドは、ドープシート エディタのキーフレーム領域内でキーの挿入に使用できるコンテキストを作成します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    breakdown (boolean): ブレイクダウンキーを作成するかどうかを指定します。

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    Return Value:
    None: stringコンテキスト名照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def keyframeRegionMoveKeyCtx(exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",name: str = "",option: str = "") -> None:
    """
    このコマンドは、ドープシート エディタのキーフレーム領域内でキーフレームの移動に使用できるコンテキストを作成します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    option (string): 有効な値は、「move」、「insert」、「over」、「segmentOver」です。キーフレームの使用する-optionを指定します。キーに「move」を設定しても、そのキーは前後でほかのキーを越えては移動しません。キーを「insert」すると、(-timeChangeの値に応じて)その前後にあるキーがすべて、同等の量、移動します。キーを「over」すると、このキーは(他のキーがその場所に既に存在しない限り)いつでも移動することができます。複数のキーのセットを「segmentOver」すると(このオプションは、複数のキーを移動する場合のみ、明らかなエフェクトを生み出します)、タイムレンジを指定しない限り、(時間的に)最初のキーと、最後のキーにより、セグメントが定義されます。その後、このセグメントは他のキーの上に移動できるようになり、このセグメントのための余地を作るために、キーは移動します。

    -----------------------------------------

    Return Value:
    None: stringコンテキスト名照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def keyframeRegionScaleKeyCtx(exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",name: str = "",scaleSpecifiedKeys: bool = False,type: str = "") -> None:
    """
    このコマンドは、ドープシート エディタのキーフレーム領域内でキーフレームのスケールに使用できるコンテキストを作成します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    scaleSpecifiedKeys (boolean): 指定したキーだけを調整する必要があるかどうかを確認します。falseの場合、選択したキー以外のキーがスケール時に調整されます。既定はtrueです。

    -----------------------------------------

    type (string): rectまたはmanipで、使用するスケールマニピュレータのタイプを指定します。

    -----------------------------------------

    Return Value:
    None: stringコンテキスト名照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def keyframeRegionSelectKeyCtx(exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",name: str = "") -> None:
    """
    このコマンドは、ドープシート エディタのキーフレーム領域内でキーフレームの選択に使用できるコンテキストを作成します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    Return Value:
    None: stringコンテキスト名照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def keyframeRegionSetKeyCtx(breakdown: bool = False,exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",name: str = "") -> None:
    """
    このコマンドは、ドープシート エディタのキーフレーム領域内でキーの設定に使用できるコンテキストを作成します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    breakdown (boolean): ブレイクダウンキーを作成するかどうかを指定します。

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    Return Value:
    None: stringコンテキスト名照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def lassoContext(drawClosed: bool = False,exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",name: str = "") -> None:
    """
    「投げ縄」で選択を実行するコンテキストが作成されます。「selectContext」の「マーキー スタイル」選択が適切でない、不規則な選択領域に使用します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    drawClosed (boolean): 投げ縄の閉じた表示のオン/オフを切り替えます。

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    Return Value:
    None: string作成されたコンテキストの名前照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def latticeDeformKeyCtx(envelope: float = 1.0,exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",latticeColumns: int = 1,latticeRows: int = 1,name: str = "",scaleLatticePts: bool = False) -> None:
    """
    このコマンドは、ラティス マニピュレータでキーフレームを変形するために使用できるコンテキストを作成します。このコンテキストは、グラフ エディタ(Graph Editor)のみで動作します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    envelope (float): ラティスの影響を指定します。

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    latticeColumns (uint): ラティスに含まれる列のポイント数を指定します。

    -----------------------------------------

    latticeRows (uint): ラティスに含まれる行の数を指定します。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    scaleLatticePts (boolean): 選択したラティスポイントが、そのポイントの周囲でスケールされるかどうかを指定します。この値がfalseの場合、既定の動作は「move」です。

    -----------------------------------------

    Return Value:
    None: stringコンテキスト名照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def manipMoveContext(activeHandle: int = 1,activeHandleNormal: int = 1,alignAlong: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),constrainAlongNormal: bool = False,currentActiveHandle: int = 1,editPivotMode: bool = False,editPivotPosition: bool = False,exists: bool = False,image1: str = "",image2: str = "",image3: str = "",interactiveUpdate: bool = False,lastMode: int = 1,manipVisible: bool = False,mode: int = 1,orientAxes: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),orientJoint: str = "",orientJointEnabled: bool = False,orientObject: str = "",orientTowards: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),pinPivot: bool = False,pivotOriHandle: bool = False,position: bool = False,postCommand: str = "",postDragCommand: Tuple[str, str] = tuple("", ""),preCommand: str = "",preDragCommand: Tuple[str, str] = tuple("", ""),preserveChildPosition: bool = False,preserveUV: bool = False,reflection: bool = False,reflectionAbout: int = 1,reflectionAxis: int = 1,reflectionTolerance: float = 1.0,secondaryAxisOrient: str = "",snap: bool = False,snapComponentsRelative: bool = False,snapLiveFaceCenter: bool = False,snapLivePoint: bool = False,snapPivotOri: bool = False,snapPivotPos: bool = False,snapRelative: bool = False,snapValue: float = 1.0,translate: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),tweakMode: bool = False,xformConstraint: str = "") -> None:
    """
    移動マニピュレータ コンテキストの作成、編集、照会を実行するときに使用します。フラグ -s、-sv、-sr、-scr、-slp、-sl で、すべての移動マニピュレータ コンテキストのグローバルな動作を制御します。コンテキストを独自に変更することはできません。上記のフラグを使ってコンテキストの動作を変更すると、既存の移動マニピュレータ コンテキストがすべて変更されます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    activeHandle (int): マニピュレータの既定のアクティブハンドルを設定します。つまり、ツールを有効にしたとき最初にアクティブにするハンドルです。次の値を指定することができます。0-X軸ハンドルがアクティブ1-Y軸ハンドルがアクティブ2-Z軸ハンドルがアクティブ3-中央ハンドル(3つすべての軸)がアクティブ(既定)

    -----------------------------------------

    activeHandleNormal (int): 0-U軸ハンドルがアクティブ1-V軸ハンドルがアクティブ2-N軸ハンドルがアクティブ(既定)3-中央ハンドル(3つすべての軸)がアクティブマニピュレータモードが3の場合に限って適用されます。

    -----------------------------------------

    alignAlong ([float, float, float]): アクティブハンドルをベクトルに沿って揃えます。

    -----------------------------------------

    constrainAlongNormal (boolean): trueの場合は、最初に頂点法線方向にトランスフォームコンストレイントが適用されます。法線方向に交差が検出されなかった場合は、最近接ポイントのみが使用されます。

    -----------------------------------------

    currentActiveHandle (int): マニピュレータのアクティブハンドルを設定します。次の値を指定することができます。0-X軸ハンドルがアクティブ1-Y軸ハンドルがアクティブ2-Z軸ハンドルがアクティブ3-中央ハンドル(3つすべての軸)がアクティブ4-XY平面ハンドルがアクティブ5-YZ平面ハンドルがアクティブ6-XZ平面ハンドルがアクティブ

    -----------------------------------------

    editPivotMode (boolean): マニピュレータが編集ピボットモードにある場合はtrueを返します。

    -----------------------------------------

    editPivotPosition (boolean): 編集ピボットマニピュレータの現在位置を返します。

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    interactiveUpdate (boolean): 指定できる値はtrueまたはfalseです。このフラグ値は、モードが3(頂点法線移動)の場合に限って有効です。

    -----------------------------------------

    lastMode (int): 前の移動モードを返します。

    -----------------------------------------

    manipVisible (boolean): メインの移動マニピュレータが表示されている場合はtrueを返します。

    -----------------------------------------

    mode (int): 移動モード:0-オブジェクト空間1-ローカル空間2-ワールド空間(既定)3-頂点法線に沿って移動4-回転軸に沿って移動5-ライブオブジェクト軸に沿って移動6-カスタム軸方向10-コンポーネント空間

    -----------------------------------------

    orientAxes ([float, float, float]): 軸を中心に回転するマニピュレータの向きを指定した角度だけ変えます。

    -----------------------------------------

    orientJoint (string): ジョイントの方向のタイプを指定します。有効なオプションは、none、xyz、xzy、yxz、yzx、zxy、zyxです。

    -----------------------------------------

    orientJointEnabled (boolean): 移動時にジョイントの方向を再設定するかどうかを指定します。

    -----------------------------------------

    orientObject (string): マニピュレータを、渡されたオブジェクト/コンポーネントの方向に位置合わせします。

    -----------------------------------------

    orientTowards ([float, float, float]): アクティブハンドルをワールドポイント方向へ向けます。

    -----------------------------------------

    pinPivot (boolean): コンポーネントピボットを固定します。コンポーネントピボットが設定され、固定されると、選択項目の変更によってピボットの位置と方向がリセットされなくなります。

    -----------------------------------------

    pivotOriHandle (boolean): trueの場合は、編集中にピボットマニピュレータは方向ハンドルを表示します。既定はtrueです。

    -----------------------------------------

    position (boolean): マニピュレータの現在位置を返します。

    -----------------------------------------

    postCommand (script): ツールを終了したときに実行されるコマンドを指定します。

    -----------------------------------------

    postDragCommand ([script, string]): コマンドおよびノードタイプを指定します。このコマンドは、指定されたタイプのノードが選択範囲内に入っているときに、ドラッグを終了すると実行されます。

    -----------------------------------------

    preCommand (script): ツールを開始したときに実行されるコマンドを指定します。

    -----------------------------------------

    preDragCommand ([script, string]): コマンドおよびノードタイプを指定します。このコマンドは、指定されたタイプのノードが選択範囲内に入っているときに、ドラッグを開始すると実行されます。

    -----------------------------------------

    preserveChildPosition (boolean): falseの場合は、親が移動したときに子オブジェクトも移動します。trueの場合は、親が移動しても子のワールド空間位置は維持されます。既定はfalseです。

    -----------------------------------------

    preserveUV (boolean): falseの場合、uvは頂点の編集に合わせて変更されません。trueの場合、頂点の移動につれてテクスチャがずれるのを止めるため、新しい値を投影するようにuvが編集されます。

    -----------------------------------------

    reflection (boolean): このフラグは現在サポートしていません。対称(Reflection)は、symmetricModelingコマンドを使用した選択自体の一部として管理されます。

    -----------------------------------------

    reflectionAbout (int): このフラグは現在サポートしていません。対称(Reflection)は、symmetricModelingコマンドを使用した選択自体の一部として管理されます。

    -----------------------------------------

    reflectionAxis (int): このフラグは現在サポートしていません。対称(Reflection)は、symmetricModelingコマンドを使用した選択自体の一部として管理されます。

    -----------------------------------------

    reflectionTolerance (float): このフラグは現在サポートしていません。対称(Reflection)は、symmetricModelingコマンドを使用した選択自体の一部として管理されます。

    -----------------------------------------

    secondaryAxisOrient (string): orientJointTypeの3つのうち2番目の軸の位置合わせに使用するグローバル軸(ワールド座標)を指定します。有効なオプションはxup、yup、zup、xdown、ydown、zdown、noneです。

    -----------------------------------------

    snap (boolean): 指定できる値はtrueまたはfalseです。個々の移動の可否を指定します。trueに設定すると、すべての移動コンテキストの移動マニピュレータは、マウスをドラッグしたとき、アクティブハンドルと一緒に個々のポイントにスナップされます。ポイントの間隔は、snapValueフラグを使用して制御できます。

    -----------------------------------------

    snapComponentsRelative (boolean): 指定できる値はtrueまたはfalseです。trueに設定すると、CV/頂点のグループをスナップする間、その相対的な間隔が保持されます。falseに設定すると、すべてのCVや頂点がターゲットポイントにスナップされます(グリッドスナップ(ホットキー「x」)およびポイントスナップ(ホットキー「v」)で使用)。「x」キーを押した後マニピュレータハンドルをクリック＆ドラッグし、このフラグのON、OFFを切り替えて、一連のCVの移動の動作を確認します。

    -----------------------------------------

    snapLiveFaceCenter (boolean): 指定できる値はtrueまたはfalseです。trueに設定すると、有効なポリゴンオブジェクト上で移動する間、移動マニピュレータはオブジェクトのフェースの中心にスナップされます。

    -----------------------------------------

    snapLivePoint (boolean): 指定できる値はtrueまたはfalseです。trueに設定すると、有効なポリゴンオブジェクト上で移動する間、移動マニピュレータはオブジェクトの頂点にスナップされます。

    -----------------------------------------

    snapPivotOri (boolean): ピボットのスナップ方向です。ピボットをコンポーネントにスナップする場合のピボット方向を変更します。

    -----------------------------------------

    snapPivotPos (boolean): ピボットのスナップ位置です。ピボットをコンポーネントにスナップする場合のピボット位置を変更します。

    -----------------------------------------

    snapRelative (boolean): 指定できる値はtrueまたはfalseです。スナップが有効な場合にのみ適用されます。trueに設定すると、snapValueは移動前の元の位置に相対的に扱われます。falseに設定すると、snapValueはワールド空間の原点に相対的に扱われます。注:ローカル空間モードおよびオブジェクト空間モードでは、snapRelativeをONに設定する必要があります。絶対的な個別移動は、ローカルモードおよびオブジェクトモードではサポートされていません。

    -----------------------------------------

    snapValue (float): スナップが有効な場合にのみ適用されます。すべての移動コンテキストのマニピュレータが、「snapValue」のステップに移動します。

    -----------------------------------------

    translate ([float, float, float]): マニピュレータの現在の方向/モードの移動を返します。

    -----------------------------------------

    tweakMode (boolean): Trueにすると、マニピュレータが非表示になり、ハイライト表示されたコンポーネントを選択できるようになります。これをクリック&ドラッグ操作による1回のステップで移動することができます。

    -----------------------------------------

    xformConstraint (string): none-トランスフォームコンストレイントなしedge-エッジトランスフォームコンストレイントsurface-サーフェストランスフォームコンストレイント

    -----------------------------------------

    Return Value:
    None: string新しいコンテキストの名前照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def manipMoveLimitsCtx(exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",name: str = "") -> None:
    """
    移動制限マニピュレータのコンテキストを作成します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    Return Value:
    None: string新しく作成されたコンテキストの名前照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def manipRotateContext(activeHandle: int = 1,alignAlong: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),centerTrackball: bool = False,constrainAlongNormal: bool = False,currentActiveHandle: int = 1,editPivotMode: bool = False,editPivotPosition: bool = False,exists: bool = False,image1: str = "",image2: str = "",image3: str = "",lastMode: int = 1,manipVisible: bool = False,mode: int = 1,modifyTranslation: bool = False,orientAxes: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),orientObject: str = "",orientTowards: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),pinPivot: bool = False,pivotOriHandle: bool = False,position: bool = False,postCommand: str = "",postDragCommand: Tuple[str, str] = tuple("", ""),preCommand: str = "",preDragCommand: Tuple[str, str] = tuple("", ""),preserveChildPosition: bool = False,preserveUV: bool = False,reflection: bool = False,reflectionAbout: int = 1,reflectionAxis: int = 1,reflectionTolerance: float = 1.0,rotate: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),snap: bool = False,snapPivotOri: bool = False,snapPivotPos: bool = False,snapRelative: bool = False,snapValue: float = 1.0,tweakMode: bool = False,useCenterPivot: bool = False,useManipPivot: bool = False,useObjectPivot: bool = False,xformConstraint: str = "") -> None:
    """
    回転マニピュレータ コンテキストの作成、編集、照会を実行するときに使用します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    activeHandle (int): マニピュレータの既定のアクティブハンドルを設定します。つまり、ツールを有効にしたとき最初にアクティブにするハンドルです。次の値を指定することができます。0-X軸ハンドルがアクティブ1-Y軸ハンドルがアクティブ2-Z軸ハンドルがアクティブ3-表示回転ハンドル(外側リング)がアクティブ(既定)

    -----------------------------------------

    alignAlong ([float, float, float]): アクティブハンドルをベクトルに沿って揃えます。

    -----------------------------------------

    centerTrackball (boolean): 中心がトラックボールと同様に処理されるようにするかどうかを指定します。

    -----------------------------------------

    constrainAlongNormal (boolean): trueの場合は、最初に頂点法線方向にトランスフォームコンストレイントが適用されます。法線方向に交差が検出されなかった場合は、最近接ポイントのみが使用されます。

    -----------------------------------------

    currentActiveHandle (int): マニピュレータのアクティブハンドルを設定します。次の値を指定することができます。0-X軸ハンドルがアクティブ1-Y軸ハンドルがアクティブ2-Z軸ハンドルがアクティブ3-表示回転ハンドル(外側リング)がアクティブ4-円弧ボールがアクティブ

    -----------------------------------------

    editPivotMode (boolean): マニピュレータが編集ピボットモードにある場合はtrueを返します。

    -----------------------------------------

    editPivotPosition (boolean): 編集ピボットマニピュレータの現在位置を返します。

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    lastMode (int): 前の回転モードを返します。

    -----------------------------------------

    manipVisible (boolean): 回転マニピュレータが表示されている場合はtrueを返します。

    -----------------------------------------

    mode (int): 回転モード:0-オブジェクト空間(既定)1-ワールド空間2-ジンバル(Gimbal)モード3-カスタム軸方向10-コンポーネント空間

    -----------------------------------------

    modifyTranslation (boolean): falseの場合で、オブジェクトがその回転ピボット以外の点を中心として回転されている場合は、オブジェクトを正しい位置に配置するようにrotateTranslateアトリビュートは修正されます。trueの場合、移動アトリビュートが代わりに使用されます。既定はfalseです。

    -----------------------------------------

    orientAxes ([float, float, float]): 軸を中心に回転するマニピュレータの向きを指定した角度だけ変えます。

    -----------------------------------------

    orientObject (string): マニピュレータを、渡されたオブジェクト/コンポーネントの方向に位置合わせします。

    -----------------------------------------

    orientTowards ([float, float, float]): アクティブハンドルをワールドポイント方向へ向けます。

    -----------------------------------------

    pinPivot (boolean): コンポーネントピボットを固定します。コンポーネントピボットが設定され、固定されると、選択項目の変更によってピボットの位置と方向がリセットされなくなります。

    -----------------------------------------

    pivotOriHandle (boolean): trueの場合は、編集中にピボットマニピュレータは方向ハンドルを表示します。既定はtrueです。

    -----------------------------------------

    position (boolean): マニピュレータの現在位置を返します。

    -----------------------------------------

    postCommand (script): ツールを終了したときに実行されるコマンドを指定します。

    -----------------------------------------

    postDragCommand ([script, string]): コマンドおよびノードタイプを指定します。このコマンドは、指定されたタイプのノードが選択範囲内に入っているときに、ドラッグを終了すると実行されます。

    -----------------------------------------

    preCommand (script): ツールを開始したときに実行されるコマンドを指定します。

    -----------------------------------------

    preDragCommand ([script, string]): コマンドおよびノードタイプを指定します。このコマンドは、指定されたタイプのノードが選択範囲内に入っているときに、ドラッグを開始すると実行されます。

    -----------------------------------------

    preserveChildPosition (boolean): falseの場合は、親が回転したときに子オブジェクトは移動します。trueの場合は、親が移動しても子のワールド空間位置は維持されます。既定はfalseです。

    -----------------------------------------

    preserveUV (boolean): falseの場合、uvは頂点の編集に合わせて変更されません。trueの場合、頂点の移動につれてテクスチャがずれるのを止めるため、新しい値を投影するようにuvが編集されます。

    -----------------------------------------

    reflection (boolean): このフラグは現在サポートしていません。対称(Reflection)は、symmetricModelingコマンドを使用した選択自体の一部として管理されます。

    -----------------------------------------

    reflectionAbout (int): このフラグは現在サポートしていません。対称(Reflection)は、symmetricModelingコマンドを使用した選択自体の一部として管理されます。

    -----------------------------------------

    reflectionAxis (int): このフラグは現在サポートしていません。対称(Reflection)は、symmetricModelingコマンドを使用した選択自体の一部として管理されます。

    -----------------------------------------

    reflectionTolerance (float): このフラグは現在サポートしていません。対称(Reflection)は、symmetricModelingコマンドを使用した選択自体の一部として管理されます。

    -----------------------------------------

    rotate ([float, float, float]): マニピュレータの現在の方向/モードの回転を返します。

    -----------------------------------------

    snap (boolean): 操作で絶対スナップを使用することを指定します。

    -----------------------------------------

    snapPivotOri (boolean): ピボットのスナップ方向です。ピボットをコンポーネントにスナップする場合のピボット方向を変更します。

    -----------------------------------------

    snapPivotPos (boolean): ピボットのスナップ位置です。ピボットをコンポーネントにスナップする場合のピボット位置を変更します。

    -----------------------------------------

    snapRelative (boolean): 操作で相対スナップを使用することを指定します。

    -----------------------------------------

    snapValue (float): スナップ値を指定します。

    -----------------------------------------

    tweakMode (boolean): Trueにすると、マニピュレータが非表示になり、ハイライト表示されたコンポーネントを選択できるようになります。これをクリック&ドラッグ操作による1回のステップで回転させることができます。

    -----------------------------------------

    useCenterPivot (boolean): trueの場合、すべてのオブジェクトの回転の中心として、選択項目のバウンディングボックスの中心を使用します。

    -----------------------------------------

    useManipPivot (boolean): trueの場合、すべてのオブジェクトの回転の中心として、マニピュレータのセンターを使用します。

    -----------------------------------------

    useObjectPivot (boolean): trueの場合、回転の中心として各オブジェクトのピボットを使用します。

    -----------------------------------------

    xformConstraint (string): none-トランスフォームコンストレイントなしedge-エッジトランスフォームコンストレイントsurface-サーフェストランスフォームコンストレイント

    -----------------------------------------

    Return Value:
    None: string(新しいコンテキストの名前)照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def manipRotateLimitsCtx(exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",name: str = "") -> None:
    """
    回転制限マニピュレータのコンテキストを作成します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    Return Value:
    None: string新しく作成されたコンテキストの名前照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def manipScaleContext(activeHandle: int = 1,alignAlong: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),constrainAlongNormal: bool = False,currentActiveHandle: int = 1,editPivotMode: bool = False,editPivotPosition: bool = False,exists: bool = False,image1: str = "",image2: str = "",image3: str = "",lastMode: int = 1,manipVisible: bool = False,mode: int = 1,orientAxes: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),orientObject: str = "",orientTowards: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),pinPivot: bool = False,pivotOriHandle: bool = False,position: bool = False,postCommand: str = "",postDragCommand: Tuple[str, str] = tuple("", ""),preCommand: str = "",preDragCommand: Tuple[str, str] = tuple("", ""),preserveChildPosition: bool = False,preserveUV: bool = False,preventNegativeScale: bool = False,reflection: bool = False,reflectionAbout: int = 1,reflectionAxis: int = 1,reflectionTolerance: float = 1.0,scale: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),snap: bool = False,snapPivotOri: bool = False,snapPivotPos: bool = False,snapRelative: bool = False,snapValue: float = 1.0,tweakMode: bool = False,useManipPivot: bool = False,useObjectPivot: bool = False,xformConstraint: str = "") -> None:
    """
    スケール マニピュレータ コンテキストの作成、編集、照会を実行するときに使用します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    activeHandle (int): マニピュレータの既定のアクティブハンドルを設定します。つまり、ツールを有効にしたとき最初にアクティブにするハンドルです。次の値を指定することができます。0-X軸ハンドルがアクティブ1-Y軸ハンドルがアクティブ2-Z軸ハンドルがアクティブ3-中央ハンドル(すべての軸)がアクティブ(既定)

    -----------------------------------------

    alignAlong ([float, float, float]): アクティブハンドルをベクトルに沿って揃えます。

    -----------------------------------------

    constrainAlongNormal (boolean): trueの場合は、最初に頂点法線方向にトランスフォームコンストレイントが適用されます。法線方向に交差が検出されなかった場合は、最近接ポイントのみが使用されます。

    -----------------------------------------

    currentActiveHandle (int): マニピュレータのアクティブハンドルを設定します。次の値を指定することができます。0-X軸ハンドルがアクティブ1-Y軸ハンドルがアクティブ2-Z軸ハンドルがアクティブ3-中央ハンドル(すべての軸)がアクティブ4-XY平面ハンドルがアクティブ5-YZ平面ハンドルがアクティブ6-XZ平面ハンドルがアクティブ

    -----------------------------------------

    editPivotMode (boolean): マニピュレータが編集ピボットモードにある場合はtrueを返します。

    -----------------------------------------

    editPivotPosition (boolean): 編集ピボットマニピュレータの現在位置を返します。

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    lastMode (int): 前のスケーリングモードを返します。

    -----------------------------------------

    manipVisible (boolean): スケールマニピュレータが表示されている場合はtrueを返します。

    -----------------------------------------

    mode (int): スケールモード:0-オブジェクト空間1-ローカル空間2-ワールド空間(既定)3-頂点法線に沿ってスケール4-回転軸に沿ってスケール5-ライブオブジェクト軸に沿ってスケール6-カスタム軸方向10-コンポーネント空間

    -----------------------------------------

    orientAxes ([float, float, float]): 軸を中心に回転するマニピュレータの向きを指定した角度だけ変えます。

    -----------------------------------------

    orientObject (string): マニピュレータを、渡されたオブジェクト/コンポーネントの方向に位置合わせします。

    -----------------------------------------

    orientTowards ([float, float, float]): アクティブハンドルをワールドポイント方向へ向けます。

    -----------------------------------------

    pinPivot (boolean): コンポーネントピボットを固定します。コンポーネントピボットが設定され、固定されると、選択項目の変更によってピボットの位置と方向がリセットされなくなります。

    -----------------------------------------

    pivotOriHandle (boolean): trueの場合は、編集中にピボットマニピュレータは方向ハンドルを表示します。既定はtrueです。

    -----------------------------------------

    position (boolean): マニピュレータの現在位置を返します。

    -----------------------------------------

    postCommand (script): ツールを終了したときに実行されるコマンドを指定します。

    -----------------------------------------

    postDragCommand ([script, string]): コマンドおよびノードタイプを指定します。このコマンドは、指定されたタイプのノードが選択範囲内に入っているときに、ドラッグを終了すると実行されます。

    -----------------------------------------

    preCommand (script): ツールを開始したときに実行されるコマンドを指定します。

    -----------------------------------------

    preDragCommand ([script, string]): コマンドおよびノードタイプを指定します。このコマンドは、指定されたタイプのノードが選択範囲内に入っているときに、ドラッグを開始すると実行されます。

    -----------------------------------------

    preserveChildPosition (boolean): falseの場合は、親が回転したときに子オブジェクトは移動します。trueの場合は、親が移動しても子のワールド空間位置は維持されます。既定はfalseです。

    -----------------------------------------

    preserveUV (boolean): falseの場合、uvは頂点の編集に合わせて変更されません。trueの場合、頂点の移動につれてテクスチャがずれるのを止めるため、新しい値を投影するようにuvが編集されます。

    -----------------------------------------

    preventNegativeScale (boolean): これがtrueである場合、負のスケールは使用できません。

    -----------------------------------------

    reflection (boolean): このフラグは現在サポートしていません。対称(Reflection)は、symmetricModelingコマンドを使用した選択自体の一部として管理されます。

    -----------------------------------------

    reflectionAbout (int): このフラグは現在サポートしていません。対称(Reflection)は、symmetricModelingコマンドを使用した選択自体の一部として管理されます。

    -----------------------------------------

    reflectionAxis (int): このフラグは現在サポートしていません。対称(Reflection)は、symmetricModelingコマンドを使用した選択自体の一部として管理されます。

    -----------------------------------------

    reflectionTolerance (float): このフラグは現在サポートしていません。対称(Reflection)は、symmetricModelingコマンドを使用した選択自体の一部として管理されます。

    -----------------------------------------

    scale ([float, float, float]): マニピュレータの現在の方向/モードのスケールを返します。

    -----------------------------------------

    snap (boolean): 操作で絶対スナップを使用することを指定します。

    -----------------------------------------

    snapPivotOri (boolean): ピボットのスナップ方向です。ピボットをコンポーネントにスナップする場合のピボット方向を変更します。

    -----------------------------------------

    snapPivotPos (boolean): ピボットのスナップ位置です。ピボットをコンポーネントにスナップする場合のピボット位置を変更します。

    -----------------------------------------

    snapRelative (boolean): 操作で相対スナップを使用することを指定します。

    -----------------------------------------

    snapValue (float): スナップ値を指定します。

    -----------------------------------------

    tweakMode (boolean): Trueにすると、マニピュレータが非表示になり、ハイライト表示されたコンポーネントを選択できるようになります。これをクリック&ドラッグ操作による1回のステップでスケールすることができます。

    -----------------------------------------

    useManipPivot (boolean): マニピュレータ上でピボットするかどうかを指定します。

    -----------------------------------------

    useObjectPivot (boolean): オブジェクト上でピボットするかどうかを指定します。

    -----------------------------------------

    xformConstraint (string): none-トランスフォームコンストレイントなしedge-エッジトランスフォームコンストレイントsurface-サーフェストランスフォームコンストレイント

    -----------------------------------------

    Return Value:
    None: string(新しいコンテキストの名前)照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def manipScaleLimitsCtx(exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",name: str = "") -> None:
    """
    スケール制限マニピュレータのコンテキストを作成します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    Return Value:
    None: string新しく作成されたコンテキストの名前照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def modelCurrentTimeCtx(exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",name: str = "",percent: float = 1.0) -> None:
    """
    このコマンドを使うと、モデル ビュー内の現在のタイムの変更に使用するコンテキストを作成できます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    percent (float): タイムスライダの全範囲を表す、画面スペースのパーセンテージ(既定は50%)。

    -----------------------------------------

    Return Value:
    None: stringコンテキスト名照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def moveKeyCtx(exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",moveFunction: str = "",name: str = "",option: str = "") -> None:
    """
    グラフ エディタ(Graph Editor)にキーフレームを移動するために使用できるコンテキストが作成されます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    moveFunction (string): linear|power|constantキーをドラッグする方法を指定します。既定の移動タイプはconstantで、すべてのキーは動かす距離に比例して移動します。powerでは減衰関数が適用され、ドラッグの中心で移動量が最大になり、周囲でキーの移動量が少なくなります。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    option (string): 有効な値は、「move」、「insert」、「over」、「segmentOver」です。キーに「move」を設定しても、そのキーは前後でほかのキーを越えては移動しません。キーを「insert」すると、(-timeChangeの値に応じて)その前後にあるキーがすべて、同等の量、移動します。キーを「over」すると、このキーは(他のキーがその場所に既に存在しない限り)いつでも移動することができます。複数のキーのセットを「segmentOver」すると(このオプションは、複数のキーを移動する場合のみ、明らかなエフェクトを生み出します)、タイムレンジを指定しない限り、(時間的に)最初のキーと、最後のキーにより、セグメントが定義されます。その後、このセグメントは他のキーの上に移動できるようになり、このセグメントのための余地を作るために、キーは移動します。

    -----------------------------------------

    Return Value:
    None: stringコンテキスト名照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def orbitCtx(alternateContext: bool = False,exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",localOrbit: bool = False,name: str = "",orbitScale: float = 1.0,toolName: str = "") -> None:
    """
    オービット コンテキストの作成、編集、または照会。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    alternateContext (boolean): [Alt]+MMBおよび[Alt]+[Shift]+MMBでこのコンテキストを参照するように設定します。

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    localOrbit (boolean): カメラの注視点を中心に回転します。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    orbitScale (float): カーソルドラッグの100ピクセルごとの回転角度です。

    -----------------------------------------

    toolName (string): このコマンドが参照する特定のツールの名前です。

    -----------------------------------------

    Return Value:
    None: stringコンテキストの名前照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def panZoomCtx(alternateContext: bool = False,buttonDown: bool = False,buttonUp: bool = False,exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",name: str = "",panMode: bool = False,toolName: str = "",zoomMode: bool = False,zoomScale: float = 1.0) -> None:
    """
    このコマンドを使用して、カメラの 2D パン/ズーム コンテキストを作成します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    alternateContext (boolean): [Alt]+MMBおよび[Alt]+[Shift]+MMBでこのコンテキストを参照するように設定します。

    -----------------------------------------

    buttonDown (boolean): ボタンダウン操作を実行します。

    -----------------------------------------

    buttonUp (boolean): ボタンアップ操作を実行します。

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    panMode (boolean): このフラグを指定してカメラの2Dパンコンテキスト(既定)を作成します。

    -----------------------------------------

    toolName (string): このコマンドが参照する特定のツールの名前です。

    -----------------------------------------

    zoomMode (boolean): このフラグを指定してカメラの2Dズームコンテキストを作成します。

    -----------------------------------------

    zoomScale (float): ズームをスケールします。小さなスケールではドラッグの速度がゆっくりになります。

    -----------------------------------------

    Return Value:
    None: stringコンテキストの名前照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def paramDimContext(exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",name: str = "") -> None:
    """
    paramDimCtx ツールの登録に使用します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    Return Value:
    None: string- 作成されたコンテキストの名前照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def polyAppendFacetCtx(append: bool = False,exists: bool = False,image1: str = "",image2: str = "",image3: str = "",isRotateAvailable: bool = False,maximumNumberOfPoints: int = 1,planarConstraint: bool = False,rotate: float = 1.0,subdivision: int = 1,texture: int = 1) -> None:
    """
    新しいコンテキストを作成し、ポリゴン オブジェクトにファセットをアペンドします。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    append (boolean): polyCreateFacetCtxツールに切り替えることができます。

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    isRotateAvailable (boolean): rotateフラグに接続されたコントロールが使用可能かどうかを示します。複数のエッジをすでに選択し、それらが位置合わせていない(回転軸がない)場合、回転は使用できません。

    -----------------------------------------

    maximumNumberOfPoints (int): ポリゴンの作成前にインタラクティブに配置するポイント数の上限を設定できます。2未満の値は、上限がないことを表します。

    -----------------------------------------

    planarConstraint (boolean): 非平面のファセットの新規作成を許可または禁止します。オンにすると、すべての新しいポイントは、現在のファセットプレーンに投影されます。選択したエッジもチェックされます。

    -----------------------------------------

    rotate (float): 最初に選択したエッジを中心に現在のファセットを回転します。

    -----------------------------------------

    subdivision (int): 新しいエッジに作成するサブエッジの数です。既定は1です。

    -----------------------------------------

    texture (int): テクスチャの数です。既定値は1です。

    -----------------------------------------

    Return Value:
    None: なし照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def polyCreaseCtx(createSet: str = "",exists: bool = False,extendSelection: bool = False,image1: str = "",image2: str = "",image3: str = "",relative: bool = False) -> None:
    """
    新しいコンテキストを作成し、ポリゴン オブジェクトのコンポーネントに折り目を付けます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    createSet (string): 選択したコンポーネントのセットを作成します。

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    extendSelection (boolean): 接続されて折り目が付けられたすべてのコンポーネントに選択項目を延長することを、有効または無効にします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    relative (boolean): 既存の折り目値に相対する値を適用することを有効または無効にします。無効にすると絶対値を適用します。

    -----------------------------------------

    Return Value:
    None: なし照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def polyCreateFacetCtx(append: bool = False,exists: bool = False,image1: str = "",image2: str = "",image3: str = "",maximumNumberOfPoints: int = 1,planarConstraint: bool = False,subdivision: int = 1,texture: int = 1) -> None:
    """
    新しいコンテキストを作成し、ポリゴン オブジェクトを作成します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    append (boolean): polyAppendFacetCtxツールに切り替えることができます。

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    maximumNumberOfPoints (int): ポリゴンの作成前にインタラクティブに配置するポイント数の上限を設定できます。2未満の値は、上限がないことを表します。

    -----------------------------------------

    planarConstraint (boolean): 非平面のファセットの新規作成を許可または禁止します。オンにすると、すべての新しいポイントは、現在のファセットプレーンに投影されます。

    -----------------------------------------

    subdivision (int): 各エッジのサブディビジョンの数です。既定:1

    -----------------------------------------

    texture (int): 適用するテクスチャのメカニズムを指定します。0=テクスチャなし、1=正規化(歪んでいないテクスチャ)2=ユニット化済みテクスチャ。既定:0

    -----------------------------------------

    Return Value:
    None: なし照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def polyCutCtx(deleteFaces: bool = False,exists: bool = False,extractFaces: bool = False,extractOffset: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),image1: str = "",image2: str = "",image3: str = "") -> None:
    """
    新しいコンテキストを作成し、ポリゴン オブジェクトのファセットをカットします。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    deleteFaces (boolean): ポリゴンからカットするフェースの半分を削除するかどうかを指定します。trueの場合は削除されます。既定:false

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    extractFaces (boolean): ポリゴンからカットしたフェースを個別のシェルに抽出するかどうかを指定します。trueの場合は抽出されます。既定:false

    -----------------------------------------

    extractOffset ([linear, linear, linear]): カットするフェースのディスプレイスメントオフセットです。既定:0.5,0.5,0.5

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    Return Value:
    None: なし照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def polyCutUVCtx(loopSpeed: int = 1,mapBordersColor: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),showCheckerMap: bool = False,showTextureBorders: bool = False,showUVShellColoring: bool = False,steadyStroke: bool = False,steadyStrokeDistance: float = 1.0,symmetry: int = 1) -> None:
    """
    新しいコンテキストを作成し、ポリゴン オブジェクトの UV をカットします。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    loopSpeed (int): ループカットのスピードを編集します。

    -----------------------------------------

    mapBordersColor ([float, float, float]): 3Dビュー内のUVマップ境界エッジの色。

    -----------------------------------------

    showCheckerMap (boolean): チェッカマップを表示します。

    -----------------------------------------

    showTextureBorders (boolean): テクスチャ境界エッジを表示します。

    -----------------------------------------

    showUVShellColoring (boolean): UVシェルのカラーリングをオン/オフにします。

    -----------------------------------------

    steadyStroke (boolean): ブレ防止ストロークをオン/オフにします。

    -----------------------------------------

    steadyStrokeDistance (float): ブレ防止ストロークの距離です。

    -----------------------------------------

    symmetry (int): シンメトリモデリング。

    -----------------------------------------

    Return Value:
    None: booleansteadyStroke フラグを照会する場合のブレ防止ストロークのオン/オフを指定します。floatsteadyStrokeDistance フラグを照会する場合のブレ防止ストロークの距離です。照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def polyMergeEdgeCtx(activeNodes: bool = False,exists: bool = False,image1: str = "",image2: str = "",image3: str = "",immediate: bool = False,name: str = "",previous: bool = False,reset: bool = False,toolNode: bool = False,caching: bool = False,constructionHistory: bool = False,firstEdge: int = 1,mergeMode: int = 1,mergeTexture: bool = False,nodeState: int = 1,secondEdge: int = 1) -> None:
    """
    2 つの境界エッジを縫合します。 新しいエッジは、モードによって、最初か最後、または選択したエッジの間に配置されます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    activeNodes (boolean): ツール内でアクティブなノードを返します。

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    immediate (boolean): ツールの既定ではなく、オブジェクト上で動作します。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    previous (boolean): 以前に格納した値にリセットします。

    -----------------------------------------

    reset (boolean): 既定値にリセットします。

    -----------------------------------------

    toolNode (boolean): ツールの既定に使用されるノードを返します。

    -----------------------------------------

    caching (boolean): すべてのアトリビュートのキャッシングを切り替えることで、再計算を不要にします。

    -----------------------------------------

    constructionHistory (boolean): コンストラクションヒストリをオンまたはオフにします(適切な場合)。コンストラクションヒストリがオンの場合、対応するノードがメッシュのヒストリチェーンに挿入されます。コンストラクションヒストリがオフの場合、操作オブジェクト上に直接行われます。注:コンストラクションヒストリがすでにオブジェクトにある場合は、このフラグは無視され、ノードは必ずヒストリチェーンに挿入されます。

    -----------------------------------------

    firstEdge (int): マージする最初のエッジです。無効な既定値によって設定値を強制します。既定:-1

    -----------------------------------------

    mergeMode (int): マージのモードです。0=最初、1=エッジの両端の中間、2=2番目。既定:1

    -----------------------------------------

    mergeTexture (boolean): UV座標をジオメトリとともにマージするかどうかを決定するために使用されるブーリアン値です。既定:false

    -----------------------------------------

    nodeState (int): Mayaのディペンデンシーノードには6種類の設定可能な状態があります。通常(Normal)(0)、エフェクトなし(HasNoEffect)(1)、ブロッキング(Blocking)(2)ステータスは、グラフの評価方法を変更するために使用されます。待機-通常(Waiting-Normal)(3)、待機-エフェクトなし(Waiting-HasNoEffect)(4)、待機-ブロッキング(Waiting-Blocking)(5)は、内部でのみ使用されます。これらは、インタラクション(例:操作)の実行中にグラフのパーツを一時的に遮断します。操作が完了すると、ステータスは適切にリセットされます(例:待機-ブロッキング(Waiting-Blocking)はブロッキング(Blocking)にリセットされます)。通常(Normal)およびブロッキング(Blocking)のケースはすべてのノードに適用できますが、エフェクトなし(HasNoEffect)はノード特定です。多くのノードはこのオプションをサポートしていません。プラグインは状態をMPxNode::stateアトリビュートに保存します。誰もがこのアトリビュートを設定したり確認したりすることができます。これらの3つの状態に関するその他の詳細は次の通りです。状態説明通常(Normal)通常のノードの状態です。これが既定の設定です。エフェクトなし(HasNoEffect)エフェクトなし(HasNoEffect)オプション(別名:通過)は、同じデータタイプの出力を生成する入力を操作している場合に使用されます。ほぼすべてのデフォーマが、他のいくつかのノードと同様に、この状態をサポートします。前に説明したように、すべてのノードでサポートされるわけではありません。ノードの計算メソッドでエフェクトなし(HasNoEffect)状態のサポートを実装し、適切な操作を実行することが一般的です。プラグインはエフェクトなし(HasNoEffect)もサポートします。この状態を普通に実装するには、ノードにアルゴリズムを適用しないで、適合する出力に直接入力をコピーします。デフォーマの場合は、この状態を適用することにより、入力ジオメトリが出力でデフォーム解除されたままになります。ブロッキング(Blocking)これはディペンデンシーノードのベースクラスで実装され、すべてのノードに適用されます。ブロッキング(Blocking)は評価フェーズ中に接続に適用されます。ブロックされた接続に対する評価要求が失敗を返すと、目的プラグが現在の値を保持します。ダーティな伝播はこの状態の間接的な影響を受けますが、ブロックされた接続がクリーンアップされることはありません。ノードをブロッキング(Blocking)に設定すると、すべての送信接続が解除されたのと同じ動作になる可能性があります。ブロックされたノードの評価を直接要求しない限り、その後に再評価されることはありません。ブロックされたノードはgetAttr要求に引き続き応答しますが、下流ノードのgetAttrは、ブロックされたノードを再評価しないことに注意してください。ブロッキング(Blocking)に対して階層のルート変換を設定しても、自動的にはこの階層の子変換に影響しません。これを実行するには、ブロッキング(Blocking)状態に対してすべての子ノードを明示的に設定する必要があります。たとえば、すべての子トランスフォームをブロッキング(Blocking)に設定するには、次のスクリプトを使用します。importmaya.cmdsascmdsdefblockTree(root):nodesToBlock=[]fornodein{child:1forchildincmds.listRelatives(root,path=True,allDescendents=True)}.keys():nodesToBlock+=cmds.listConnections(node,source=True,destination=True)fornodein{source:1forsourceinnodesToBlock}.keys():cmds.setAttr('%s.nodeState'%node,2)このスクリプトを適用してオブジェクトの描画を継続できますが、アニメートは行えません。既定:kdnNormal

    -----------------------------------------

    secondEdge (int): マージする2番目のエッジです。無効な既定値によって設定値を強制します。既定:-1

    -----------------------------------------

    Return Value:
    None: stringノード名照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def polyMergeFacetCtx(activeNodes: bool = False,exists: bool = False,image1: str = "",image2: str = "",image3: str = "",immediate: bool = False,name: str = "",previous: bool = False,reset: bool = False,toolNode: bool = False,caching: bool = False,constructionHistory: bool = False,firstFacet: int = 1,mergeMode: int = 1,nodeState: int = 1,secondFacet: int = 1) -> None:
    """
    2 番目のフェースが 1 番目のフェースの穴になります。 新しく穴の開いたフェースは、モードによって、最初か最後、または選択したフェースの間に配置されます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    activeNodes (boolean): ツール内でアクティブなノードを返します。

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    immediate (boolean): ツールの既定ではなく、オブジェクト上で動作します。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    previous (boolean): 以前に格納した値にリセットします。

    -----------------------------------------

    reset (boolean): 既定値にリセットします。

    -----------------------------------------

    toolNode (boolean): ツールの既定に使用されるノードを返します。

    -----------------------------------------

    caching (boolean): すべてのアトリビュートのキャッシングを切り替えることで、再計算を不要にします。

    -----------------------------------------

    constructionHistory (boolean): コンストラクションヒストリをオンまたはオフにします(適切な場合)。コンストラクションヒストリがオンの場合、対応するノードがメッシュのヒストリチェーンに挿入されます。コンストラクションヒストリがオフの場合、操作オブジェクト上に直接行われます。注:コンストラクションヒストリがすでにオブジェクトにある場合は、このフラグは無視され、ノードは必ずヒストリチェーンに挿入されます。

    -----------------------------------------

    firstFacet (int): マージする1番目の(外部)フェースの数。

    -----------------------------------------

    mergeMode (int): フェースのマージ方法を指定します。0:2番目のフェースを1番目に移動します。1:両方のフェースがその平均に移動します。2:1番目のフェースが2番目のフェースに移動します。3,4,5:フェースが投影されたときに中央に揃わないこと以外は上述と同様です。6:移動しません。C:既定はnone(6)です。

    -----------------------------------------

    nodeState (int): Mayaのディペンデンシーノードには6種類の設定可能な状態があります。通常(Normal)(0)、エフェクトなし(HasNoEffect)(1)、ブロッキング(Blocking)(2)ステータスは、グラフの評価方法を変更するために使用されます。待機-通常(Waiting-Normal)(3)、待機-エフェクトなし(Waiting-HasNoEffect)(4)、待機-ブロッキング(Waiting-Blocking)(5)は、内部でのみ使用されます。これらは、インタラクション(例:操作)の実行中にグラフのパーツを一時的に遮断します。操作が完了すると、ステータスは適切にリセットされます(例:待機-ブロッキング(Waiting-Blocking)はブロッキング(Blocking)にリセットされます)。通常(Normal)およびブロッキング(Blocking)のケースはすべてのノードに適用できますが、エフェクトなし(HasNoEffect)はノード特定です。多くのノードはこのオプションをサポートしていません。プラグインは状態をMPxNode::stateアトリビュートに保存します。誰もがこのアトリビュートを設定したり確認したりすることができます。これらの3つの状態に関するその他の詳細は次の通りです。状態説明通常(Normal)通常のノードの状態です。これが既定の設定です。エフェクトなし(HasNoEffect)エフェクトなし(HasNoEffect)オプション(別名:通過)は、同じデータタイプの出力を生成する入力を操作している場合に使用されます。ほぼすべてのデフォーマが、他のいくつかのノードと同様に、この状態をサポートします。前に説明したように、すべてのノードでサポートされるわけではありません。ノードの計算メソッドでエフェクトなし(HasNoEffect)状態のサポートを実装し、適切な操作を実行することが一般的です。プラグインはエフェクトなし(HasNoEffect)もサポートします。この状態を普通に実装するには、ノードにアルゴリズムを適用しないで、適合する出力に直接入力をコピーします。デフォーマの場合は、この状態を適用することにより、入力ジオメトリが出力でデフォーム解除されたままになります。ブロッキング(Blocking)これはディペンデンシーノードのベースクラスで実装され、すべてのノードに適用されます。ブロッキング(Blocking)は評価フェーズ中に接続に適用されます。ブロックされた接続に対する評価要求が失敗を返すと、目的プラグが現在の値を保持します。ダーティな伝播はこの状態の間接的な影響を受けますが、ブロックされた接続がクリーンアップされることはありません。ノードをブロッキング(Blocking)に設定すると、すべての送信接続が解除されたのと同じ動作になる可能性があります。ブロックされたノードの評価を直接要求しない限り、その後に再評価されることはありません。ブロックされたノードはgetAttr要求に引き続き応答しますが、下流ノードのgetAttrは、ブロックされたノードを再評価しないことに注意してください。ブロッキング(Blocking)に対して階層のルート変換を設定しても、自動的にはこの階層の子変換に影響しません。これを実行するには、ブロッキング(Blocking)状態に対してすべての子ノードを明示的に設定する必要があります。たとえば、すべての子トランスフォームをブロッキング(Blocking)に設定するには、次のスクリプトを使用します。importmaya.cmdsascmdsdefblockTree(root):nodesToBlock=[]fornodein{child:1forchildincmds.listRelatives(root,path=True,allDescendents=True)}.keys():nodesToBlock+=cmds.listConnections(node,source=True,destination=True)fornodein{source:1forsourceinnodesToBlock}.keys():cmds.setAttr('%s.nodeState'%node,2)このスクリプトを適用してオブジェクトの描画を継続できますが、アニメートは行えません。既定:kdnNormal

    -----------------------------------------

    secondFacet (int): マージする2番目の(穴)フェースの数。

    -----------------------------------------

    Return Value:
    None: stringノード名照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def polySelectCtx(exists: bool = False,image1: str = "",image2: str = "",image3: str = "",mode: int = 1) -> None:
    """
    コンテキストを新規作成し、ポリゴン コンポーネントを選択します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    mode (int): エッジループ、エッジリング、または境界エッジモードを指定します。

    -----------------------------------------

    Return Value:
    None: なし照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def polySelectEditCtx(adjustEdgeFlow: float = 1.0,divisions: int = 1,exists: bool = False,fixQuads: bool = False,image1: str = "",image2: str = "",image3: str = "",insertWithEdgeFlow: bool = False,smoothingAngle: float = 1.0,splitType: int = 1,useEqualMultiplier: bool = False,absoluteOffset: bool = False,autoComplete: bool = False,deleteEdge: bool = False,endVertexOffset: float = 1.0,mode: int = 1,startVertexOffset: float = 1.0) -> None:
    """
    コンテキストを新規作成し、ポリゴン オブジェクトを選択して編集します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    adjustEdgeFlow (float): 配置するエッジ頂点のウェイト値。既定:1.0f

    -----------------------------------------

    divisions (int): 分割数です。既定:2

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    fixQuads (boolean): 新しいエッジの中央から5辺のフェースのエッジに渡る頂点に向かって分割することにより、5辺および3辺のフェースから四角形のフェースに変換する場合の分割を修正します。既定:false

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    insertWithEdgeFlow (boolean): エッジフローを有効にするにはtrue。それ以外の場合は、エッジフローが無効になります。既定:false

    -----------------------------------------

    smoothingAngle (angle): 新しいエッジがスムージングされる角度です。既定:kPi

    -----------------------------------------

    splitType (int): フォーマット:0-絶対(Absolute)、1-相対(Relative)、2-マルチ(Multi)。既定:TdnpolySplitRing::Relative

    -----------------------------------------

    useEqualMultiplier (boolean): マルチ分割を行う場合のプロファイルカーブのオフセットへの影響を変更します。trueの場合、分割される最短エッジに基づき、頂点は同じ距離にオフセットされます。falseの場合、挿入される各エッジループは、分割されるエッジの長さに対する相対的な距離にオフセットされます。既定:true

    -----------------------------------------

    absoluteOffset (boolean): このフラグは非推奨になりました。代わりにsplitType/stpを使用してください。このフラグは非推奨になりました。代わりにsplitType/stpを使用してください。

    -----------------------------------------

    autoComplete (boolean): trueの場合、選択の自動完了を使用します。

    -----------------------------------------

    deleteEdge (boolean): trueの場合、最後のエッジが削除され、最後の三角形が四角形に変換されます。

    -----------------------------------------

    endVertexOffset (float): ウェイト値によりエッジループの最後の頂点のオフセットをコントロールします。

    -----------------------------------------

    mode (int): 有効にするモードを指定します。使用可能なモードは1-loopおよび2-ringです。

    -----------------------------------------

    startVertexOffset (float): ウェイト値によりエッジループの最初の頂点のオフセットをコントロールします。

    -----------------------------------------

    Return Value:
    None: stringコンテキスト名照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def polyShortestPathCtx(exists: bool = False,image1: str = "",image2: str = "",image3: str = "") -> None:
    """
    3D ビューポートで 2 つの頂点または UV の間の最短エッジ パスを選択するために、新しいコンテキストを作成します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    Return Value:
    None: なし照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def polySplitCtx(enablesnap: bool = False,exists: bool = False,image1: str = "",image2: str = "",image3: str = "",magnetsnap: int = 1,precsnap: float = 1.0,smoothingangle: float = 1.0,snaptoedge: bool = False,subdivision: int = 1) -> None:
    """
    新しいコンテキストを作成し、ポリゴン オブジェクトでファセットを分割します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    enablesnap (boolean): エッジの始点、中心点、終点に対するカスタム磁石スナップを有効化/無効化します。

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    magnetsnap (int): エッジに沿って等間隔に配置する、スナップするための余分な磁石の数。

    -----------------------------------------

    precsnap (float): カスタム磁石スナップの精度。範囲は[0,100]です。値を100にした場合は、エッジをクリックすると、端点または磁石にスナップします。

    -----------------------------------------

    smoothingangle (angle): 新規作成されるエッジをハードまたはソフトのいずれにするかを制御する閾値。

    -----------------------------------------

    snaptoedge (boolean): エッジのスナップを有効か無効にします。有効を指定した場合は、現在のフェースをクリックすると一番近くの有効なエッジをスナップします。有効なエッジがなければ、クリックは無視されます。注:クリックすることによってエッジに沿った特定のポイントをスナップする点において、磁石スナップとは異なります。

    -----------------------------------------

    subdivision (int): 2つの連続エッジポイント間で追加するサブエッジの数。既定は1です。

    -----------------------------------------

    Return Value:
    None: なし照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def polySplitCtx2(exists: bool = False,image1: str = "",image2: str = "",image3: str = "",adjustEdgeFlow: float = 1.0,constrainToEdges: bool = False,edgeMagnets: int = 1,insertWithEdgeFlow: bool = False,snapTolerance: float = 1.0,snappedToEdgeColor: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),snappedToFaceColor: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),snappedToMagnetColor: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),snappedToVertexColor: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0)) -> None:
    """
    新しいコンテキストを作成し、ポリゴン オブジェクトでファセットを分割します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    adjustEdgeFlow (float): 配置するエッジ頂点のウェイト値。

    -----------------------------------------

    constrainToEdges (boolean): エッジのスナップを有効か無効にします。有効を指定した場合は、現在のフェースをクリックすると一番近くの有効なエッジをスナップします。有効なエッジがなければ、クリックは無視されます。注:クリックすることによってエッジに沿った特定のポイントをスナップする点において、磁石スナップとは異なります。

    -----------------------------------------

    edgeMagnets (int): エッジに沿って等間隔に配置する、スナップするための余分な磁石の数。

    -----------------------------------------

    insertWithEdgeFlow (boolean): エッジフローを有効にするにはtrue。それ以外の場合は、エッジフローが無効になります。

    -----------------------------------------

    snapTolerance (float): カスタム磁石スナップの精度。範囲は[0,1]です。値を1にした場合は、エッジをクリックすると、端点または磁石にスナップします。

    -----------------------------------------

    snappedToEdgeColor ([float, float, float]): エッジスナップのカラーです。

    -----------------------------------------

    snappedToFaceColor ([float, float, float]): フェーススナップのカラーです。

    -----------------------------------------

    snappedToMagnetColor ([float, float, float]): マグネットスナップのカラーです。

    -----------------------------------------

    snappedToVertexColor ([float, float, float]): 頂点スナップのカラーです。

    -----------------------------------------

    Return Value:
    None: なし照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def projectionContext(exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",name: str = "") -> None:
    """
    投影マニピュレータのコンテキストを設定します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    Return Value:
    None: stringコンテキスト名照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def propModCtx(animCurve: str = "",animCurveFalloff: Tuple[float, float] = tuple(1.0, 1.0),animCurveParam: str = "",direction: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0),exists: bool = False,image1: str = "",image2: str = "",image3: str = "",linear: float = 1.0,linearParam: Tuple[float, float] = tuple(1.0, 1.0),nurbsCurve: str = "",powerCutoff: float = 1.0,powerCutoffParam: Tuple[float, float] = tuple(1.0, 1.0),powerDegree: float = 1.0,powerDegreeParam: float = 1.0,type: int = 1,worldspace: bool = False) -> None:
    """
    比率移動コンテキストを制御します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    animCurve (string): ドロップオフのカーブとして使用するアニメーションカーブの名前です。カーブの0->側のみを使用し、距離は「seconds」にマップされます。カーブのプロファイルは、propmod機能のプロファイルとして使用されます。

    -----------------------------------------

    animCurveFalloff ([float, float]): カーブのプロファイルは、UとV両方でpropmod機能のプロファイルとして使用されます。このカーブは指定パラメータに基づいてU方向およびV方向にスケールされます。U、Vスケーリングパラメータの比率はこの機能のフットプリントを決定し、カーブ自体がカーブの大きさを規定します。

    -----------------------------------------

    animCurveParam (string): ドロップオフのカーブとして使用するアニメーションカーブの名前です。カーブの0->側のみが使用されます。距離は「seconds」にマップされ、1secondはパラメトリック空間の0.01ユニットにマップされます。

    -----------------------------------------

    direction ([float, float, float]): 距離に基くドロップオフ機能の距離を計算する方向です。既定は(111)です。

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    linear (float): linearドロップオフ機能を使用している場合、傾きになります。既定の-0.1は、ロケータにあるポイントはロケータと一緒に移動し、10ユニット離れたポイントはまったく移動しないことを意味します。

    -----------------------------------------

    linearParam ([float, float]): パラメトリックリニアドロップオフ関数を使用する場合、これらはUおよびV方向に沿った上限を指定します。

    -----------------------------------------

    nurbsCurve (string): ドロップオフカーブとして使用するNURBSカーブの名前です。最も短いポイントの距離を、ドロップオフの割合として使用します。

    -----------------------------------------

    powerCutoff (float): powerドロップオフ機能を使用している場合、距離に基くカットオフ値です。既定は10.0です。

    -----------------------------------------

    powerCutoffParam ([float, float]): powerドロップオフ機能を使用している場合、0(U)または1(V)でリミットを指定します。既定のカットオフは10.0秒です。

    -----------------------------------------

    powerDegree (float): パワードロップオフ関数を使用した場合、これがその次数になります。既定は3です。

    -----------------------------------------

    powerDegreeParam (float): パワードロップオフ関数を使用した場合、これがその次数になります。既定は3です。

    -----------------------------------------

    type (int): ドロップオフ機能のタイプを選択します。使用できる値は、リニアの場合は1、パワーの場合は2、アニムカーブの場合は4です。既定は1です。

    -----------------------------------------

    worldspace (boolean): このツールが有効となる空間を設定します。trueの場合はワールド空間、falseの場合はパラメトリック空間となります。

    -----------------------------------------

    Return Value:
    None: string作成した新しいコンテキストの名前照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def regionSelectKeyCtx(bottomManip: float = 1.0,exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",leftManip: float = 1.0,name: str = "",rightManip: float = 1.0,topManip: float = 1.0) -> None:
    """
    このコマンドは、領域選択ツールを使って、グラフ エディタ内でキーフレームをスケールするために使用するコンテキストを作成します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    bottomManip (float): スクリーンスペース内の領域ボックスの下部マニピュレータ内にある点を取得します。

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    leftManip (float): スクリーンスペース内の領域ボックスの左側マニピュレータ内にある点を取得します。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    rightManip (float): スクリーンスペース内の領域ボックスの右側マニピュレータ内にある点を取得します。

    -----------------------------------------

    topManip (float): スクリーンスペース内の領域ボックスの上部マニピュレータ内にある点を取得します。

    -----------------------------------------

    Return Value:
    None: float照会時のマニピュレータ値照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def renderWindowSelectContext(exists: bool = False,image1: str = "",image2: str = "",image3: str = "") -> None:
    """
    レンダー ビュー パネルのセレクション コンテキストを設定します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    Return Value:
    None: stringコンテキスト名照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def resetTool() -> None:
    """
    ツールを「工場出荷時設定」にリセットします。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    Return Value:
    None: なし
    """
    pass

    
def retimeKeyCtx(exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",moveByFrame: int = 1,name: str = "",snapOnFrame: bool = False) -> None:
    """
    このコマンドは、リタイム ツールを使って、グラフ エディタ内でキーフレームをスケールするために使用するコンテキストを作成します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    moveByFrame (int): 選択したリタイムバーを指定したフレーム数だけ移動します。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    snapOnFrame (boolean): 設定された場合、移動に伴いリタイムマーカーがフレーム上でスナップされます。

    -----------------------------------------

    Return Value:
    None: booleansnapOnFame 設定からの照会の値です。照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def rollCtx(alternateContext: bool = False,exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",name: str = "",rollScale: float = 1.0,toolName: str = "") -> None:
    """
    ロール コンテキストの作成、編集、照会を行います。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    alternateContext (boolean): [Alt]+MMBおよび[Alt]+[Shift]+MMBでこのコンテキストを参照するように設定します。

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    rollScale (float): カーソルドラッグの100ピクセルごとの回転角度です。

    -----------------------------------------

    toolName (string): このコマンドが参照する特定のツールの名前です。

    -----------------------------------------

    Return Value:
    None: stringコンテキストの名前照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def saveToolSettings() -> None:
    """
    このコマンドは、シェルフ上にないすべてのツールの設定をオプション変数として保存します。これは、Maya を終了するときにシステムによって自動的にコールされます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    Return Value:
    None: なし
    """
    pass

    
def scaleKeyCtx(exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",name: str = "",scaleSpecifiedKeys: bool = False,type: str = "") -> None:
    """
    このコマンドは、グラフ エディタ(Graph Editor)内でキーフレームをスケールするために使用するコンテキストを作成します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    scaleSpecifiedKeys (boolean): 指定したキーだけを調整する必要があるかどうかを確認します。falseの場合、選択したキー以外のキーがスケール時に調整されます。既定はtrueです。

    -----------------------------------------

    type (string): rect|manip使用するスケールマニピュレータのタイプを指定します(注:「rect」はマニピュレータスタイルのコンテキストで、「manip」はジェスチャスタイルのコンテキストです)。

    -----------------------------------------

    Return Value:
    None: stringタイプ フラグが照会された場合はスケール タイプbooleanscaleSpecifiedKeys フラグが照会された場合は、指定されたキーをスケールするかどうか照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def scriptCtx(allComponents: bool = False,allObjects: bool = False,animBreakdown: bool = False,animCurve: bool = False,animInTangent: bool = False,animKeyframe: bool = False,animOutTangent: bool = False,baseClassName: str = "",camera: bool = False,cluster: bool = False,collisionModel: bool = False,controlVertex: bool = False,cumulativeLists: bool = False,curve: bool = False,curveKnot: bool = False,curveOnSurface: bool = False,curveParameterPoint: bool = False,dimension: bool = False,dynamicConstraint: bool = False,edge: bool = False,editPoint: bool = False,emitter: bool = False,enableRootSelection: bool = False,escToQuit: bool = False,exists: bool = False,exitUponCompletion: bool = False,expandSelectionList: bool = False,facet: bool = False,field: bool = False,finalCommandScript: str = "",fluid: bool = False,follicle: bool = False,forceAddSelect: bool = False,hairSystem: bool = False,handle: bool = False,history: bool = False,hull: bool = False,ignoreInvalidItems: bool = False,ikEndEffector: bool = False,ikHandle: bool = False,image1: str = "",image2: str = "",image3: str = "",imagePlane: bool = False,implicitGeometry: bool = False,isoparm: bool = False,joint: bool = False,jointPivot: bool = False,lastAutoComplete: bool = False,lattice: bool = False,latticePoint: bool = False,light: bool = False,localRotationAxis: bool = False,locator: bool = False,locatorUV: bool = False,locatorXYZ: bool = False,nCloth: bool = False,nParticle: bool = False,nParticleShape: bool = False,nRigid: bool = False,name: str = "",nonlinear: bool = False,nurbsCurve: bool = False,nurbsSurface: bool = False,objectComponent: bool = False,orientationLocator: bool = False,particle: bool = False,particleShape: bool = False,plane: bool = False,polymesh: bool = False,polymeshEdge: bool = False,polymeshFace: bool = False,polymeshFreeEdge: bool = False,polymeshUV: bool = False,polymeshVertex: bool = False,polymeshVtxFace: bool = False,rigidBody: bool = False,rigidConstraint: bool = False,rotatePivot: bool = False,scalePivot: bool = False,sculpt: bool = False,selectHandle: bool = False,setAllowExcessCount: bool = False,setAutoComplete: bool = False,setAutoToggleSelection: bool = False,setDoneSelectionPrompt: str = "",setNoSelectionHeadsUp: str = "",setNoSelectionPrompt: str = "",setSelectionCount: int = 1,setSelectionHeadsUp: str = "",setSelectionPrompt: str = "",showManipulators: bool = False,spring: bool = False,springComponent: bool = False,stroke: bool = False,subdiv: bool = False,subdivMeshEdge: bool = False,subdivMeshFace: bool = False,subdivMeshPoint: bool = False,subdivMeshUV: bool = False,surfaceEdge: bool = False,surfaceFace: bool = False,surfaceKnot: bool = False,surfaceParameterPoint: bool = False,surfaceRange: bool = False,surfaceUV: bool = False,texture: bool = False,title: str = "",toolCursorType: str = "",toolFinish: str = "",toolStart: str = "",totalSelectionSets: int = 1,vertex: bool = False) -> None:
    """
    このコマンドを使用すると、ユーザはセレクション ツールに基づいて独自のツールを作成することができます。多数のセレクション リストを収集する、選択項目の動作やセレクション マスクは完全にカスタマイズできるなどが可能です。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    allComponents (boolean): すべてのコンポーネントのセレクションマスクのオン/オフを設定します。

    -----------------------------------------

    allObjects (boolean): すべてのオブジェクトのセレクションマスクのオン/オフを。

    -----------------------------------------

    animBreakdown (boolean): アニメーションのブレイクダウンのセレクションマスクのオン/オフを設定します。

    -----------------------------------------

    animCurve (boolean): アニメーションカーブのセレクションマスクのオン/オフを設定します。

    -----------------------------------------

    animInTangent (boolean): アニメーションのイン接線のセレクションマスクのオン/オフを設定します。

    -----------------------------------------

    animKeyframe (boolean): アニメーションのキーフレームのセレクションマスクのオン/オフを設定します。

    -----------------------------------------

    animOutTangent (boolean): アニメーションのアウト接線のセレクションマスクのオン/オフを設定します。

    -----------------------------------------

    baseClassName (string): この文字列を使用して、ツールのプロパティシートの関数名を生成します。たとえば「myScriptTool」が指定されている場合、プロパティシートには関数「myScriptToolValues」と「myScriptToolProperties」が使用されます。既定は「scriptTool」です。

    -----------------------------------------

    camera (boolean): カメラのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    cluster (boolean): クラスタのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    collisionModel (boolean): 衝突モデルのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    controlVertex (boolean): コントロール頂点(CV)のセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    cumulativeLists (boolean): 設定されている場合、セレクションリストは累積的です。たとえば、2番目のリストには最初のリストの項目がすべて含まれ、3番目のリストには2番目のリストの項目がすべて含まれるようになります。上記のフラグで指定したスクリプトにこの点が考慮されていることを確認してください。2つ以上のセレクションセットがある場合に問題となります。

    -----------------------------------------

    curve (boolean): カーブのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    curveKnot (boolean): カーブノットのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    curveOnSurface (boolean): カーブオンサーフェスのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    curveParameterPoint (boolean): カーブのパラメータポイントのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    dimension (boolean): ディメンションシェイプのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    dynamicConstraint (boolean): dynamicConstraintのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    edge (boolean): メッシュエッジのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    editPoint (boolean): エディットポイントのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    emitter (boolean): エミッタのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    enableRootSelection (boolean): 設定されている場合、ルートのトランスフォームレベルにある項目を選択できます。既定はfalseです。

    -----------------------------------------

    escToQuit (boolean): trueに設定されている場合、[Esc]を押すとツールが終了します。既定はfalseです。

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    exitUponCompletion (boolean): 設定されている場合、最後のセレクションセットを完了するとツールが終了します。既定はtrueです。

    -----------------------------------------

    expandSelectionList (boolean): 設定されている場合、項目ごとに1つのコンポーネントを含むようにセレクションリストが展開されます。既定ではこのように設定します。そうでない場合、同一サーフェス上の2つのアイソパラムが1つの項目として表示されます。同じオブジェクト上のコンポーネントが選択された順序で返されるようにするにはselectPref-trackSelectionOrderonコマンドを-toolStartスクリプトで使用して順序付きの選択を有効にし-toolFinishscript.

    -----------------------------------------

    facet (boolean): メッシュフェースのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    field (boolean): フィールドのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    finalCommandScript (script): ユーザがEnterキーを押し、コンテキストが完了したときに実行するスクリプトを指定します。保有しているセレクションセットの数に応じて、スクリプトで変数文字列$Selection1[]、$Selection2[],...を使用できます。

    -----------------------------------------

    fluid (boolean): 流体のセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    follicle (boolean): 毛根のセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    forceAddSelect (boolean): trueに設定されている場合、最初のセレクションセットで-setAutoToggleSelection(下記を参照)とともに使用すると、モディファイアキーが押されない限り、前の結果の計算後に最初に行う選択が「Shift」キーによる選択になります。既定はfalseです。各セレクションセットのためのフラグです。これらのフラグは多目的に使用されます。

    -----------------------------------------

    hairSystem (boolean): hairSystemのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    handle (boolean): オブジェクトハンドルのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    hull (boolean): ハルのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    ignoreInvalidItems (boolean): 複数のセレクションセットがある場合、「セレクションセットを完了」した時点でセレクションセットの状態が記録されます。その際に、そのリスト内のいくつかの項目を削除し、1つまたは複数のセレクションセット内の項目を無効にできます。このフラグが設定されている場合、それらの無効な項目は検出されますが無視されます。これが発生したことを知ることはできません。これは、あたかも無効な項目が最初の場所では選択されないようなものです(ただし、セレクションセット内には必要なだけの項目が含まれていないことになります)。このフラグが設定されていない場合、警告メッセージが表示され、エラー状態が原因でコマンドの最後のコールバックスクリプトが実行されない可能性があります。

    -----------------------------------------

    ikEndEffector (boolean): IKエンドエフェクタのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    ikHandle (boolean): IKハンドルのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    imagePlane (boolean): イメージプレーンのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    implicitGeometry (boolean): 暗黙ジオメトリのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    isoparm (boolean): サーフェスのアイソパラムのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    joint (boolean): IKハンドルのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    jointPivot (boolean): ジョイントピボットのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    lastAutoComplete (boolean): 最後のセレクションセットに対して自動完了機能が設定されている場合はtrue、設定されていない場合はfalse。通常は照会に使用しますが、-sac/setAutoCompleteフラグも指定されている場合は、-sacフラグが優先します。

    -----------------------------------------

    lattice (boolean): ラティスのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    latticePoint (boolean): ラティスポイントのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    light (boolean): ライトのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    localRotationAxis (boolean): ローカル回転軸のセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    locator (boolean): ロケータ(すべてのタイプ)のセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    locatorUV (boolean): UVロケータのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    locatorXYZ (boolean): XYZロケータのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    nCloth (boolean): nClothのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    nParticle (boolean): nParticleポイントのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    nParticleShape (boolean): nParticleシェイプのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    nRigid (boolean): nRigidのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    nonlinear (boolean): ノンリニアのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    nurbsCurve (boolean): NURBSカーブのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    nurbsSurface (boolean): NURBSサーフェスのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    objectComponent (boolean): コンポーネントフラグがオブジェクトモードに適用されます。

    -----------------------------------------

    orientationLocator (boolean): 方向ロケータのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    particle (boolean): パーティクルポイントのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    particleShape (boolean): パーティクルシェイプのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    plane (boolean): スケッチプレーンのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    polymesh (boolean): ポリゴンメッシュのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    polymeshEdge (boolean): ポリゴンメッシュのエッジのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    polymeshFace (boolean): ポリゴンメッシュのフェースのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    polymeshFreeEdge (boolean): ポリゴンメッシュのフリーエッジのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    polymeshUV (boolean): ポリゴンメッシュのUVポイントのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    polymeshVertex (boolean): ポリゴンメッシュの頂点のセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    polymeshVtxFace (boolean): ポリゴンメッシュの頂点フェースのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    rigidBody (boolean): リジッドボディのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    rigidConstraint (boolean): リジッドコンストレイントのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    rotatePivot (boolean): 回転ピボットのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    scalePivot (boolean): スケールピボットのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    sculpt (boolean): スカルプトのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    selectHandle (boolean): セレクションハンドルのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    setAllowExcessCount (boolean): 設定されている場合、項目数は最小であるとみなされます。

    -----------------------------------------

    setAutoComplete (boolean): trueに設定されている場合、指定した数の項目が選択されると同時に、ツールは次のセレクションセットを開始するか、コマンドを実行します。

    -----------------------------------------

    setAutoToggleSelection (boolean): trueに設定すると、モディファイアキーを押していない場合にShiftキーを押しているような状態になります。つまり、既定で「切り替え選択」動作を取得します。これは3Dビューのみに適用され、ハイパーグラフ(Hypergraph)やアウトライナ(Outliner)などで行われる選択には通常の規則が適用されます。

    -----------------------------------------

    setDoneSelectionPrompt (string): setAutoCompleteが設定されていない場合(下記を参照)、特定のセレクションセット内の項目が十分な数になると同時にこの文字列が表示されます。これを設定してないけれども必要になった場合は、-setSelectionPromptフラグに設定した文字列と同じ文字列が使用されます。

    -----------------------------------------

    setNoSelectionHeadsUp (string): 何も選択されていないときにヘッドアッププロンプトとして表示される文字列を指定します。これはセレクションセットごとに個別に設定する必要があります。

    -----------------------------------------

    setNoSelectionPrompt (string): 何も選択されていないときにヘルプとして表示される文字列を指定します。これはセレクションセットごとに個別に設定する必要があります。

    -----------------------------------------

    setSelectionCount (int): このセレクションセット内の項目数です。0は、完了するために必要な数を意味します。

    -----------------------------------------

    setSelectionHeadsUp (string): 何かが選択されているときにヘッドアッププロンプトとして表示される文字列を指定します。これはセレクションセットごとに個別に設定する必要があります。

    -----------------------------------------

    setSelectionPrompt (string): 選択項目がある場合に、ヘルプとして表示される文字列を指定します。これはセレクションセットごとに個別に設定する必要があります。

    -----------------------------------------

    showManipulators (boolean): 設定されている場合、すべてのアクティブオブジェクトに対してマニピュレータが表示されます。これは基本的には、マニピュレータの表示ツール(ShowManipulatorTool)を使用するようなものです。

    -----------------------------------------

    spring (boolean): スプリングシェイプのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    springComponent (boolean): 個々のスプリングのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    stroke (boolean): ペイントエフェクト(PaintEffects)のストロークのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    subdiv (boolean): サブディビジョンサーフェスのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    subdivMeshEdge (boolean): サブディビジョンサーフェスのメッシュエッジのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    subdivMeshFace (boolean): サブディビジョンサーフェスのメッシュフェースのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    subdivMeshPoint (boolean): サブディビジョンサーフェスのメッシュポイントのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    subdivMeshUV (boolean): サブディビジョンサーフェスのメッシュUVマップのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    surfaceEdge (boolean): サーフェスエッジのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    surfaceFace (boolean): サーフェスフェースのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    surfaceKnot (boolean): サーフェスノットのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    surfaceParameterPoint (boolean): サーフェスのパラメータポイントのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    surfaceRange (boolean): サーフェスレンジのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    surfaceUV (boolean): サーフェスUVのセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    texture (boolean): テクスチャのセレクションマスクのオン/オフを設定します(オブジェクトフラグ)。

    -----------------------------------------

    title (string): すべてのメッセージの前置きとして使用する文字列(すなわちツールの「名前」)を指定します。

    -----------------------------------------

    toolCursorType (string): ツール内にある場合のツールのカーソルタイプを設定する、文字列の識別子を指定します。有効な識別子は次のとおりです。「create」、「dolly」、「edit」、「pencil」、「track」、「trackHorizontal」、「trackVertical」、「transformation」、「tumble」、「zoom」、「zoomIn」、「zoomOut」、「flyThrough」、「dot」、「fleur」、「leftArrow」、「question」、「doubleHorizArrow」、「doubleVertArrow」、「sizing」、「dollyIn」、「dollyOut」、「brush」、「camera」、「noAccess」、「input」、「output」、「leftCycle」、「rightCycle」、「rightExpand」、「knife」。

    -----------------------------------------

    toolFinish (script): ユーザがスクリプトを終了するときに実行されるスクリプトを指定します。

    -----------------------------------------

    toolStart (script): ユーザが最初にスクリプトを入力するときに実行されるスクリプトを指定します。

    -----------------------------------------

    totalSelectionSets (int): セレクションセットの総数です。

    -----------------------------------------

    vertex (boolean): メッシュ頂点のセレクションマスクのオン/オフを設定します(コンポーネントフラグ)。

    -----------------------------------------

    Return Value:
    None: stringコンテキスト名照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def sculptMeshCacheChangeCloneSource(blendShape: str = "",target: str = "") -> None:
    """
    このコマンドは、クローン ターゲット ツールのソース ブレンド シェイプとターゲットを変更します。元に戻す/やり直しのために内部で使用されます。直接呼び出さないでください。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    blendShape (string): クローンツールを使用するときにソースとして使用するブレンドシェイプを設定します。照会された場合は、現在のブレンドシェイプの名前を文字列として返します。

    -----------------------------------------

    target (string): クローンツールを使用するときにターゲットとして使用するブレンドシェイプを設定します。照会された場合は、現在のブレンドシェイプのターゲットの名前を文字列として返します。

    -----------------------------------------

    Return Value:
    None: なし照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def sculptMeshCacheCtx(adjustSize: bool = False,adjustStrength: bool = False,affectAllLayers: bool = False,brushDirection: int = 1,brushSize: float = 1.0,brushStrength: float = 1.0,buildUpRate: float = 1.0,cloneHideSource: bool = False,cloneMethod: int = 1,cloneShapeSource: str = "",cloneTargetSource: str = "",constrainToSurface: bool = False,direction: int = 1,displayFrozen: bool = False,displayMask: bool = False,displayWireframe: bool = False,falloffType: int = 1,flood: float = 1.0,floodFreeze: float = 1.0,frame: bool = False,freezeSelection: bool = False,grabFollowPath: bool = False,grabSilhouette: bool = False,grabTwist: bool = False,inverted: bool = False,lastMode: str = "",lockShellBorder: bool = False,makeStroke: Tuple[int, int, int, float, float] = tuple(1, 1, 1, 1.0, 1.0),minSize: float = 1.0,minStrength: float = 1.0,mirror: int = 1,mode: str = "",orientToSurface: bool = False,recordStroke: bool = False,sculptFalloffCurve: str = "",size: float = 1.0,stampDistance: float = 1.0,stampFile: str = "",stampFlipX: bool = False,stampFlipY: bool = False,stampOrientToStroke: bool = False,stampPlacement: int = 1,stampRandomization: bool = False,stampRandomizationSeed: int = 1,stampRandomizeFlipX: bool = False,stampRandomizeFlipY: bool = False,stampRandomizePosX: float = 1.0,stampRandomizePosY: float = 1.0,stampRandomizeRotation: float = 1.0,stampRandomizeScale: float = 1.0,stampRandomizeStrength: float = 1.0,stampRotation: float = 1.0,steadyStrokeDistance: float = 1.0,strength: float = 1.0,updatePlane: bool = False,useGlobalSize: bool = False,useScreenSpace: bool = False,useStampDistance: bool = False,useStampImage: bool = False,useSteadyStroke: bool = False,wholeStroke: bool = False,wireframeAlpha: float = 1.0,wireframeColor: Tuple[float, float, float] = tuple(1.0, 1.0, 1.0)) -> None:
    """
    これはメッシュ キャッシュ スカルプト ツールのためのツール コンテキスト コマンドです。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    adjustSize (boolean): trueの場合、マウスをドラッグするとブラシサイズを編集できるモードになります。falseの場合、以前のスカルプトモードに戻ります。

    -----------------------------------------

    adjustStrength (boolean): trueの場合、マウスをドラッグするとブラシ強度を編集できるモードになります。falseの場合、以前のスカルプトモードに戻ります。

    -----------------------------------------

    affectAllLayers (boolean): trueの場合、ブラシはすべてのレイヤに同時に影響します。

    -----------------------------------------

    brushDirection (int): 指定されたブラシの方向を指定します。

    -----------------------------------------

    brushSize (float): 指定されたブラシのワールド空間サイズを指定します。

    -----------------------------------------

    brushStrength (float): 指定されたブラシのワールド空間強度を指定します。

    -----------------------------------------

    buildUpRate (float): ストロークに沿ってブラシの強度が大きくなるように指定します。

    -----------------------------------------

    cloneHideSource (boolean): クローンソースを非表示にする必要がある場合はTrueです。

    -----------------------------------------

    cloneMethod (int): ソースのデルタベクトルによるターゲットの変更方法をコントロールします。0=コピー1=追加

    -----------------------------------------

    cloneShapeSource (string): クローンを作成するシェイプソースの名前です。

    -----------------------------------------

    cloneTargetSource (string): クローンのターゲットソースの名前です。

    -----------------------------------------

    constrainToSurface (boolean): trueの場合、修正によりサーフェスの曲率が保持されます。

    -----------------------------------------

    direction (int): 頂点の移動方向を指定します。

    -----------------------------------------

    displayFrozen (boolean): falseの場合、オブジェクト上のフリーズされた領域の表示をオフにします。

    -----------------------------------------

    displayMask (boolean): Falseの場合、オブジェクト上のマスクされた領域の表示をオフにします。

    -----------------------------------------

    displayWireframe (boolean): falseの場合、オブジェクトのワイヤフレーム表示をオフにします。

    -----------------------------------------

    falloffType (int): 影響のある頂点をブラシが判別する方法を指定します。

    -----------------------------------------

    flood (float): 各頂点のブラシエフェクトを指定した値に設定します。

    -----------------------------------------

    floodFreeze (float): 各頂点のフリーズ値を指定した値に設定します。

    -----------------------------------------

    frame (boolean): スカルプトされた領域にフレームを設定します。

    -----------------------------------------

    freezeSelection (boolean): 選択したコンポーネントをフリーズします。

    -----------------------------------------

    grabFollowPath (boolean): trueの場合、グラブブラシエフェクトはマウスの動きに従います。

    -----------------------------------------

    grabSilhouette (boolean): trueの場合、グラブブラシはペイントスルーモードを使用します。

    -----------------------------------------

    grabTwist (boolean): trueの場合、グラブブラシが頂点をツイストします。

    -----------------------------------------

    inverted (boolean): trueの場合、ブラシの効果を反転します。

    -----------------------------------------

    lastMode (string): 最後にアクティブだったスカルプティングブラシのタイプを指定します。

    -----------------------------------------

    lockShellBorder (boolean): UVテクスチャブラシによって移動されないように、シェル境界をロックします。

    -----------------------------------------

    makeStroke ([uint, uint, uint, float, float]): ブラシストロークのためのサーフェスポイントのパッチを指定します。ブラシストロークを形成するために複数のパッチを指定することができます。最初の引数はメッシュのインデックスです。2番目の引数は辺のインデックスです。元の辺には0を使用し、ミラー側には1を使用します。3番目の引数は指定したメッシュ内のフェースインデックスです。4番目と5番目の引数は指定したフェース内のフェース座標です。

    -----------------------------------------

    minSize (float): 現在のブラシの最小サイズ比率を指定します。

    -----------------------------------------

    minStrength (float): 現在のブラシの最小強度比率を指定します。

    -----------------------------------------

    mirror (int): ブラシのミラーモードを指定します。

    -----------------------------------------

    mode (string): ブラシが実行するスカルプトエフェクトのタイプを指定します。

    -----------------------------------------

    orientToSurface (boolean): trueの場合、ブラシ表示をメッシュのサーフェスに位置合わせします。

    -----------------------------------------

    recordStroke (boolean): このフラグをtrueに設定すると、ストロークの記録が有効になり、makeStrokeフラグを付けて後で再生できます。

    -----------------------------------------

    sculptFalloffCurve (string): ブラシが実行するスカルプトエフェクトの減衰カーブを指定します。

    -----------------------------------------

    size (float): 現在のブラシのワールド空間サイズを指定します。

    -----------------------------------------

    stampDistance (float): ブラシのスタンプ距離を指定します。

    -----------------------------------------

    stampFile (string): スタンプとして使用するイメージファイルを指定します。

    -----------------------------------------

    stampFlipX (boolean): ブラシスタンプをX軸で反転するかどうかを指定します。

    -----------------------------------------

    stampFlipY (boolean): ブラシスタンプをY軸で反転するかどうかを指定します。

    -----------------------------------------

    stampOrientToStroke (boolean): ブラシスタンプをストローク方向に位置合わせするかどうかを指定します。

    -----------------------------------------

    stampPlacement (int): スタンプイメージの配置モードを指定します。

    -----------------------------------------

    stampRandomization (boolean): ブラシスタンプをランダム化するかどうかを指定します。

    -----------------------------------------

    stampRandomizationSeed (int): スタンプのランダムシード値を指定します。ランダムシード値を生成するには、0の値を使用します。

    -----------------------------------------

    stampRandomizeFlipX (boolean): ブラシスタンプの反転をX軸でランダム化するかどうかを指定します。

    -----------------------------------------

    stampRandomizeFlipY (boolean): ブラシスタンプの反転をY軸でランダム化するかどうかを指定します。

    -----------------------------------------

    stampRandomizePosX (float): スタンプのX位置の値をランダム化するように指定します。

    -----------------------------------------

    stampRandomizePosY (float): スタンプのY位置の値をランダム化するように指定します。

    -----------------------------------------

    stampRandomizeRotation (float): スタンプの回転値をランダム化するように指定します。

    -----------------------------------------

    stampRandomizeScale (float): スタンプのスケール値をランダム化するように指定します。

    -----------------------------------------

    stampRandomizeStrength (float): スタンプの強度値をランダム化するように指定します。

    -----------------------------------------

    stampRotation (float): スタンプイメージの回転値を指定します。

    -----------------------------------------

    steadyStrokeDistance (float): ブレ防止ストロークの距離を指定します。

    -----------------------------------------

    strength (float): 現在のブラシのワールド空間強度を指定します。

    -----------------------------------------

    updatePlane (boolean): ストローク内のスタンプごとに、下にあるツールプレーンを再計算します。

    -----------------------------------------

    useGlobalSize (boolean): trueの場合、すべてのブラシでサイズプロパティが共有されます。それ以外の場合、サイズはローカルです。

    -----------------------------------------

    useScreenSpace (boolean): trueの場合、ブラシサイズは画面領域のピクセル単位で表されます。

    -----------------------------------------

    useStampDistance (boolean): スタンプを連続的に作成しないで、ストロークに沿って分散するように設定します。

    -----------------------------------------

    useStampImage (boolean): ブラシでスタンプイメージを使用するかどうかを指定します。

    -----------------------------------------

    useSteadyStroke (boolean): ブレ防止ストロークの使用をオン/オフにします。

    -----------------------------------------

    wholeStroke (boolean): ストロークの間に影響を受けるすべての頂点から、下のツールプレーンを継続的に再計算します。

    -----------------------------------------

    wireframeAlpha (float): スカルプトされているオブジェクトのワイヤフレームのアルファ値を設定します。

    -----------------------------------------

    wireframeColor ([float, float, float]): スカルプトされているオブジェクトのワイヤフレームのカラーを設定します。値は0～1RGBにする必要があります。

    -----------------------------------------

    Return Value:
    None: なし照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def selectContext(exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",name: str = "") -> None:
    """
    選択を実行するコンテキストを作成します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    Return Value:
    None: string作成されたコンテキストの名前照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def selectKeyCtx(exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",name: str = "") -> None:
    """
    このコマンドは、グラフ エディタ内でキーフレームを選択するために使用するコンテキストを作成します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    Return Value:
    None: なし照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def selectKeyframeRegionCtx(exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",name: str = "") -> None:
    """
    このコマンドは、ドープシート エディタのキーフレーム領域内でキーフレームの選択に使用できるコンテキストを作成します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    Return Value:
    None: なし照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def setEditCtx(exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",name: str = "") -> None:
    """
    このコマンドは、セットのメンバー関係を修正するために使用できるツールを作成します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    Return Value:
    None: stringコンテキストの名前照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def setKeyCtx(breakdown: bool = False,exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",name: str = "") -> None:
    """
    このコマンドは、グラフ エディタ内でキーを設定するために使用するコンテキストを作成します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    breakdown (boolean): ブレイクダウンキーを作成するかどうかを指定します。

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    Return Value:
    None: boolean照会の場合はブレイクダウン フラグの値照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def setToolTo() -> None:
    """
    このコマンドは、コントロールを指定したコンテキストに切り替えます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    Return Value:
    None: なし
    """
    pass

    
def shadingGeometryRelCtx(exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",name: str = "",offCommand: str = "",onCommand: str = "",shadingCentric: bool = False) -> None:
    """
    このコマンドは、ジオメトリをシェーディング グループにコネクトするために使用するコンテキストを作成します。-shadingCentric フラグに true を指定すると、コンテキストをシェーディング中心モードにすることができます。つまり、まずシェーディング グループを選択すると、シェーディング グループに関連するジオメトリがハイライトされ、次にライトを選択すると割り当てが行われます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    offCommand (string): コンテキストがオンに設定されたときに発行されるコマンドです。

    -----------------------------------------

    onCommand (string): コンテキストがオンに設定されたときに発行されるコマンドです。

    -----------------------------------------

    shadingCentric (boolean): シェーディング中心モード

    -----------------------------------------

    Return Value:
    None: string作成されたコンテキストの名前照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def shadingLightRelCtx(exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",name: str = "",offCommand: str = "",onCommand: str = "",shadingCentric: bool = False) -> None:
    """
    このコマンドは、ライトをシェーディング グループにコネクトするために使用するコンテキストを作成します。-shadingCentric フラグに true を指定すると、コンテキストをシェーディング中心モードにすることができます。つまり、まずシェーディング グループを選択すると、シェーディング グループに関連するライトがハイライトされ、次にライトを選択すると割り当てが行われます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    offCommand (string): コンテキストがオンに設定されたときに発行されるコマンドです。

    -----------------------------------------

    onCommand (string): コンテキストがオンに設定されたときに発行されるコマンドです。

    -----------------------------------------

    shadingCentric (boolean): シェーディング中心モード

    -----------------------------------------

    Return Value:
    None: string作成されたコンテキストの名前照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def showManipCtx(currentNodeName: bool = False,exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",incSnap: Tuple[int, bool] = tuple(1, False),incSnapRelative: Tuple[int, bool] = tuple(1, False),incSnapUI: bool = False,incSnapValue: Tuple[int, float] = tuple(1, 1.0),lockSelection: bool = False,name: str = "",toggleIncSnap: bool = False,toolFinish: str = "",toolStart: str = "") -> None:
    """
    このコマンドは、マニピュレータ表示コンテキストを作成するために使用します。マニピュレータ表示コンテキストには、有効なマニピュレータが定義されている選択したすべてのオブジェクトのマニピュレータが表示されます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    currentNodeName (boolean): コンテキストがアタッチされる最初のノードの名前を返します。

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    incSnap ([uint, boolean]): trueの場合、コンテキストによって所有されるマニピュレータは指定したモードで漸増スナップを使用します。

    -----------------------------------------

    incSnapRelative ([uint, boolean]): trueの場合、コンテキストによって所有されるマニピュレータは指定したモードで相対漸増スナップを使用します。

    -----------------------------------------

    incSnapUI (boolean): コンテキストによって所有されるマニピュレータが必要とする漸増スナップのUIを示す要素の配列を返します。必要なUIがない場合、結果の配列には値0を持つ単一の要素が含まれます。その他の値と意味は次のとおりです。1-階調増分移動のUI2-漸増回転のUI3-漸増スケールのUI

    -----------------------------------------

    incSnapValue ([uint, float]): コンテキストによって所有されるマニピュレータが指定したモードで使用するステップ値を提供します。

    -----------------------------------------

    lockSelection (boolean): trueに設定すると、このコンテキストで現在の選択が変更されないようになります。既定ではfalseに設定されます。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    toggleIncSnap (boolean): すべてのモードのスナップを切り替えます(有効化/無効化)。

    -----------------------------------------

    toolFinish (script): ユーザがスクリプトを終了するときに実行されるスクリプトを指定します。

    -----------------------------------------

    toolStart (script): ユーザが最初にスクリプトを入力するときに実行されるスクリプトを指定します。

    -----------------------------------------

    Return Value:
    None: string新しく作成されたコンテキストの名前です。照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def skinBindCtx(about: str = "",axis: str = "",colorRamp: str = "",currentInfluence: str = "",displayInactiveMode: int = 1,displayNormalized: bool = False,exists: bool = False,falloffCurve: str = "",history: bool = False,image1: str = "",image2: str = "",image3: str = "",name: str = "",symmetry: bool = False,tolerance: float = 1.0) -> None:
    """
    このコマンドはインタラクティブ バインドのボリュームを編集するためのツールを作成します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    about (string): 軸がミラーされる空間です。有効な値は、「world」と「object」になります。

    -----------------------------------------

    axis (string): ミラー軸。有効な値は、「x」、「y」、「z」。

    -----------------------------------------

    colorRamp (string): ウェイト値を表示するためのカラーランプの値を設定します。

    -----------------------------------------

    currentInfluence (string): 設定すると、現在のインフルエンスまたはボリュームのインデックスがマニピュレータで調整されます。

    -----------------------------------------

    displayInactiveMode (int): ボリュームケージが表示されている場合は特に、選択されていない描画ボリュームの表示モードを定義します。0-なし1-近接ボリューム2-すべてのボリューム

    -----------------------------------------

    displayNormalized (boolean): 未確定の選択ウェイト(false)または確定した正規化ウェイト(true)を表示します。

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    falloffCurve (string): 減衰カーブコントロールの値を設定します。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    symmetry (boolean): ツールを対称(ミラー)モードで操作するかどうかを制御します。

    -----------------------------------------

    tolerance (float): 現在のインフルエンスに対し、別のインフルエンスが対称であるかどうかを定義するための許容値の設定です。

    -----------------------------------------

    Return Value:
    None: string作成されたコンテキストの名前照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def softModCtx(dragSlider: str = "",exists: bool = False,falseColor: bool = False,image1: str = "",image2: str = "",image3: str = "",reset: bool = False) -> None:
    """
    softMod コンテキストを制御します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    dragSlider (string): ホットキーによる半径のサイズ変更に対応したスライダモードを指定します。

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    falseColor (boolean): ソフト修正マニピュレータでの疑似カラー表示を有効/無効にします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    reset (boolean): ツールオプションを既定値にリセットします。

    -----------------------------------------

    Return Value:
    None: string- 作成した新しいコンテキストの名前照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def srtContext(exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",name: str = "") -> None:
    """
    このコマンドを使用して、複合的なトランスフォーム(移動/スケール/回転)コンテキストを作成します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    Return Value:
    None: string- 新しく作成されたコンテキストの名前照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def targetWeldCtx(exists: bool = False,image1: str = "",image2: str = "",image3: str = "",mergeToCenter: bool = False) -> None:
    """
    ポリゴン オブジェクト上で頂点を溶接するために新しいコンテキストを作成します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    mergeToCenter (boolean): mergeToCenterがtrueに設定されている場合、ソース頂点およびターゲット頂点は、マージの前に中央に移動されます。falseに設定されている場合、ソース頂点は、マージの前にターゲット頂点に移動されます。

    -----------------------------------------

    Return Value:
    None: なし照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def texCutContext(adjustSize: bool = False,displayShellBorders: bool = False,edgeSelectSensitive: float = 1.0,exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",mode: str = "",moveRatio: float = 1.0,name: str = "",size: float = 1.0,steadyStroke: bool = False,steadyStrokeDistance: float = 1.0,touchToSew: bool = False) -> None:
    """
    このコマンドは、UV カット ツールのコンテキストを作成します。このコンテキストは、UV エディタのみで動作します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    adjustSize (boolean): trueの場合、マウスをドラッグするとブラシサイズを編集できるモードになります。falseの場合、以前のモードに戻ります。

    -----------------------------------------

    displayShellBorders (boolean): シェル境界の表示を切り替えます。

    -----------------------------------------

    edgeSelectSensitive (float): エッジ選択の感度値を設定します。

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    mode (string): ブラシで実行するエフェクトのタイプ(カットまたは縫合)を指定します。

    -----------------------------------------

    moveRatio (float): エッジ長に対する切開比です。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    size (float): ブラシリングのブラシサイズ値です。

    -----------------------------------------

    steadyStroke (boolean): ブレ防止ストロークをオン/オフにします。

    -----------------------------------------

    steadyStrokeDistance (float): ブレ防止ストロークの距離です。

    -----------------------------------------

    touchToSew (boolean): タッチ-縫合モードを切り替えます。

    -----------------------------------------

    Return Value:
    None: floatbrushSize を照会する場合のブラシのサイズです。floatedgeSelectSensitive フラグを照会する場合のエッジ選択の感度値です。booleansteadyStroke フラグを照会する場合のブレ防止ストロークのオン/オフを指定します。floatsteadyStrokeDistance フラグを照会する場合のブレ防止ストロークの距離です。floatmoveRatio フラグを照会する場合のエッジの長さに相対する切開比です。stringmode フラグを照会する場合に、ブラシが実行する効果のタイプです。booleandisplayShellBorders フラグを照会する場合に、シェル境界が表示されるかどうかを指定します。booleantouchToSew フラグを照会する場合の現在のタッチ-縫合モードです。照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def texLatticeDeformContext(envelope: float = 1.0,exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",latticeColumns: int = 1,latticeRows: int = 1,name: str = "",showMoveManipulator: bool = False,snapPixelMode: bool = False,useBoundingRect: bool = False) -> None:
    """
    このコマンドは、ラティス マニピュレータで UV マップを変形するために使用できるコンテキストを作成します。このコンテキストは、テクスチャ UV エディタのみで動作します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    envelope (float): ラティスの影響を指定します。

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    latticeColumns (uint): ラティスに含まれる列のポイント数を指定します。ラティスの最大サイズは8列に制限されています。

    -----------------------------------------

    latticeRows (uint): ラティスに含まれる行の数を指定します。ラティスの最大サイズは8行に制限されています。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    showMoveManipulator (boolean): UVエディタに移動マニピュレータを表示するかどうかを指定します。

    -----------------------------------------

    snapPixelMode (boolean): ピクセルのセンターまたはコーナーにスナップされる、影響を受けるUVポイントを指定します。

    -----------------------------------------

    useBoundingRect (boolean): ラティスを構築するときは、ラティスの範囲のために選択したUVのバウンディングボックスを使用します。これが無効のとき、セレクションボックスで囲んで選択した範囲は、ラティスの範囲として使用されます。

    -----------------------------------------

    Return Value:
    None: intlatticeColumns フラグを照会する場合の列の分割数です。intlatticeRows フラグを照会する場合の行の分割数です。floatenvelope フラグを照会する場合のデフォーム エンベロープの値です。booleansnapPixelMode フラグを照会する場合に、ピクセルへのスナップがオンかどうかを指定します。booleanuseBoundingRect フラグを照会する場合に、デフォメーションにバウンディング ボックスを使用するかどうかを指定します。照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def texManipContext(exists: bool = False,image1: str = "",image2: str = "",image3: str = "") -> None:
    """
    texSelectCtx ツールを登録するために使われるコマンドです。texManipCtx ツールを登録するために使われるコマンドです。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    Return Value:
    None: string: 作成されたコンテキストの名前string: 作成されたコンテキストの名前照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def texMoveContext(editPivotMode: bool = False,exists: bool = False,image1: str = "",image2: str = "",image3: str = "",position: bool = False,snap: bool = False,snapComponentsRelative: bool = False,snapPixelMode: int = 1,snapValue: float = 1.0,tweakMode: bool = False) -> None:
    """
    テクスチャ エディタの移動マニピュレータ コンテキストの作成、編集、照会を実行するときに使用します。上記のフラグは、すべてのテクスチャ エディタの移動マニピュレータ コンテキストのグローバルの動作を制御します。コンテキストを独自に変更することはできません。上記のフラグを使ってコンテキストの動作を変更すると、既存のテクスチャ エディタの移動マニピュレータ コンテキストがすべて変更されます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    editPivotMode (boolean): マニピュレータが編集ピボットモードにある場合はtrueを返します。

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    position (boolean): マニピュレータの現在位置を返します。

    -----------------------------------------

    snap (boolean): スナップを使用するかどうかを設定または照会します。

    -----------------------------------------

    snapComponentsRelative (boolean): 次の値を指定することができます。trueまたはfalseです。trueに設定すると、UVのグループをスナップするときに、相対的な間隔が保持されます。falseに設定すると、すべてのUVがターゲットポイントにスナップされます。

    -----------------------------------------

    snapPixelMode (int): スナップモードをピクセルセンターまたは左上隅に設定します。

    -----------------------------------------

    snapValue (float): スナップ増分のサイズを設定または照会します。

    -----------------------------------------

    tweakMode (boolean): Trueにすると、マニピュレータが非表示になり、ハイライト表示されたコンポーネントを選択できるようになります。これをクリック&ドラッグ操作による1回のステップで移動することができます。

    -----------------------------------------

    Return Value:
    None: string(新しいコンテキストの名前)照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def texMoveUVShellContext(exists: bool = False,image1: str = "",image2: str = "",image3: str = "",iterations: int = 1,mask: bool = False,position: bool = False,shellBorder: float = 1.0) -> None:
    """
    テクスチャ エディタの移動マニピュレータ コンテキストの作成、編集、照会を実行するときに使用します。上記のフラグは、すべてのテクスチャ エディタの移動マニピュレータ コンテキストのグローバルの動作を制御します。コンテキストを独自に変更することはできません。上記のフラグを使ってコンテキストの動作を変更すると、既存のテクスチャ エディタの移動マニピュレータ コンテキストがすべて変更されます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    iterations (int): 実行する反復数を設定または照会します。

    -----------------------------------------

    mask (boolean): シェル上のマスキングを設定または照会します。

    -----------------------------------------

    position (boolean): マニピュレータの現在位置を返します。

    -----------------------------------------

    shellBorder (float): シェル境界のサイズを設定または照会します。

    -----------------------------------------

    Return Value:
    None: string(新しいコンテキストの名前)照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def texRotateContext(editPivotMode: bool = False,exists: bool = False,image1: str = "",image2: str = "",image3: str = "",position: bool = False,snap: bool = False,snapRelative: bool = False,snapValue: float = 1.0,tweakMode: bool = False) -> None:
    """
    UV エディタの回転コンテキストの作成、編集、照会を実行するときに使用します。上記のフラグは、すべてのテクスチャ エディタの回転コンテキストのグローバルの動作を制御します。コンテキストを独自に変更することはできません。上記のフラグを使ってコンテキストの動作を変更すると、既存のテクスチャ エディタの回転コンテキストがすべて変更されます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    editPivotMode (boolean): マニピュレータが編集ピボットモードにある場合はtrueを返します。

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    position (boolean): マニピュレータの現在位置を返します。

    -----------------------------------------

    snap (boolean): スナップを使用するかどうかを設定または照会します。

    -----------------------------------------

    snapRelative (boolean): スナップが相対的かどうかを設定または照会します。

    -----------------------------------------

    snapValue (float): スナップ増分のサイズを設定または照会します。

    -----------------------------------------

    tweakMode (boolean): Trueにすると、マニピュレータが非表示になり、ハイライト表示されたコンポーネントを選択できるようになります。これをクリック&ドラッグ操作による1回のステップで回転させることができます。

    -----------------------------------------

    Return Value:
    None: string: 作成されたコンテキストの名前照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def texScaleContext(editPivotMode: bool = False,exists: bool = False,image1: str = "",image2: str = "",image3: str = "",position: bool = False,preventNegativeScale: bool = False,snap: bool = False,snapRelative: bool = False,snapValue: float = 1.0,tweakMode: bool = False) -> None:
    """
    UV エディタのスケール コンテキストの作成、編集、照会を実行するときに使用できます。上記のフラグは、すべてのテクスチャ エディタのスケール コンテキストのグローバルの動作を制御します。コンテキストを独自に変更することはできません。上記のフラグを使ってコンテキストの動作を変更すると、既存のテクスチャ エディタのスケール コンテキストがすべて変更されます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    editPivotMode (boolean): マニピュレータが編集ピボットモードにある場合はtrueを返します。

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    position (boolean): マニピュレータの現在位置を返します。

    -----------------------------------------

    preventNegativeScale (boolean): コンポーネントの負のスケールを防止します。

    -----------------------------------------

    snap (boolean): スナップを使用するかどうかを設定または照会します。

    -----------------------------------------

    snapRelative (boolean): スナップが相対的かどうかを設定または照会します。

    -----------------------------------------

    snapValue (float): スナップ増分のサイズを設定または照会します。

    -----------------------------------------

    tweakMode (boolean): Trueにすると、マニピュレータが非表示になり、ハイライト表示されたコンポーネントを選択できるようになります。これをクリック&ドラッグ操作による1回のステップでスケールすることができます。

    -----------------------------------------

    Return Value:
    None: string: 作成されたコンテキストの名前照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def texSculptCacheContext(adjustSize: bool = False,adjustStrength: bool = False,direction: int = 1,falloffType: int = 1,floodPin: float = 1.0,grabTwist: bool = False,inverted: bool = False,mode: str = "",sculptFalloffCurve: str = "",showBrushRingDuringStroke: bool = False,size: float = 1.0,strength: float = 1.0) -> None:
    """
    これは UV キャッシュ スカルプト ツールのためのツール コンテキスト コマンドです。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    adjustSize (boolean): trueの場合、マウスをドラッグするとブラシサイズを編集できるモードになります。falseの場合、以前のスカルプトモードに戻ります。

    -----------------------------------------

    adjustStrength (boolean): trueの場合、マウスをドラッグするとブラシ強度を編集できるモードになります。falseの場合、以前のスカルプトモードに戻ります。

    -----------------------------------------

    direction (int): UVの移動先をブラシが判別する方法を指定します。

    -----------------------------------------

    falloffType (int): 影響のあるUVをブラシが判別する方法を指定します。

    -----------------------------------------

    floodPin (float): 各UVのピンの値を指定した値に設定します。

    -----------------------------------------

    grabTwist (boolean): trueの場合、グラブブラシがUVをツイストします。

    -----------------------------------------

    inverted (boolean): trueの場合、ブラシの効果を反転します。

    -----------------------------------------

    mode (string): ブラシが実行するスカルプトエフェクトのタイプを指定します。

    -----------------------------------------

    sculptFalloffCurve (string): ブラシに影響する減衰カーブを指定します。

    -----------------------------------------

    showBrushRingDuringStroke (boolean): ストローク中にブラシリングを表示するかどうかを指定します。

    -----------------------------------------

    size (float): 現在のブラシのワールド空間サイズを指定します。

    -----------------------------------------

    strength (float): 現在のブラシのワールド空間強度を指定します。

    -----------------------------------------

    Return Value:
    None: なし照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def texSelectContext(exists: bool = False,image1: str = "",image2: str = "",image3: str = "") -> None:
    """
    texSelectCtx ツールを登録するために使われるコマンドです。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    Return Value:
    None: string: 作成されたコンテキストの名前照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def texSelectShortestPathCtx(exists: bool = False,image1: str = "",image2: str = "",image3: str = "") -> None:
    """
    テクスチャ エディタ ウィンドウ内の 2 つの頂点または UV 間の最短エッジ パスを選択するために、新しいコンテキストを作成します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    Return Value:
    None: なし照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def texSmudgeUVContext(dragSlider: str = "",effectType: str = "",exists: bool = False,functionType: str = "",history: bool = False,image1: str = "",image2: str = "",image3: str = "",name: str = "",pressure: float = 1.0,radius: float = 1.0,smudgeIsMiddle: bool = False) -> None:
    """
    このコマンドは、スマッジ UV ツールのコンテキストを作成します。このコンテキストは、テクスチャ UV エディタのみで動作します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    dragSlider (string): radius|noneドラッグスライダモードを有効にします。「b」または「B」ボタンを押している間、ブラシのサイズ変更をサポートします。

    -----------------------------------------

    effectType (string): fixed|smudgeツールのエフェクトを指定します。fixedモードでは、UVは輪ゴムに貼り付けられているかのように動きます。smudgeモードでは、UVはカーソルがUVの上を引きずられたかのように動きます。

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    functionType (string): exponential|linear|constantUVがインフルエンスの中心からどのように離れるかを指定します。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    pressure (float): エフェクトタイプがsmudgeに設定されているときの、圧力の値です。

    -----------------------------------------

    radius (float): smudgeツールの半径です。この半径の範囲内のすべてのUVは、このツールの影響を受けます。

    -----------------------------------------

    smudgeIsMiddle (boolean): 既定では、左マウスボタンでスマッジを開始します。ただし、これは選択項目とコンフリクトします。smudgeIsMiddleがオンの場合、左マウスボタンの代わりに中マウスボタンでスマッジモードが有効になります。

    -----------------------------------------

    Return Value:
    None: string作成されたエフェクト タイプの名前照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def texturePlacementContext(exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",labelMapping: bool = False,name: str = "") -> None:
    """
    新しいテクスチャ配置コンテキストを作成するコマンドを作成します。既定では、コンテキスト作成時のラベル マッピングは ON になっています。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    labelMapping (boolean): コンテキストをラベルマッピングにセットします。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    Return Value:
    None: string作成されたコンテキストの名前照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def texTweakUVContext(exists: bool = False,image1: str = "",image2: str = "",image3: str = "",position: bool = False,tolerance: float = 1.0) -> None:
    """
    テクスチャ エディタの移動マニピュレータ コンテキストの作成、編集、照会を実行するときに使用します。上記のフラグは、すべてのテクスチャ エディタの移動マニピュレータ コンテキストのグローバルの動作を制御します。コンテキストを独自に変更することはできません。上記のフラグを使ってコンテキストの動作を変更すると、既存のテクスチャ エディタの移動マニピュレータ コンテキストがすべて変更されます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    position (boolean): マニピュレータの現在位置を返します。

    -----------------------------------------

    tolerance (float): 初期選択のスナップ許容値をコントロールします。

    -----------------------------------------

    Return Value:
    None: string(新しいコンテキストの名前)照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def texWinToolCtx(alternateContext: bool = False,boxzoom: bool = False,dolly: bool = False,exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",name: str = "",toolName: str = "",track: bool = False) -> None:
    """
    このクラスは、ビュー ツール(View Tool)の「track」、「dolly」、「box zoom」のコンテキストをテクスチャ ウィンドウに作成します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    alternateContext (boolean): [Alt]+MMBおよび[Alt]+[Shift]+MMBでこのコンテキストを参照するように設定します。

    -----------------------------------------

    boxzoom (boolean): ボックスズームを実行します

    -----------------------------------------

    dolly (boolean): ビューをドリーします

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    toolName (string): このコマンドが参照する特定のツールの名前です。

    -----------------------------------------

    track (boolean): ビューをトラックします

    -----------------------------------------

    Return Value:
    None: stringコンテキスト名照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def threePointArcCtx(degree: int = 1,exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",name: str = "",spans: int = 1) -> None:
    """
    threePointArcCtx コマンドは、3 ポイント円弧を作成するための新しいコンテキストを作成します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    degree (uint): 有効な値は1または3です。既定は3です。

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    spans (uint): 既定は8です。

    -----------------------------------------

    Return Value:
    None: string(新しいコンテキストの名前)照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def toolDropped() -> None:
    """
    このコマンドは、指定したツール ボタンを再生成するために必要なコマンドを構築して実行します。ツールがシェルフ上にドロップされると呼び出されます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    Return Value:
    None: なし
    """
    pass

    
def toolHasOptions() -> None:
    """
    このコマンドは、ツールにオプションがあるかどうかを照会します。オプションがある場合は true が返され、ない場合は false を返します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    Return Value:
    None: boolean照会したツールにオプションがある場合は true、それ以外の場合は false を返します。
    """
    pass

    
def toolPropertyWindow(field: str = "",helpButton: str = "",icon: str = "",inMainWindow: bool = False,location: str = "",noviceMode: bool = False,resetButton: str = "",restore: bool = False,selectCommand: str = "",showCommand: str = "") -> None:
    """
    エンド ユーザは、次の 2 つの場合のみ、このコマンドを使用してください。1. 照会(カスタム ツール プロパティ シート コード)。2. 引数なしでの既定 ツール プロパティ シートの作成。内部的には、より複雑な使い方をしています。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    field (string): プロパティシートにツール名を格納するために使うテキストフィールドの名前を設定または返します。

    -----------------------------------------

    helpButton (string): プロパティシートのツール上にヘルプを表示するために使うボタンの名前を設定または返します。

    -----------------------------------------

    icon (string): プロパティシートのツールアイコンを表示するために使うスタティックな画像オブジェクトの名前を設定または返します。

    -----------------------------------------

    inMainWindow (boolean): ツール設定が、個別のウィンドウではなくメインウィンドウに表示されるようにする場合は、trueを指定します。

    -----------------------------------------

    location (string): 現在のツールのプロパティシートの場所を設定したり返したりします。存在しなければ空の文字列を返します。

    -----------------------------------------

    noviceMode (boolean): 'novicemode'フラグを設定または返します(現在のところ使用不可)。

    -----------------------------------------

    resetButton (string): プロパティシートにツール設定を復元するために使うボタンの名前を設定または返します。

    -----------------------------------------

    restore (boolean): ツール設定ウィンドウを再度開きます。このフラグは、ツール設定が復元されない場合に、フォールバックの場所にinMainWindowフラグとともに使用できます。

    -----------------------------------------

    selectCommand (string): プロパティシートの選択コマンドを設定または返します。

    -----------------------------------------

    showCommand (string): プロパティシートの表示コマンドを設定または返します。

    -----------------------------------------

    Return Value:
    None: なし照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def trackCtx(alternateContext: bool = False,exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",name: str = "",toolName: str = "",trackGeometry: bool = False,trackScale: float = 1.0) -> None:
    """
    このコマンドは、Track コンテキストの作成に使用できます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    alternateContext (boolean): [Alt]+MMBおよび[Alt]+[Shift]+MMBでこのコンテキストを参照するように設定します。

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    toolName (string): このコマンドが参照する特定のツールの名前です。

    -----------------------------------------

    trackGeometry (boolean): ドラッグするときにジオメトリをトラッキングするかどうかを切り替えます。コンテキストは、最初のプレスと、ジオメトリまたはライブオブジェクトの交差によって、トラックプレーンを計算します。

    -----------------------------------------

    trackScale (float): カメラからトラックプレーンまでの距離を指定します。小さなスケールではドラッグの速度がゆっくりになります。

    -----------------------------------------

    Return Value:
    None: stringコンテキストの名前照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def tumbleCtx(alternateContext: bool = False,autoOrthoConstrain: bool = False,autoSetPivot: bool = False,exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",localTumble: int = 1,name: str = "",objectTumble: bool = False,orthoLock: bool = False,orthoStep: float = 1.0,toolName: str = "",tumbleScale: float = 1.0) -> None:
    """
    このコマンドは、タンブル コンテキストの作成、編集、または照会に使用できます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    alternateContext (boolean): [Alt]+MMBおよび[Alt]+[Shift]+MMBでこのコンテキストを参照するように設定します。

    -----------------------------------------

    autoOrthoConstrain (boolean): 正射投影カメラの場合、水平、垂直方向の回転は自動的にコンストレイントされます。Shiftキーを使うと、回転のコンストレイントを解除できます。

    -----------------------------------------

    autoSetPivot (boolean): カメラのピボットを選択領域またはツールのエフェクト領域に自動的に設定します

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    localTumble (int): カメラのタンブルの中心となるポイントを記述します。0はカメラのタンブルピボット、1はカメラの注視点、2はタンブルピボットでオフセットされるカメラのローカル軸です。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    objectTumble (boolean): trueの場合、カメラが選択したオブジェクトの周囲をタンブルします。

    -----------------------------------------

    orthoLock (boolean): orthoLockがオンになっている間、正射投影カメラはタンブルできません。

    -----------------------------------------

    orthoStep (angle): 正射投影回転のステップ(増分)角度を度単位で指定します。カメラが正射投影でautoOrthoConstrainがオンになっていれば、回転はこの値だけステップ(増分)されます。

    -----------------------------------------

    toolName (string): このコマンドが参照する特定のツールの名前です。

    -----------------------------------------

    tumbleScale (float): 回転スピードを設定します。タンブルのスケールが1.0の場合、カーソルを100ピクセルドラッグするごとに40度回転します。

    -----------------------------------------

    Return Value:
    None: stringコンテキストの名前照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def twoPointArcCtx(degree: int = 1,exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",name: str = "",spans: int = 1) -> None:
    """
    twoPointArcCtx コマンドは、2 ポイント円弧を作成するための新しいコンテキストを作成します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    degree (uint): 有効な値は1または3です。既定は3です。

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    spans (uint): 既定は4です。

    -----------------------------------------

    Return Value:
    None: string新しいコンテキストの名前照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def view2dToolCtx(alternateContext: bool = False,boxzoom: bool = False,dolly: bool = False,exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",name: str = "",toolName: str = "",track: bool = False) -> None:
    """
    このクラスは、View Tool「track」、「dolly」、「box zoom」のコンテキストをハイパーグラフ(Hypergraph)に作成します。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    alternateContext (boolean): [Alt]+MMBおよび[Alt]+[Shift]+MMBでこのコンテキストを参照するように設定します。

    -----------------------------------------

    boxzoom (boolean): ボックスズームを実行します

    -----------------------------------------

    dolly (boolean): ビューをドリーします

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    toolName (string): このコマンドが参照する特定のツールの名前です。

    -----------------------------------------

    track (boolean): ビューをトラックします

    -----------------------------------------

    Return Value:
    None: stringコンテキスト名照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    
def walkCtx(alternateContext: bool = False,crouchCount: float = 1.0,exists: bool = False,history: bool = False,image1: str = "",image2: str = "",image3: str = "",name: str = "",toolName: str = "",walkHeight: float = 1.0,walkSensitivity: float = 1.0,walkSpeed: float = 1.0,walkToolHud: bool = False) -> None:
    """
    このコマンドは、ウォーク コンテキストの作成、編集、または照会に使用できます。



    -----------------------------------------

    Flags:

    -----------------------------------------
    
    alternateContext (boolean): [Alt]+MMBおよび[Alt]+[Shift]+MMBでこのコンテキストを参照するように設定します。

    -----------------------------------------

    crouchCount (float): カメラのしゃがむ回数。

    -----------------------------------------

    exists (boolean): 指定したオブジェクトが存在するかどうかによって、trueまたはfalseを返します。他のフラグは無視されます。

    -----------------------------------------

    history (boolean): ツールコマンドの場合、対象となるツールのコンストラクションヒストリをオンにします。

    -----------------------------------------

    image1 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の最初のアイコンです。

    -----------------------------------------

    image2 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の2番目のアイコンです。

    -----------------------------------------

    image3 (string): コンテキストに関連付けられているツールを表す3つの可能なアイコンの中の3番目のアイコンです。

    -----------------------------------------

    name (string): これがツールコマンドの場合、ツールに適切に名前を付けます。

    -----------------------------------------

    toolName (string): このコマンドが参照する特定のツールの名前です。

    -----------------------------------------

    walkHeight (float): カメラの初期の高さ。

    -----------------------------------------

    walkSensitivity (float): カメラの回転感度。

    -----------------------------------------

    walkSpeed (float): カメラの移動スピード。

    -----------------------------------------

    walkToolHud (boolean): ウォークツールHUDを表示するかどうかをコントロールします。

    -----------------------------------------

    Return Value:
    None: stringコンテキストの名前照会モードでは、戻り値のタイプは照会されたフラグに基づきます。
    """
    pass

    